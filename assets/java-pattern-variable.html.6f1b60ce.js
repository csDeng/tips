import{_ as p,r as o,o as c,c as l,b as n,a as e,F as r,d as s,e as t}from"./app.2a7ffa2e.js";const i={},u=n("h1",{id:"jdk17-\u6A21\u5F0F\u53D8\u91CF-pattern-variable",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#jdk17-\u6A21\u5F0F\u53D8\u91CF-pattern-variable","aria-hidden":"true"},"#"),s(),n("code",null,"JDK17"),s(" \u6A21\u5F0F\u53D8\u91CF "),n("code",null,"Pattern variable")],-1),k={href:"https://docs.oracle.com/en/java/javase/17/language/pattern-matching.html#GUID-A59EF0C7-4CB7-4555-986D-0FD804555C25",target:"_blank",rel:"noopener noreferrer"},d=n("code",null,"oracle",-1),b=n("blockquote",null,[n("p",null,"Pattern matching involves testing whether an object has a particular structure, then extracting data from that object if there's a match. You can already do this with Java; however, pattern matching introduces new language enhancements that enable you to conditionally extract data from objects with code that's more concise and robust.")],-1),m=n("p",null,"\u6A21\u5F0F\u5339\u914D\u5305\u62EC\u6D4B\u8BD5\u5BF9\u8C61\u662F\u5426\u5177\u6709\u7279\u5B9A\u7684\u7ED3\u6784\uFF0C\u5982\u679C\u5B58\u5728\u5339\u914D\uFF0C\u5219\u4ECE\u8BE5\u5BF9\u8C61\u4E2D\u63D0\u53D6\u6570\u636E\u3002\u4F60\u5DF2\u7ECF\u53EF\u4EE5\u7528Java\u505A\u5230\u8FD9\u4E00\u70B9\u3002\u4F46\u662F\uFF0C\u6A21\u5F0F\u5339\u914D\u5F15\u5165\u4E86\u65B0\u7684\u8BED\u8A00\u589E\u5F3A\u529F\u80FD\uFF0C\u4F7F\u60A8\u80FD\u591F\u6709\u6761\u4EF6\u5730\u4F7F\u7528\u66F4\u7B80\u6D01\u548C\u5065\u58EE\u7684\u4EE3\u7801\u4ECE\u5BF9\u8C61\u4E2D\u63D0\u53D6\u6570\u636E\u3002",-1),h=n("h2",{id:"pattern-matching-for-the-instanceof-operator",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#pattern-matching-for-the-instanceof-operator","aria-hidden":"true"},"#"),s(),n("code",null,"Pattern Matching for the instanceof Operator")],-1),g=s("Enhance the Java programming language with "),f=n("em",null,"pattern matching",-1),y=s(" for the "),v=n("code",null,"instanceof",-1),w=s(" operator. "),_={href:"https://cr.openjdk.java.net/~briangoetz/amber/pattern-match.html",target:"_blank",rel:"noopener noreferrer"},j=s("Pattern matching"),q=s(" allows common logic in a program, namely the conditional extraction of components from objects, to be expressed more concisely and safely."),S=t(`<p>\u4F7F\u7528instanceof\u64CD\u4F5C\u7B26\u7684\u6A21\u5F0F\u5339\u914D\u589E\u5F3AJava\u7F16\u7A0B\u8BED\u8A00\u3002\u6A21\u5F0F\u5339\u914D\u5141\u8BB8\u7A0B\u5E8F\u4E2D\u7684\u516C\u5171\u903B\u8F91\uFF0C\u5373\u4ECE\u5BF9\u8C61\u4E2D\u6709\u6761\u4EF6\u5730\u63D0\u53D6\u7EC4\u4EF6\uFF0C\u4EE5\u66F4\u7B80\u6D01\u548C\u5B89\u5168\u7684\u65B9\u5F0F\u8868\u8FBE\u3002</p><h3 id="\u4E3A\u4EC0\u4E48\u5F15\u5165" tabindex="-1"><a class="header-anchor" href="#\u4E3A\u4EC0\u4E48\u5F15\u5165" aria-hidden="true">#</a> \u4E3A\u4EC0\u4E48\u5F15\u5165</h3><p>\u5728\u9879\u76EE\u5F00\u53D1\u8FC7\u7A0B\u4E2D\uFF0C\u6211\u4EEC\u7ECF\u5E38\u4F1A\u5199\u4EE5\u4E0B\u7C7B\u4F3C\u4EE3\u7801\uFF0C\u81C3\u80BF\u800C\u96BE\u770B\u3002\u8FD9\u6BB5\u4EE3\u7801\u4E3B\u8981\u662F\u8FDB\u884C\u7C7B\u578B\u5224\u65AD\uFF0C\u7136\u540E\u8FDB\u884C\u7C7B\u578B\u8F6C\u6362\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token keyword">instanceof</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> obj<span class="token punctuation">;</span>    <span class="token comment">// grr...</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>\u5F15\u5165\u6A21\u7248\u53D8\u91CF\u4E4B\u540E</li></ul>`,5),x=n("p",null,[s("A "),n("em",null,"pattern"),s(" is a combination of (1) a "),n("em",null,"predicate"),s(", or test, that can be applied to a target, and (2) a set of local variables, known as "),n("em",null,"pattern variables"),s(", that are extracted from the target only if the predicate successfully applies to it.")],-1),N=n("p",null,[s("A "),n("em",null,"type pattern"),s(" consists of a predicate that specifies a type, along with a single pattern variable.")],-1),I=s("The "),C=n("code",null,"instanceof",-1),D=s(" operator ("),J={href:"https://docs.oracle.com/javase/specs/jls/se15/html/jls-15.html#jls-15.20.2",target:"_blank",rel:"noopener noreferrer"},O=s("JLS 15.20.2"),P=s(") is extended to take a type pattern instead of just a type."),T=t(`<p>\u6A21\u5F0F\u662F(1)\u53EF\u4EE5\u5E94\u7528\u4E8E\u76EE\u6807\u7684\u8C13\u8BCD\u6216\u6D4B\u8BD5\uFF0C\u4EE5\u53CA(2)\u4E00\u7EC4\u79F0\u4E3A\u6A21\u5F0F\u53D8\u91CF\u7684\u5C40\u90E8\u53D8\u91CF\u7684\u7EC4\u5408\uFF0C\u53EA\u6709\u5F53\u8C13\u8BCD\u6210\u529F\u5730\u5E94\u7528\u4E8E\u76EE\u6807\u65F6\uFF0C\u8FD9\u4E9B\u5C40\u90E8\u53D8\u91CF\u624D\u4F1A\u4ECE\u76EE\u6807\u4E2D\u63D0\u53D6\u51FA\u6765\u3002</p><p>\u7C7B\u578B\u6A21\u5F0F\u7531\u6307\u5B9A\u7C7B\u578B\u7684\u8C13\u8BCD\u548C\u5355\u4E2A\u6A21\u5F0F\u53D8\u91CF\u7EC4\u6210\u3002</p><p>instanceof\u64CD\u4F5C\u7B26(JLS 15.20.2)\u88AB\u6269\u5C55\u4E3A\u63A5\u53D7\u7C7B\u578B\u6A21\u5F0F\u800C\u4E0D\u4EC5\u4EC5\u662F\u7C7B\u578B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token keyword">instanceof</span> <span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Let pattern matching do the work!</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote><p>(In this code, the phrase <code>String s</code> is the type pattern.) The meaning is intuitive. The <code>instanceof</code> operator matches the target <code>obj</code> to the type pattern as follows: If <code>obj</code> is an instance of <code>String</code>, then it is cast to <code>String</code> and the value is assigned to the variable <code>s</code>.</p></blockquote>`,5),E=s("Rather than using a coarse approximation for the scope of pattern variables, pattern variables instead use the concept of "),L=n("em",null,"flow scoping",-1),F=s(". A pattern variable is only in scope where the compiler can deduce that the pattern has definitely matched and the variable will have been assigned a value. This analysis is flow sensitive and works in a similar way to existing flow analyses such as "),W={href:"https://docs.oracle.com/javase/specs/jls/se15/html/jls-16.html",target:"_blank",rel:"noopener noreferrer"},V=s("definite assignment"),A=s("."),B=t(`<p>\u5982\u679C\u65AD\u8A00\u5931\u8D25 <code>obj</code> \u4E0D\u662F <code>String</code> \u5219\u4E0D\u4F1A\u4E3A <code>s</code> \u8D4B\u503C\u3002</p><h3 id="\u7EB8\u4E0A\u5F97\u6765\u7EC8\u89C9\u6D45" tabindex="-1"><a class="header-anchor" href="#\u7EB8\u4E0A\u5F97\u6765\u7EC8\u89C9\u6D45" aria-hidden="true">#</a> \u7EB8\u4E0A\u5F97\u6765\u7EC8\u89C9\u6D45</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token keyword">instanceof</span> <span class="token class-name">Point</span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// p is in scope</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
<span class="token comment">// p not in scope here</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token keyword">instanceof</span> <span class="token class-name">Point</span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>     <span class="token comment">// Sure!</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token keyword">instanceof</span> <span class="token class-name">String</span> s <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    flag <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;jdk&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token keyword">instanceof</span> <span class="token class-name">String</span> s <span class="token operator">||</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    
  <span class="token comment">// Error!</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="\u4F7F\u7528\u6A21\u7248\u53D8\u91CF\u91CD\u6784-effective-java\u90E8\u5206\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u6A21\u7248\u53D8\u91CF\u91CD\u6784-effective-java\u90E8\u5206\u4F8B\u5B50" aria-hidden="true">#</a> \u4F7F\u7528\u6A21\u7248\u53D8\u91CF\u91CD\u6784 <code>effective java</code>\u90E8\u5206\u4F8B\u5B50</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">CaseInsensitiveString</span><span class="token punctuation">)</span> 
      <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">CaseInsensitiveString</span><span class="token punctuation">)</span> o<span class="token punctuation">)</span><span class="token punctuation">.</span>s<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>\u91CD\u6784\u540E</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">CaseInsensitiveString</span> cis<span class="token punctuation">)</span> 
      <span class="token operator">&amp;&amp;</span> cis<span class="token punctuation">.</span>s<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="pattern-matching-for-switch-expressions-and-statements" tabindex="-1"><a class="header-anchor" href="#pattern-matching-for-switch-expressions-and-statements" aria-hidden="true">#</a> <code>Pattern Matching for switch Expressions and Statements</code></h2><h3 id="\u6982\u62EC" tabindex="-1"><a class="header-anchor" href="#\u6982\u62EC" aria-hidden="true">#</a> \u6982\u62EC</h3>`,11),M=n("code",null,"switch",-1),K=s(" \u901A\u8FC7\u8868\u8FBE\u5F0F\u548C\u8BED\u53E5\u7684\u6A21\u5F0F\u5339\u914D\u4EE5\u53CA\u6A21\u5F0F\u8BED\u8A00\u7684\u6269\u5C55\u6765\u589E\u5F3A Java \u7F16\u7A0B\u8BED\u8A00\u3002\u6269\u5C55\u6A21\u5F0F\u5339\u914D"),z=n("code",null,"switch",-1),G=s("\u5141\u8BB8\u9488\u5BF9\u591A\u4E2A\u6A21\u5F0F\u6D4B\u8BD5\u8868\u8FBE\u5F0F\uFF0C\u6BCF\u4E2A\u6A21\u5F0F\u90FD\u6709\u4E00\u4E2A\u7279\u5B9A\u7684\u64CD\u4F5C\uFF0C\u4EE5\u4FBF\u53EF\u4EE5\u7B80\u6D01\u3001\u5B89\u5168\u5730\u8868\u8FBE\u590D\u6742\u7684\u9762\u5411\u6570\u636E\u7684\u67E5\u8BE2\u3002\u8FD9\u662FJDK 17 \u4E2D\u7684"),R={href:"https://openjdk.java.net/jeps/12",target:"_blank",rel:"noopener noreferrer"},U=s("\u9884\u89C8\u8BED\u8A00\u529F\u80FD"),Y=s("\u3002"),H=t(`<h3 id="\u76EE\u6807" tabindex="-1"><a class="header-anchor" href="#\u76EE\u6807" aria-hidden="true">#</a> \u76EE\u6807</h3><ul><li><code>switch</code>\u901A\u8FC7\u5141\u8BB8\u6A21\u5F0F\u51FA\u73B0\u5728\u6807\u7B7E\u4E2D\u6765\u6269\u5C55\u8868\u8FBE\u5F0F\u548C\u8BED\u53E5\u7684\u8868\u73B0\u529B\u548C\u9002\u7528\u6027<code>case</code>\u3002</li><li><code>switch</code>\u5728\u9700\u8981\u65F6\u5141\u8BB8\u653E\u677E\u5386\u53F2\u4E0A\u7684\u96F6\u654C\u610F\u3002</li><li>\u5F15\u5165\u4E24\u79CD\u65B0\u7684\u6A21\u5F0F\uFF1A<em>\u53D7\u4FDD\u62A4\u7684\u6A21\u5F0F</em>\uFF0C\u5141\u8BB8\u4F7F\u7528\u4EFB\u610F\u5E03\u5C14\u8868\u8FBE\u5F0F\u6765\u7EC6\u5316\u6A21\u5F0F\u5339\u914D\u903B\u8F91\uFF0C\u4EE5\u53CA <em>\u62EC\u53F7\u6A21\u5F0F</em>\uFF0C\u4EE5\u89E3\u51B3\u4E00\u4E9B\u89E3\u6790\u6B67\u4E49\u3002</li><li>\u786E\u4FDD\u6240\u6709\u73B0\u6709<code>switch</code>\u8868\u8FBE\u5F0F\u548C\u8BED\u53E5\u7EE7\u7EED\u7F16\u8BD1\u800C\u4E0D\u8FDB\u884C\u4EFB\u4F55\u66F4\u6539\u5E76\u4EE5\u76F8\u540C\u7684\u8BED\u4E49\u6267\u884C\u3002</li><li>\u4E0D\u8981\u5F15\u5165<code>switch</code>\u4E0E\u4F20\u7EDF<code>switch</code> \u6784\u9020\u5206\u79BB\u7684\u5177\u6709\u6A21\u5F0F\u5339\u914D\u8BED\u4E49\u7684\u65B0\u7684\u7C7B\u4F3C\u8868\u8FBE\u5F0F\u6216\u8BED\u53E5\u3002</li><li><code>switch</code>\u5F53 case \u6807\u7B7E\u662F\u6A21\u5F0F\u65F6\u4E0E case \u6807\u7B7E\u662F\u4F20\u7EDF\u5E38\u91CF\u65F6\uFF0C\u4E0D\u8981\u4F7F\u8868\u8FBE\u5F0F\u6216\u8BED\u53E5\u7684\u884C\u4E3A\u6709\u6240\u4E0D\u540C\u3002</li></ul><h3 id="\u76F4\u63A5\u770B\u5F15\u5165\u524D\u540E\u7684\u5BF9\u6BD4" tabindex="-1"><a class="header-anchor" href="#\u76F4\u63A5\u770B\u5F15\u5165\u524D\u540E\u7684\u5BF9\u6BD4" aria-hidden="true">#</a> \u76F4\u63A5\u770B\u5F15\u5165\u524D\u540E\u7684\u5BF9\u6BD4</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">formatter</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> formatted <span class="token operator">=</span> <span class="token string">&quot;unknown&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">Integer</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        formatted <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;int %d&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">Long</span> l<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        formatted <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;long %d&quot;</span><span class="token punctuation">,</span> l<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">Double</span> d<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        formatted <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;double %f&quot;</span><span class="token punctuation">,</span> d<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token keyword">instanceof</span> <span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        formatted <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;String %s&quot;</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> formatted<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ul><li>\u5F15\u5165 <code>switch</code> \u589E\u5F3A\u4E4B\u540E</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">formatterPatternSwitch</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">switch</span> <span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token class-name">Integer</span> i <span class="token operator">-&gt;</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;int %d&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token class-name">Long</span> l    <span class="token operator">-&gt;</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;long %d&quot;</span><span class="token punctuation">,</span> l<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token class-name">Double</span> d  <span class="token operator">-&gt;</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;double %f&quot;</span><span class="token punctuation">,</span> d<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">case</span> <span class="token class-name">String</span> s  <span class="token operator">-&gt;</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;String %s&quot;</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">default</span>        <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h4 id="jdk8" tabindex="-1"><a class="header-anchor" href="#jdk8" aria-hidden="true">#</a> <code>jdk8</code></h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">int</span> dayOfWeek <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> dayName<span class="token punctuation">;</span>

<span class="token keyword">switch</span> <span class="token punctuation">(</span>dayOfWeek<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
        dayName <span class="token operator">=</span> <span class="token string">&quot;Monday&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
        dayName <span class="token operator">=</span> <span class="token string">&quot;Tuesday&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>
        dayName <span class="token operator">=</span> <span class="token string">&quot;Wednesday&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>
        dayName <span class="token operator">=</span> <span class="token string">&quot;Thursday&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>
        dayName <span class="token operator">=</span> <span class="token string">&quot;Friday&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span>
        dayName <span class="token operator">=</span> <span class="token string">&quot;Saturday&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">7</span><span class="token operator">:</span>
        dayName <span class="token operator">=</span> <span class="token string">&quot;Sunday&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
        dayName <span class="token operator">=</span> <span class="token string">&quot;Invalid day&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Day of the week: &quot;</span> <span class="token operator">+</span> dayName<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h4 id="jdk17" tabindex="-1"><a class="header-anchor" href="#jdk17" aria-hidden="true">#</a> <code>jdk17</code></h4><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">int</span> dayOfWeek <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>

<span class="token class-name">String</span> dayName <span class="token operator">=</span> <span class="token keyword">switch</span> <span class="token punctuation">(</span>dayOfWeek<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token number">1</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;Monday&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">2</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;Tuesday&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">3</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;Wednesday&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">4</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;Thursday&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">5</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;Friday&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">6</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;Saturday&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">7</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;Sunday&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;Invalid day&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Day of the week: &quot;</span> <span class="token operator">+</span> dayName<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h1 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h1><p>\u62E5\u62B1\u65B0\u6280\u672F\uFF0C\u7528\u5C31\u5BF9\u4E86\uFF5E</p>`,12);function Q(X,Z){const a=o("ExternalLinkIcon");return c(),l(r,null,[u,n("blockquote",null,[n("p",null,[n("a",k,[d,e(a)])])]),b,m,h,n("blockquote",null,[n("p",null,[g,f,y,v,w,n("a",_,[j,e(a)]),q])]),S,n("blockquote",null,[x,N,n("p",null,[I,C,D,n("a",J,[O,e(a)]),P])]),T,n("blockquote",null,[n("p",null,[E,L,F,n("a",W,[V,e(a)]),A])]),B,n("p",null,[M,K,z,G,n("a",R,[U,e(a)]),Y]),H],64)}var nn=p(i,[["render",Q],["__file","java-pattern-variable.html.vue"]]);export{nn as default};
