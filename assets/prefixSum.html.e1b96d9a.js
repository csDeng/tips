import{_ as t,r as o,o as c,c as l,b as n,a as p,F as r,d as s,e}from"./app.2a7ffa2e.js";const u={},i=n("h1",{id:"\u524D\u7F00\u548C",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u524D\u7F00\u548C","aria-hidden":"true"},"#"),s(" \u524D\u7F00\u548C")],-1),k={id:"_525-\u8FDE\u7EED\u6570\u7EC4-m",tabindex:"-1"},b=n("a",{class:"header-anchor",href:"#_525-\u8FDE\u7EED\u6570\u7EC4-m","aria-hidden":"true"},"#",-1),m=s(),d={href:"https://leetcode.cn/problems/contiguous-array/",target:"_blank",rel:"noopener noreferrer"},h=s("525. \u8FDE\u7EED\u6570\u7EC4"),_=s(" M"),g=e(`<details class="custom-container details"><p>\u7ED9\u5B9A\u4E00\u4E2A\u4E8C\u8FDB\u5236\u6570\u7EC4 <code>nums</code> , \u627E\u5230\u542B\u6709\u76F8\u540C\u6570\u91CF\u7684 <code>0</code> \u548C <code>1</code> \u7684\u6700\u957F\u8FDE\u7EED\u5B50\u6570\u7EC4\uFF0C\u5E76\u8FD4\u56DE\u8BE5\u5B50\u6570\u7EC4\u7684\u957F\u5EA6\u3002</p><p><strong>\u793A\u4F8B 1:</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165: nums = [0,1]
\u8F93\u51FA: 2
\u8BF4\u660E: [0, 1] \u662F\u5177\u6709\u76F8\u540C\u6570\u91CF 0 \u548C 1 \u7684\u6700\u957F\u8FDE\u7EED\u5B50\u6570\u7EC4\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>\u793A\u4F8B 2:</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165: nums = [0,1,0]
\u8F93\u51FA: 2
\u8BF4\u660E: [0, 1] (\u6216 [1, 0]) \u662F\u5177\u6709\u76F8\u540C\u6570\u91CF0\u548C1\u7684\u6700\u957F\u8FDE\u7EED\u5B50\u6570\u7EC4\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>\u63D0\u793A\uFF1A</strong></p><ul><li><code>1 &lt;= nums.length &lt;= 105</code></li><li><code>nums[i]</code> \u4E0D\u662F <code>0</code> \u5C31\u662F <code>1</code></li></ul><h3 id="\u89E3\u9898\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h3><blockquote><p>\u56E0\u4E3A\u53EA\u4F1A\u51FA\u73B00\u62161\uFF0C\u6C42\u76F8\u540C\u6570\u91CF\u7684\u6700\u957F\u8FDE\u7EED\u5B50\u6570\u7EC4\uFF0C\u6240\u4EE5\u4E3A\u4E86\u65B9\u4FBF\uFF0C\u6211\u4EEC\u628A0\u5B9A\u4E49\u4E3A<code>-1</code>\uFF0C\u5F53\u524D\u7F00\u548C\u7B49\u4E8E0\u65F6\uFF0C\u8BF4\u660E\uFF0C\u5F53\u524D\u5B50\u6570\u7EC4\u768401\u76F8\u7B49\u3002</p></blockquote><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">findMaxLength</span><span class="token punctuation">(</span>nums <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>maxLength <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	n <span class="token operator">:=</span> <span class="token function">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>
	<span class="token comment">/**
	\u8BB0\u5F55\u524D\u7F00\u548C\u51FA\u73B0\u7684\u4E0B\u6807
	*/</span>
	hash <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">}</span>
	k <span class="token operator">:=</span> <span class="token number">0</span>
	<span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
			k<span class="token operator">--</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			k<span class="token operator">++</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> prevIndex<span class="token punctuation">,</span> ok <span class="token operator">:=</span> hash<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
			maxLength <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>maxLength<span class="token punctuation">,</span> i<span class="token operator">-</span>prevIndex<span class="token punctuation">)</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			hash<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> i
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> maxLength
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">max</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> a <span class="token operator">&gt;</span> b <span class="token punctuation">{</span>
		<span class="token keyword">return</span> a
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> b
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div></details>`,1),f={id:"_523-\u8FDE\u7EED\u7684\u5B50\u6570\u7EC4\u548C-\u529B\u6263-leetcode-m",tabindex:"-1"},x=n("a",{class:"header-anchor",href:"#_523-\u8FDE\u7EED\u7684\u5B50\u6570\u7EC4\u548C-\u529B\u6263-leetcode-m","aria-hidden":"true"},"#",-1),y=s(),v={href:"https://leetcode.cn/problems/continuous-subarray-sum/",target:"_blank",rel:"noopener noreferrer"},w=s("523. \u8FDE\u7EED\u7684\u5B50\u6570\u7EC4\u548C - \u529B\u6263\uFF08LeetCode\uFF09M"),L=e(`<details class="custom-container details"><p>\u7ED9\u4F60\u4E00\u4E2A\u6574\u6570\u6570\u7EC4 nums \u548C\u4E00\u4E2A\u6574\u6570 k \uFF0C\u7F16\u5199\u4E00\u4E2A\u51FD\u6570\u6765\u5224\u65AD\u8BE5\u6570\u7EC4\u662F\u5426\u542B\u6709\u540C\u65F6\u6EE1\u8DB3\u4E0B\u8FF0\u6761\u4EF6\u7684\u8FDE\u7EED\u5B50\u6570\u7EC4\uFF1A</p><p>\u5B50\u6570\u7EC4\u5927\u5C0F \u81F3\u5C11\u4E3A 2 \uFF0C\u4E14 \u5B50\u6570\u7EC4\u5143\u7D20\u603B\u548C\u4E3A k \u7684\u500D\u6570\u3002 \u5982\u679C\u5B58\u5728\uFF0C\u8FD4\u56DE true \uFF1B\u5426\u5219\uFF0C\u8FD4\u56DE false \u3002</p><p>\u5982\u679C\u5B58\u5728\u4E00\u4E2A\u6574\u6570 n \uFF0C\u4EE4\u6574\u6570 x \u7B26\u5408 x = n * k \uFF0C\u5219\u79F0 x \u662F k \u7684\u4E00\u4E2A\u500D\u6570\u30020 \u59CB\u7EC8\u89C6\u4E3A k \u7684\u4E00\u4E2A\u500D\u6570\u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165\uFF1Anums = [23,2,4,6,7], k = 6 \u8F93\u51FA\uFF1Atrue \u89E3\u91CA\uFF1A[2,4] \u662F\u4E00\u4E2A\u5927\u5C0F\u4E3A 2 \u7684\u5B50\u6570\u7EC4\uFF0C\u5E76\u4E14\u548C\u4E3A 6 \u3002 \u793A\u4F8B 2\uFF1A</p><p>\u8F93\u5165\uFF1Anums = [23,2,6,4,7], k = 6 \u8F93\u51FA\uFF1Atrue \u89E3\u91CA\uFF1A[23, 2, 6, 4, 7] \u662F\u5927\u5C0F\u4E3A 5 \u7684\u5B50\u6570\u7EC4\uFF0C\u5E76\u4E14\u548C\u4E3A 42 \u3002 42 \u662F 6 \u7684\u500D\u6570\uFF0C\u56E0\u4E3A 42 = 7 * 6 \u4E14 7 \u662F\u4E00\u4E2A\u6574\u6570\u3002 \u793A\u4F8B 3\uFF1A</p><p>\u8F93\u5165\uFF1Anums = [23,2,6,4,7], k = 13 \u8F93\u51FA\uFF1Afalse</p><p>\u63D0\u793A\uFF1A</p><p>1 &lt;= nums.length &lt;= 105 0 &lt;= nums[i] &lt;= 109 0 &lt;= sum(nums[i]) &lt;= 231 - 1 1 &lt;= k &lt;= 231 - 1</p><p>\u6765\u6E90\uFF1A\u529B\u6263\uFF08LeetCode\uFF09 \u94FE\u63A5\uFF1Ahttps://leetcode.cn/problems/continuous-subarray-sum \u8457\u4F5C\u6743\u5F52\u9886\u6263\u7F51\u7EDC\u6240\u6709\u3002\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u8054\u7CFB\u5B98\u65B9\u6388\u6743\uFF0C\u975E\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u6CE8\u660E\u51FA\u5904\u3002</p><h3 id="\u89E3\u9898\u601D\u8DEF-1" tabindex="-1"><a class="header-anchor" href="#\u89E3\u9898\u601D\u8DEF-1" aria-hidden="true">#</a> \u89E3\u9898\u601D\u8DEF</h3><blockquote><p>\u56E0\u4E3A\u9898\u76EE\u8981\u6C42\u7684\u662F\u5B50\u6570\u7EC4\u5143\u7D20\u603B\u548C\u662Fk\u7684\u500D\u6570\uFF0C\u4E5F\u5C31\u662F\u8BF4\uFF0C\u9700\u8981\u53D6\u6A21\u8FD0\u7B97\u3002</p><p>\u6240\u4EE5\uFF0C\u5728\u6C42\u524D\u7F00\u548C\u7684\u65F6\u5019\uFF0C\u76F4\u63A5\u6C42\u4F59\u6570\uFF0C\u5F53\u51FA\u73B0\u76F8\u540C\u4F59\u6570\u7684\u65F6\u5019\uFF0C\u8BF4\u660E\u5F53\u524D\u5B50\u6570\u7EC4\u7684\u524D\u7F00\u548C\u7B26\u5408\u500D\u6570\u8981\u6C42\uFF0C\u7136\u540E\u5224\u65AD\u5B50\u6570\u7EC4\u957F\u5EA6\uFF0C\u5982\u679C\u7B26\u5408\u6761\u4EF6\u5219\u76F4\u63A5\u8FD4\u56DE\u3002</p></blockquote><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">checkSubarraySum</span><span class="token punctuation">(</span>nums <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> k <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span>
	n <span class="token operator">:=</span> <span class="token function">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>
	<span class="token keyword">if</span> n <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">false</span>
	<span class="token punctuation">}</span>
	<span class="token comment">/**
	\u89C4\u5B9A\u7A7A\u7684\u524D\u7F00\u7684\u7ED3\u675F\u4E0B\u6807\u4E3A -1\uFF0C
	\u7531\u4E8E\u7A7A\u7684\u524D\u7F00\u7684\u5143\u7D20\u548C\u4E3A 0\uFF0C\u56E0\u6B64\u5728\u54C8\u5E0C\u8868\u4E2D\u5B58\u5165\u952E\u503C\u5BF9 (0,-1)\u3002
	*/</span>
	prevSum <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">}</span>
	remainder <span class="token operator">:=</span> <span class="token number">0</span>

	<span class="token keyword">for</span> i<span class="token punctuation">,</span> num <span class="token operator">:=</span> <span class="token keyword">range</span> nums <span class="token punctuation">{</span>
		remainder <span class="token operator">=</span> <span class="token punctuation">(</span>remainder <span class="token operator">+</span> num<span class="token punctuation">)</span> <span class="token operator">%</span> k

		<span class="token keyword">if</span> prevIndex<span class="token punctuation">,</span> ok <span class="token operator">:=</span> prevSum<span class="token punctuation">[</span>remainder<span class="token punctuation">]</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
			<span class="token keyword">if</span> i<span class="token operator">-</span>prevIndex <span class="token operator">&gt;=</span> <span class="token number">2</span> <span class="token punctuation">{</span>
				<span class="token keyword">return</span> <span class="token boolean">true</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			prevSum<span class="token punctuation">[</span>remainder<span class="token punctuation">]</span> <span class="token operator">=</span> i
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token boolean">false</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div></details>`,1);function S(I,q){const a=o("ExternalLinkIcon");return c(),l(r,null,[i,n("h2",k,[b,m,n("a",d,[h,p(a)]),_]),g,n("h2",f,[x,y,n("a",v,[w,p(a)])]),L],64)}var V=t(u,[["render",S],["__file","prefixSum.html.vue"]]);export{V as default};
