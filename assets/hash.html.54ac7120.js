import{_ as n,e as s}from"./app.2a7ffa2e.js";const a={},p=s(`<h1 id="\u54C8\u5E0C\u8868" tabindex="-1"><a class="header-anchor" href="#\u54C8\u5E0C\u8868" aria-hidden="true">#</a> \u54C8\u5E0C\u8868</h1><h2 id="_1-\u6709\u6548\u5B57\u6BCD\u7684\u5F02\u4F4D\u8BCD-e" tabindex="-1"><a class="header-anchor" href="#_1-\u6709\u6548\u5B57\u6BCD\u7684\u5F02\u4F4D\u8BCD-e" aria-hidden="true">#</a> 1.\u6709\u6548\u5B57\u6BCD\u7684\u5F02\u4F4D\u8BCD E</h2><details class="custom-container details"><blockquote><p>\u7ED9\u5B9A\u4E24\u4E2A\u5B57\u7B26\u4E32 s \u548C t \uFF0C\u7F16\u5199\u4E00\u4E2A\u51FD\u6570\u6765\u5224\u65AD t \u662F\u5426\u662F s \u7684\u5B57\u6BCD\u5F02\u4F4D\u8BCD\u3002</p><p>\u6CE8\u610F\uFF1A\u82E5 s \u548C t \u4E2D\u6BCF\u4E2A\u5B57\u7B26\u51FA\u73B0\u7684\u6B21\u6570\u90FD\u76F8\u540C\uFF0C\u5219\u79F0 s \u548C t \u4E92\u4E3A\u5B57\u6BCD\u5F02\u4F4D\u8BCD\u3002</p><p>\u793A\u4F8B 1:</p><p>\u8F93\u5165: s = &quot;anagram&quot;, t = &quot;nagaram&quot; \u8F93\u51FA: true \u793A\u4F8B 2:</p><p>\u8F93\u5165: s = &quot;rat&quot;, t = &quot;car&quot; \u8F93\u51FA: false</p><p>\u63D0\u793A:</p><p>1 &lt;= s.length, t.length &lt;= 5 * 104 s \u548C t \u4EC5\u5305\u542B\u5C0F\u5199\u5B57\u6BCD</p><p>\u8FDB\u9636: \u5982\u679C\u8F93\u5165\u5B57\u7B26\u4E32\u5305\u542B unicode \u5B57\u7B26\u600E\u4E48\u529E\uFF1F\u4F60\u80FD\u5426\u8C03\u6574\u4F60\u7684\u89E3\u6CD5\u6765\u5E94\u5BF9\u8FD9\u79CD\u60C5\u51B5\uFF1F</p><p>\u6765\u6E90\uFF1A\u529B\u6263\uFF08LeetCode\uFF09 \u94FE\u63A5\uFF1Ahttps://leetcode-cn.com/problems/valid-anagram \u8457\u4F5C\u6743\u5F52\u9886\u6263\u7F51\u7EDC\u6240\u6709\u3002\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u8054\u7CFB\u5B98\u65B9\u6388\u6743\uFF0C\u975E\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u6CE8\u660E\u51FA\u5904\u3002</p></blockquote><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">isAnagram</span><span class="token punctuation">(</span>s <span class="token builtin">string</span><span class="token punctuation">,</span> t <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token function">len</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
    n <span class="token operator">:=</span> <span class="token function">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
    hashMap <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">byte</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> i<span class="token operator">:=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        v <span class="token operator">:=</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        <span class="token keyword">if</span> n<span class="token punctuation">,</span>ok <span class="token operator">:=</span> hashMap<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
            hashMap<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">=</span> n <span class="token operator">+</span> <span class="token number">1</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            hashMap<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> i<span class="token operator">:=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span> i<span class="token operator">++</span>  <span class="token punctuation">{</span>
        v <span class="token operator">:=</span> t<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        <span class="token keyword">if</span> n<span class="token punctuation">,</span>ok <span class="token operator">:=</span> hashMap<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">;</span> n <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> ok <span class="token punctuation">{</span>
            hashMap<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token number">1</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div></details><h2 id="_2-\u4E24\u4E2A\u6570\u7EC4\u7684\u4EA4\u96C6-e" tabindex="-1"><a class="header-anchor" href="#_2-\u4E24\u4E2A\u6570\u7EC4\u7684\u4EA4\u96C6-e" aria-hidden="true">#</a> 2. \u4E24\u4E2A\u6570\u7EC4\u7684\u4EA4\u96C6 E</h2><details class="custom-container details"><blockquote><p>\u7ED9\u5B9A\u4E24\u4E2A\u6570\u7EC4 nums1 \u548C nums2 \uFF0C\u8FD4\u56DE \u5B83\u4EEC\u7684\u4EA4\u96C6 \u3002\u8F93\u51FA\u7ED3\u679C\u4E2D\u7684\u6BCF\u4E2A\u5143\u7D20\u4E00\u5B9A\u662F \u552F\u4E00 \u7684\u3002\u6211\u4EEC\u53EF\u4EE5 \u4E0D\u8003\u8651\u8F93\u51FA\u7ED3\u679C\u7684\u987A\u5E8F \u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165\uFF1Anums1 = [1,2,2,1], nums2 = [2,2] \u8F93\u51FA\uFF1A[2] \u793A\u4F8B 2\uFF1A</p><p>\u8F93\u5165\uFF1Anums1 = [4,9,5], nums2 = [9,4,9,8,4] \u8F93\u51FA\uFF1A[9,4] \u89E3\u91CA\uFF1A[4,9] \u4E5F\u662F\u53EF\u901A\u8FC7\u7684</p><p>\u63D0\u793A\uFF1A</p><p>1 &lt;= nums1.length, nums2.length &lt;= 1000 0 &lt;= nums1[i], nums2[i] &lt;= 1000 \u901A\u8FC7\u6B21\u6570295,087\u63D0\u4EA4\u6B21\u6570398,258</p><p>\u6765\u6E90\uFF1A\u529B\u6263\uFF08LeetCode\uFF09 \u94FE\u63A5\uFF1Ahttps://leetcode-cn.com/problems/intersection-of-two-arrays \u8457\u4F5C\u6743\u5F52\u9886\u6263\u7F51\u7EDC\u6240\u6709\u3002\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u8054\u7CFB\u5B98\u65B9\u6388\u6743\uFF0C\u975E\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u6CE8\u660E\u51FA\u5904\u3002</p></blockquote><ul><li>\u76F4\u63A5hash</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">intersection</span><span class="token punctuation">(</span>nums1 <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> nums2 <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token punctuation">{</span>
    hash <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span>
    res <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> nums1 <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span>ok <span class="token operator">:=</span> hash<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token operator">!</span>ok <span class="token punctuation">{</span>
            hash<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span>v <span class="token operator">:=</span> <span class="token keyword">range</span> nums2 <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span>ok <span class="token operator">:=</span> hash<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
            <span class="token function">delete</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span>v<span class="token punctuation">)</span>
            res <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span>v<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div></details><h2 id="_3-\u5FEB\u4E50\u6570-e" tabindex="-1"><a class="header-anchor" href="#_3-\u5FEB\u4E50\u6570-e" aria-hidden="true">#</a> 3.\u5FEB\u4E50\u6570 E</h2><details class="custom-container details"><blockquote><p>\u7F16\u5199\u4E00\u4E2A\u7B97\u6CD5\u6765\u5224\u65AD\u4E00\u4E2A\u6570 n \u662F\u4E0D\u662F\u5FEB\u4E50\u6570\u3002</p><p>\u300C\u5FEB\u4E50\u6570\u300D \u5B9A\u4E49\u4E3A\uFF1A</p><p>\u5BF9\u4E8E\u4E00\u4E2A\u6B63\u6574\u6570\uFF0C\u6BCF\u4E00\u6B21\u5C06\u8BE5\u6570\u66FF\u6362\u4E3A\u5B83\u6BCF\u4E2A\u4F4D\u7F6E\u4E0A\u7684\u6570\u5B57\u7684\u5E73\u65B9\u548C\u3002 \u7136\u540E\u91CD\u590D\u8FD9\u4E2A\u8FC7\u7A0B\u76F4\u5230\u8FD9\u4E2A\u6570\u53D8\u4E3A 1\uFF0C\u4E5F\u53EF\u80FD\u662F \u65E0\u9650\u5FAA\u73AF \u4F46\u59CB\u7EC8\u53D8\u4E0D\u5230 1\u3002 \u5982\u679C\u8FD9\u4E2A\u8FC7\u7A0B \u7ED3\u679C\u4E3A 1\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u6570\u5C31\u662F\u5FEB\u4E50\u6570\u3002 \u5982\u679C n \u662F \u5FEB\u4E50\u6570 \u5C31\u8FD4\u56DE true \uFF1B\u4E0D\u662F\uFF0C\u5219\u8FD4\u56DE false \u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165\uFF1An = 19 \u8F93\u51FA\uFF1Atrue \u89E3\u91CA\uFF1A 12 + 92 = 82 82 + 22 = 68 62 + 82 = 100 12 + 02 + 02 = 1 \u793A\u4F8B 2\uFF1A</p><p>\u8F93\u5165\uFF1An = 2 \u8F93\u51FA\uFF1Afalse</p><p>\u63D0\u793A\uFF1A</p><p>1 &lt;= n &lt;= 231 - 1</p><p>\u6765\u6E90\uFF1A\u529B\u6263\uFF08LeetCode\uFF09 \u94FE\u63A5\uFF1Ahttps://leetcode.cn/problems/happy-number \u8457\u4F5C\u6743\u5F52\u9886\u6263\u7F51\u7EDC\u6240\u6709\u3002\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u8054\u7CFB\u5B98\u65B9\u6388\u6743\uFF0C\u975E\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u6CE8\u660E\u51FA\u5904\u3002</p></blockquote><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">var</span> <span class="token punctuation">(</span>
    ONE <span class="token operator">=</span> <span class="token number">1</span>
<span class="token punctuation">)</span>
<span class="token keyword">func</span> <span class="token function">isHappy</span><span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span>
    hash <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">{</span>
        sum <span class="token operator">:=</span> <span class="token function">getSum</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>
        <span class="token keyword">if</span> sum <span class="token operator">==</span> ONE <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token boolean">_</span><span class="token punctuation">,</span>ok <span class="token operator">:=</span> hash<span class="token punctuation">[</span>sum<span class="token punctuation">]</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            hash<span class="token punctuation">[</span>sum<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        n <span class="token operator">=</span> sum
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">getSum</span><span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    sum <span class="token operator">:=</span> <span class="token number">0</span>
    <span class="token keyword">for</span> n <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
        sum <span class="token operator">+=</span> <span class="token punctuation">(</span>n<span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>n<span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">)</span>
        n <span class="token operator">/=</span> <span class="token number">10</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> sum
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div></details><h2 id="_4-\u4E24\u6570\u4E4B\u548C-e" tabindex="-1"><a class="header-anchor" href="#_4-\u4E24\u6570\u4E4B\u548C-e" aria-hidden="true">#</a> 4. \u4E24\u6570\u4E4B\u548C E</h2><details class="custom-container details"><blockquote><p>\u7ED9\u5B9A\u4E00\u4E2A\u6574\u6570\u6570\u7EC4 nums \u548C\u4E00\u4E2A\u6574\u6570\u76EE\u6807\u503C target\uFF0C\u8BF7\u4F60\u5728\u8BE5\u6570\u7EC4\u4E2D\u627E\u51FA \u548C\u4E3A\u76EE\u6807\u503C target \u7684\u90A3 \u4E24\u4E2A \u6574\u6570\uFF0C\u5E76\u8FD4\u56DE\u5B83\u4EEC\u7684\u6570\u7EC4\u4E0B\u6807\u3002</p><p>\u4F60\u53EF\u4EE5\u5047\u8BBE\u6BCF\u79CD\u8F93\u5165\u53EA\u4F1A\u5BF9\u5E94\u4E00\u4E2A\u7B54\u6848\u3002\u4F46\u662F\uFF0C\u6570\u7EC4\u4E2D\u540C\u4E00\u4E2A\u5143\u7D20\u5728\u7B54\u6848\u91CC\u4E0D\u80FD\u91CD\u590D\u51FA\u73B0\u3002</p><p>\u4F60\u53EF\u4EE5\u6309\u4EFB\u610F\u987A\u5E8F\u8FD4\u56DE\u7B54\u6848\u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165\uFF1Anums = [2,7,11,15], target = 9 \u8F93\u51FA\uFF1A[0,1] \u89E3\u91CA\uFF1A\u56E0\u4E3A nums[0] + nums[1] == 9 \uFF0C\u8FD4\u56DE [0, 1] \u3002 \u793A\u4F8B 2\uFF1A</p><p>\u8F93\u5165\uFF1Anums = [3,2,4], target = 6 \u8F93\u51FA\uFF1A[1,2] \u793A\u4F8B 3\uFF1A</p><p>\u8F93\u5165\uFF1Anums = [3,3], target = 6 \u8F93\u51FA\uFF1A[0,1]</p><p>\u63D0\u793A\uFF1A</p><p>2 &lt;= nums.length &lt;= 104 -109 &lt;= nums[i] &lt;= 109 -109 &lt;= target &lt;= 109 \u53EA\u4F1A\u5B58\u5728\u4E00\u4E2A\u6709\u6548\u7B54\u6848 \u8FDB\u9636\uFF1A\u4F60\u53EF\u4EE5\u60F3\u51FA\u4E00\u4E2A\u65F6\u95F4\u590D\u6742\u5EA6\u5C0F\u4E8E O(n2) \u7684\u7B97\u6CD5\u5417\uFF1F</p><p>\u6765\u6E90\uFF1A\u529B\u6263\uFF08LeetCode\uFF09 \u94FE\u63A5\uFF1Ahttps://leetcode.cn/problems/two-sum \u8457\u4F5C\u6743\u5F52\u9886\u6263\u7F51\u7EDC\u6240\u6709\u3002\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u8054\u7CFB\u5B98\u65B9\u6388\u6743\uFF0C\u975E\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u6CE8\u660E\u51FA\u5904\u3002</p></blockquote><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">twoSum</span><span class="token punctuation">(</span>nums <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> target <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token punctuation">{</span>
    n <span class="token operator">:=</span> <span class="token function">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>
    ans <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>
    need <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> reg <span class="token builtin">int</span>
    <span class="token keyword">for</span> i<span class="token operator">:=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        reg <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        <span class="token keyword">if</span> val<span class="token punctuation">,</span>ok <span class="token operator">:=</span> need<span class="token punctuation">[</span>reg<span class="token punctuation">]</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
            ans <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>ans<span class="token punctuation">,</span>val<span class="token punctuation">,</span> i<span class="token punctuation">)</span>
            <span class="token keyword">break</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            need<span class="token punctuation">[</span>target<span class="token operator">-</span>reg<span class="token punctuation">]</span> <span class="token operator">=</span> i
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> ans
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div></details><h2 id="_5-topk-\u524Dk\u4E2A\u9AD8\u9891\u5143\u7D20-m" tabindex="-1"><a class="header-anchor" href="#_5-topk-\u524Dk\u4E2A\u9AD8\u9891\u5143\u7D20-m" aria-hidden="true">#</a> 5. <strong>topk(\u524Dk\u4E2A\u9AD8\u9891\u5143\u7D20) M</strong></h2><details class="custom-container details"><blockquote><p>\u7ED9\u4F60\u4E00\u4E2A\u6574\u6570\u6570\u7EC4 nums \u548C\u4E00\u4E2A\u6574\u6570 k \uFF0C\u8BF7\u4F60\u8FD4\u56DE\u5176\u4E2D\u51FA\u73B0\u9891\u7387\u524D k \u9AD8\u7684\u5143\u7D20\u3002\u4F60\u53EF\u4EE5\u6309 \u4EFB\u610F\u987A\u5E8F \u8FD4\u56DE\u7B54\u6848\u3002</p><p>\u793A\u4F8B 1: \u8F93\u5165: nums = [1,1,1,2,2,3], k = 2 \u8F93\u51FA: [1,2] \u793A\u4F8B 2: \u8F93\u5165: nums = [1], k = 1 \u8F93\u51FA: [1]</p><p>\u63D0\u793A\uFF1A 1 &lt;= nums.length &lt;= 105 k \u7684\u53D6\u503C\u8303\u56F4\u662F [1, \u6570\u7EC4\u4E2D\u4E0D\u76F8\u540C\u7684\u5143\u7D20\u7684\u4E2A\u6570] \u9898\u76EE\u6570\u636E\u4FDD\u8BC1\u7B54\u6848\u552F\u4E00\uFF0C\u6362\u53E5\u8BDD\u8BF4\uFF0C\u6570\u7EC4\u4E2D\u524D k \u4E2A\u9AD8\u9891\u5143\u7D20\u7684\u96C6\u5408\u662F\u552F\u4E00\u7684</p><p>\u8FDB\u9636\uFF1A\u4F60\u6240\u8BBE\u8BA1\u7B97\u6CD5\u7684\u65F6\u95F4\u590D\u6742\u5EA6 \u5FC5\u987B \u4F18\u4E8E O(n log n) \uFF0C\u5176\u4E2D n \u662F\u6570\u7EC4\u5927\u5C0F\u3002</p><p>\u6765\u6E90\uFF1A\u529B\u6263\uFF08LeetCode\uFF09 \u94FE\u63A5\uFF1Ahttps://leetcode.cn/problems/top-k-frequent-elements \u8457\u4F5C\u6743\u5F52\u9886\u6263\u7F51\u7EDC\u6240\u6709\u3002\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u8054\u7CFB\u5B98\u65B9\u6388\u6743\uFF0C\u975E\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u6CE8\u660E\u51FA\u5904\u3002</p></blockquote><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">topKFrequent</span><span class="token punctuation">(</span>nums <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> k <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token punctuation">{</span>
    sort<span class="token punctuation">.</span><span class="token function">Ints</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>
    res <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
    hash <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span>


    <span class="token keyword">for</span> i<span class="token punctuation">,</span> l <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        cnt<span class="token punctuation">,</span> num <span class="token operator">:=</span> <span class="token number">1</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
        <span class="token keyword">for</span> i<span class="token operator">+</span><span class="token number">1</span> <span class="token operator">&lt;</span> l <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> num <span class="token punctuation">{</span>
            cnt<span class="token operator">++</span>
            i<span class="token operator">++</span>
        <span class="token punctuation">}</span>
        hash<span class="token punctuation">[</span>num<span class="token punctuation">]</span> <span class="token operator">=</span> cnt
        <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">&lt;</span> k <span class="token punctuation">{</span>
            res <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> num<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5BFB\u627E\u6700\u5C0F\u7684\u5143\u7D20</span>
            minIndex <span class="token operator">:=</span> <span class="token number">0</span>
            <span class="token keyword">for</span> j <span class="token operator">:=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> k<span class="token punctuation">;</span> j<span class="token operator">++</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> hash<span class="token punctuation">[</span>res<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> hash<span class="token punctuation">[</span>res<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
                    minIndex <span class="token operator">=</span> j
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> hash<span class="token punctuation">[</span>res<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> cnt <span class="token punctuation">{</span>
                res<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span> <span class="token operator">=</span> num
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>


    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res


<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div></details>`,11);function t(e,o){return p}var l=n(a,[["render",t],["__file","hash.html.vue"]]);export{l as default};
