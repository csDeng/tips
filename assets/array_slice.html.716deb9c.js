import{_ as i,r as e,o as r,c as k,b as n,a,w as p,F as b,d as s,e as c}from"./app.2a7ffa2e.js";var m="/assets/m_cd5ff498ababe5a2c2ff6f2f816b383f_r.1fce00ff.jpg",d="/assets/m_9066724e202fc1ae425d04d7fa1cd3ef_r.ed624084.jpg",f="/assets/m_1bfa3d18f23b01c62058f9d62875b972_r.a95d75ea.jpg",g="/assets/m_c237168440ffb7d9fd50f31048f2b72b_r.1ef13207.png",v="/assets/m_b7bffbf0976c474809a222748dbc42ba_r.46643011.png",y="/assets/m_b3ed4a54677e9c668021c12d6cac6258_r.94ac035e.png",h="/assets/m_d27d00e84fbd89b3cbd30b25dc8bea61_r.523d19c6.png",w="/assets/m_d0781cd13de93cd58e55b732b513845d_r.1610d815.png",q="/assets/m_fcf28db7d94ead0043dbd92106159961_r.b0c1b172.png",x="/assets/m_802f29858b9d1b83ef13dd1f54f70240_r.34dd17ed.png",P="/assets/m_3adefbd66074247f94227944f0732837_r.db139d16.png",_="/assets/m_9a761aecc615b540c6f5346bc4c79cee_r.c7bb60dd.png",S="/assets/m_c32c7658df1d0dda5f944415446b11bd_r.ee7e834c.png",A="/assets/image-20220409012630666.fa8fef86.png",z="/assets/m_de4254a0cfe1df7843ea784eb419d91c_r.afc53560.png",B="/assets/m_18e670ad444e7cd50c684ea50e44b27e_r.6eecc5b3.png";const T={},C={class:"table-of-contents"},G=s("\u6570\u7EC4\u548C\u5207\u7247"),I=s("\u6570\u7EC4"),N=s("\u6570\u7EC4\u521D\u59CB\u5316"),O=s("\u4E00\u7EF4\u6570\u7EC4\uFF1A"),V=s("\u591A\u7EF4\u6570\u7EC4"),H=s("\u591A\u7EF4\u6570\u7EC4\u904D\u5386\uFF1A"),j=s("\u6570\u7EC4\u62F7\u8D1D\u548C\u4F20\u53C2"),E=s("\u6570\u7EC4\u7EC3\u4E60"),D=s("\u6C42\u6570\u7EC4\u6240\u6709\u5143\u7D20\u4E4B\u548C"),F=s("\u627E\u51FA\u6570\u7EC4\u4E2D\u548C\u4E3A\u7ED9\u5B9A\u503C\u7684\u4E24\u4E2A\u5143\u7D20\u7684\u4E0B\u6807\uFF0C\u4F8B\u5982\u6570\u7EC4[1,3,5,8,7]\uFF0C\u627E\u51FA\u4E24\u4E2A\u5143\u7D20\u4E4B\u548C\u7B49\u4E8E8\u7684\u4E0B\u6807\u5206\u522B\u662F\uFF080\uFF0C4\uFF09\u548C\uFF081\uFF0C2\uFF09"),L=s("\u5207\u7247"),R=s("\u521B\u5EFA\u5207\u7247\u7684\u5404\u79CD\u65B9\u5F0F"),W=s("1. \u5229\u7528\u6570\u7EC4\u6765\u521B\u5EFA"),M=s("2. \u901A\u8FC7make\u6765\u521B\u5EFA"),U=s("3. \u76F4\u63A5\u521B\u5EFA slice \u5BF9\u8C61\uFF0C\u81EA\u52A8\u5206\u914D\u5E95\u5C42\u6570\u7EC4\u3002"),J=s("\u5207\u7247\u7684\u5185\u5B58\u5E03\u5C40"),K=s("\u67E5"),Q=s("\u6539"),X=s("\u5220"),Y=s("\u589E"),Z=s("\u6269\u5C55"),$=s("\u5B57\u7B26\u4E32\u548C\u5207\u7247\uFF08string and slice\uFF09"),nn=s("\u542B\u6709\u4E2D\u6587\u5B57\u7B26\u4E32\uFF1A"),sn=s("slice data[:6:8] \u4E24\u4E2A\u5192\u53F7\u7684\u7406\u89E3"),an=s("\u6570\u7EC4or\u5207\u7247\u8F6C\u5B57\u7B26\u4E32\uFF1A"),pn=s("\u5207\u7247\u7684\u5751"),tn=s("slice\u7684\u6E90\u7801"),en=s("slice\u7684\u5E95\u5C42\u5B9E\u73B0"),on=s("\u5207\u7247\u548C\u6570\u7EC4"),cn=s("\u5207\u7247\u7684\u6570\u636E\u7ED3\u6784"),ln=s("\u521B\u5EFA\u5207\u7247"),un=s("make \u548C\u5207\u7247\u5B57\u9762\u91CF"),rn=s("nil \u548C\u7A7A\u5207\u7247"),kn=s("\u5207\u7247\u6269\u5BB9"),bn=s("\u6269\u5BB9\u7B56\u7565"),mn=s("\u65B0\u6570\u7EC4 or \u8001\u6570\u7EC4 \uFF1F"),dn=s("\u5207\u7247\u62F7\u8D1D"),fn=s("Slice \u4E2D\u62F7\u8D1D\u65B9\u6CD5\u67092\u4E2A\u3002"),gn=n("h1",{id:"\u6570\u7EC4\u548C\u5207\u7247",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6570\u7EC4\u548C\u5207\u7247","aria-hidden":"true"},"#"),s(" \u6570\u7EC4\u548C\u5207\u7247")],-1),vn=s("\u5185\u5BB9\u4E3B\u8981\u6765\u81EA"),yn={href:"https://www.topgoer.cn/docs/golang/chapter03-9",target:"_blank",rel:"noopener noreferrer"},hn=s("\u6570\u7EC4Array - \u5730\u9F20\u6587\u6863 (topgoer.cn)"),wn=s("\uFF0C"),qn={href:"https://www.topgoer.cn/docs/golang/chapter03-10",target:"_blank",rel:"noopener noreferrer"},xn=s("\u5207\u7247Slice - \u5730\u9F20\u6587\u6863 (topgoer.cn)"),Pn=s("\uFF0C\u8F85\u4EE5\u672C\u4EBA\u5FAE\u5FAE\u7684\u66F4\u6539\u3002"),_n=c(`<h2 id="\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4" aria-hidden="true">#</a> \u6570\u7EC4</h2><p>Golang Array\u548C\u4EE5\u5F80\u8BA4\u77E5\u7684\u6570\u7EC4\u6709\u5F88\u5927\u4E0D\u540C\u3002</p><ol><li><p>\u6570\u7EC4\uFF1A\u662F\u540C\u4E00\u79CD\u6570\u636E\u7C7B\u578B\u7684\u56FA\u5B9A\u957F\u5EA6\u7684\u5E8F\u5217\u3002</p></li><li><p>\u6570\u7EC4\u5B9A\u4E49\uFF1Avar a [len]int\uFF0C\u6BD4\u5982\uFF1Avar a [5]int\uFF0C\u6570\u7EC4\u957F\u5EA6\u5FC5\u987B\u662F\u5E38\u91CF\uFF0C\u4E14\u662F\u7C7B\u578B\u7684\u7EC4\u6210\u90E8\u5206\u3002\u4E00\u65E6\u5B9A\u4E49\uFF0C\u957F\u5EA6\u4E0D\u80FD\u53D8\u3002</p></li><li><p>\u957F\u5EA6\u662F\u6570\u7EC4\u7C7B\u578B\u7684\u4E00\u90E8\u5206\uFF0C\u56E0\u6B64\uFF0Cvar a[5] int\u548Cvar a[10]int\u662F\u4E0D\u540C\u7684\u7C7B\u578B\u3002</p></li><li><p>\u6570\u7EC4\u53EF\u4EE5\u901A\u8FC7\u4E0B\u6807\u8FDB\u884C\u8BBF\u95EE\uFF0C\u4E0B\u6807\u662F\u4ECE0\u5F00\u59CB\uFF0C\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u4E0B\u6807\u662F\uFF1A<code>len-1</code>.</p></li></ol><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>
<span class="token keyword">for</span> index<span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> a <span class="token punctuation">{</span>
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ol start="5"><li><p>\u8BBF\u95EE\u8D8A\u754C\uFF0C\u5982\u679C\u4E0B\u6807\u5728\u6570\u7EC4\u5408\u6CD5\u8303\u56F4\u4E4B\u5916\uFF0C\u5219\u89E6\u53D1\u8BBF\u95EE\u8D8A\u754C\uFF0C\u4F1Apanic</p></li><li><p>\u6570\u7EC4\u662F\u503C\u7C7B\u578B\uFF0C\u8D4B\u503C\u548C\u4F20\u53C2\u4F1A\u590D\u5236\u6574\u4E2A\u6570\u7EC4\uFF0C\u800C\u4E0D\u662F\u6307\u9488\u3002\u56E0\u6B64\u6539\u53D8\u526F\u672C\u7684\u503C\uFF0C\u4E0D\u4F1A\u6539\u53D8\u672C\u8EAB\u7684\u503C\u3002 7.\u652F\u6301 &quot;==&quot;\u3001&quot;!=&quot; \u64CD\u4F5C\u7B26\uFF0C\u56E0\u4E3A\u5185\u5B58\u603B\u662F\u88AB\u521D\u59CB\u5316\u8FC7\u7684\u3002 8.\u6307\u9488\u6570\u7EC4 [n]*T\uFF0C\u6570\u7EC4\u6307\u9488 *[n]T\u3002</p></li></ol><h3 id="\u6570\u7EC4\u521D\u59CB\u5316" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u521D\u59CB\u5316" aria-hidden="true">#</a> \u6570\u7EC4\u521D\u59CB\u5316</h3><h4 id="\u4E00\u7EF4\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u4E00\u7EF4\u6570\u7EC4" aria-hidden="true">#</a> \u4E00\u7EF4\u6570\u7EC4\uFF1A</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u5168\u5C40\uFF1A</span>
<span class="token keyword">var</span> arr0 <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span>
<span class="token keyword">var</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span>
<span class="token keyword">var</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">}</span>
<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">:</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">:</span> <span class="token string">&quot;tom&quot;</span><span class="token punctuation">}</span>
<span class="token comment">// \u5C40\u90E8\uFF1A</span>
a <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">}</span>           <span class="token comment">// \u672A\u521D\u59CB\u5316\u5143\u7D20\u503C\u4E3A 0\u3002</span>
b <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">}</span>   <span class="token comment">// \u901A\u8FC7\u521D\u59CB\u5316\u503C\u786E\u5B9A\u6570\u7EC4\u957F\u5EA6\u3002</span>
c <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">}</span> <span class="token comment">// \u4F7F\u7528\u7D22\u5F15\u53F7\u521D\u59CB\u5316\u5143\u7D20\u3002</span>
d <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token keyword">struct</span> <span class="token punctuation">{</span>
    name <span class="token builtin">string</span>
    age  <span class="token builtin">uint8</span>
<span class="token punctuation">}</span><span class="token punctuation">{</span>
    <span class="token punctuation">{</span><span class="token string">&quot;user1&quot;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// \u53EF\u7701\u7565\u5143\u7D20\u7C7B\u578B\u3002</span>
    <span class="token punctuation">{</span><span class="token string">&quot;user2&quot;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// \u522B\u5FD8\u4E86\u6700\u540E\u4E00\u884C\u7684\u9017\u53F7\u3002</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">var</span> arr0 <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span>
<span class="token keyword">var</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span>
<span class="token keyword">var</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">}</span>
<span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">:</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">:</span> <span class="token string">&quot;tom&quot;</span><span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    a <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">}</span>           <span class="token comment">// \u672A\u521D\u59CB\u5316\u5143\u7D20\u503C\u4E3A 0\u3002</span>
    b <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">}</span>   <span class="token comment">// \u901A\u8FC7\u521D\u59CB\u5316\u503C\u786E\u5B9A\u6570\u7EC4\u957F\u5EA6\u3002</span>
    c <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">}</span> <span class="token comment">// \u4F7F\u7528\u5F15\u53F7\u521D\u59CB\u5316\u5143\u7D20\u3002</span>
    d <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token keyword">struct</span> <span class="token punctuation">{</span>
        name <span class="token builtin">string</span>
        age  <span class="token builtin">uint8</span>
    <span class="token punctuation">}</span><span class="token punctuation">{</span>
        <span class="token punctuation">{</span><span class="token string">&quot;user1&quot;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// \u53EF\u7701\u7565\u5143\u7D20\u7C7B\u578B\u3002</span>
        <span class="token punctuation">{</span><span class="token string">&quot;user2&quot;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// \u522B\u5FD8\u4E86\u6700\u540E\u4E00\u884C\u7684\u9017\u53F7\u3002</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>arr0<span class="token punctuation">,</span> arr1<span class="token punctuation">,</span> arr2<span class="token punctuation">,</span> str<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> d<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">0</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>   hello world tom<span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">0</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">0</span> <span class="token number">100</span> <span class="token number">0</span> <span class="token number">200</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>user1 <span class="token number">10</span><span class="token punctuation">}</span> <span class="token punctuation">{</span>user2 <span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></details><h4 id="\u591A\u7EF4\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u591A\u7EF4\u6570\u7EC4" aria-hidden="true">#</a> \u591A\u7EF4\u6570\u7EC4</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u5168\u5C40</span>
<span class="token keyword">var</span> arr0 <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token builtin">int</span>
<span class="token keyword">var</span> arr1 <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token comment">// \u5C40\u90E8\uFF1A</span>
a <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
b <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token comment">// \u7B2C 2 \u7EAC\u5EA6\u4E0D\u80FD\u7528 &quot;...&quot;\u3002</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801\uFF1A</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">var</span> arr0 <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token builtin">int</span>
<span class="token keyword">var</span> arr1 <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">}</span><span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    a <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
    b <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token comment">// \u7B2C 2 \u7EAC\u5EA6\u4E0D\u80FD\u7528 &quot;...&quot;\u3002</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>arr0<span class="token punctuation">,</span> arr1<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>[[0 0 0] [0 0 0] [0 0 0] [0 0 0] [0 0 0]] [[1 2 3] [7 8 9]]
[[1 2 3] [4 5 6]] [[1 1] [2 2] [3 3]]
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></details><ul><li>\u503C\u62F7\u8D1D\u884C\u4E3A\u4F1A\u9020\u6210\u6027\u80FD\u95EE\u9898\uFF0C\u901A\u5E38\u4F1A\u5EFA\u8BAE\u4F7F\u7528 slice\uFF0C\u6216\u6570\u7EC4\u6307\u9488\u3002</li></ul><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">test</span><span class="token punctuation">(</span>x <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;x: %p\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>x<span class="token punctuation">)</span>
    x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1000</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    a <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;a: %p\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>a<span class="token punctuation">)</span>

    <span class="token function">test</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>a: 0xc42007c010
x: 0xc42007c030
<span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">0</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></details><ul><li>\u5185\u7F6E\u51FD\u6570 len \u548C cap \u90FD\u8FD4\u56DE\u6570\u7EC4\u957F\u5EA6 (\u5143\u7D20\u6570\u91CF)\u3002</li></ul><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    a <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>2 2
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></details><h4 id="\u591A\u7EF4\u6570\u7EC4\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u591A\u7EF4\u6570\u7EC4\u904D\u5386" aria-hidden="true">#</a> \u591A\u7EF4\u6570\u7EC4\u904D\u5386\uFF1A</h4><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">var</span> f <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">}</span><span class="token punctuation">}</span>

    <span class="token keyword">for</span> k1<span class="token punctuation">,</span> v1 <span class="token operator">:=</span> <span class="token keyword">range</span> f <span class="token punctuation">{</span>
        <span class="token keyword">for</span> k2<span class="token punctuation">,</span> v2 <span class="token operator">:=</span> <span class="token keyword">range</span> v1 <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;(%d,%d)=%d &quot;</span><span class="token punctuation">,</span> k1<span class="token punctuation">,</span> k2<span class="token punctuation">,</span> v2<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">(</span><span class="token number">0,0</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">1</span> <span class="token punctuation">(</span><span class="token number">0,1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">2</span> <span class="token punctuation">(</span><span class="token number">0,2</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">3</span> 
<span class="token punctuation">(</span><span class="token number">1,0</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">7</span> <span class="token punctuation">(</span><span class="token number">1,1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">8</span> <span class="token punctuation">(</span><span class="token number">1,2</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">9</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></details><h3 id="\u6570\u7EC4\u62F7\u8D1D\u548C\u4F20\u53C2" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u62F7\u8D1D\u548C\u4F20\u53C2" aria-hidden="true">#</a> \u6570\u7EC4\u62F7\u8D1D\u548C\u4F20\u53C2</h3><ul><li>\u62F7\u8D1D</li></ul><ol><li>\u624B\u52A8\u590D\u5236</li></ol><details class="custom-container details"><summary>\u4E00\u6BB5\u6734\u5B9E\u65E0\u534E\u7684\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	a <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span>

	<span class="token keyword">var</span> b <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token builtin">int</span>
	<span class="token keyword">for</span> i<span class="token punctuation">,</span> val <span class="token operator">:=</span> <span class="token keyword">range</span> a <span class="token punctuation">{</span>
		b<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> val
	<span class="token punctuation">}</span>
	a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">99</span>
	b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">100</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Address a = %p ,value a = %v \\r\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>a<span class="token punctuation">,</span> a<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Address b = %p ,value b = %v&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>b<span class="token punctuation">,</span> b<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u8F93\u51FA</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>Address a <span class="token operator">=</span> 0xc000016168 ,value a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">99</span> <span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">]</span> 
Address b <span class="token operator">=</span> 0xc000016180 ,value b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">100</span> <span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230\u6570\u7EC4\u662F\u88AB\u6DF1\u62F7\u8D1D\u4E86\u7684\u3002</p></details><ol start="2"><li>\u76F4\u63A5\u8D4B\u503C\u7ED9\u4E00\u4E2A\u540C\u7C7B\u578B\u7684\u6570\u7EC4\u53D8\u91CF\uFF08\u56E0\u4E3A\u5728<code>Go</code>\u91CC\u9762\uFF0C\u6570\u7EC4\u662F\u503C\u62F7\u8D1D\uFF0C\u8DDF<code>C\\C++,java</code>\u6709\u70B9\u5DEE\u522B\uFF09</li></ol><details class="custom-container details"><summary>\u53C8\u4E00\u6BB5\u6734\u5B9E\u65E0\u534E\u7684\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	a <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span>

	<span class="token keyword">var</span> b <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token builtin">int</span>
	b <span class="token operator">=</span> a
	a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">99</span>
	b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">100</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Address a = %p ,value a = %v \\r\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>a<span class="token punctuation">,</span> a<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Address b = %p ,value b = %v&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>b<span class="token punctuation">,</span> b<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u8F93\u51FA</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>Address a <span class="token operator">=</span> 0xc000016168 ,value a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">99</span> <span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">]</span> 
Address b <span class="token operator">=</span> 0xc000016180 ,value b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">100</span> <span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></details><ol start="3"><li>\u8FD8\u6709\u5176\u4ED6\u65B9\u6CD5\u5417\uFF1F</li></ol><blockquote><p>\u597D\u50CF\u6CA1\u4E86\uFF0C\u56E0\u4E3A<code>Go</code>\u5E76\u6CA1\u6709\u4E3A\u6570\u7EC4\u63D0\u4F9B\u592A\u591A<code>api</code>\uFF0C\u4E14\u6CA1\u5FC5\u8981.</p></blockquote><ul><li>\u4F20\u53C2</li></ul><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">printArr</span><span class="token punctuation">(</span>arr <span class="token operator">*</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">10</span>
    <span class="token keyword">for</span> i<span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> arr <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> v<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> arr1 <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token builtin">int</span>
    <span class="token function">printArr</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>arr1<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span>
    arr2 <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">}</span>
    <span class="token function">printArr</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>arr2<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token number">0</span> <span class="token number">10</span>
<span class="token number">1</span> <span class="token number">0</span>
<span class="token number">2</span> <span class="token number">0</span>
<span class="token number">3</span> <span class="token number">0</span>
<span class="token number">4</span> <span class="token number">0</span>
<span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span><span class="token punctuation">]</span>
<span class="token number">0</span> <span class="token number">10</span>
<span class="token number">1</span> <span class="token number">4</span>
<span class="token number">2</span> <span class="token number">6</span>
<span class="token number">3</span> <span class="token number">8</span>
<span class="token number">4</span> <span class="token number">10</span>
<span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">4</span> <span class="token number">6</span> <span class="token number">8</span> <span class="token number">10</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></details><h3 id="\u6570\u7EC4\u7EC3\u4E60" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u7EC3\u4E60" aria-hidden="true">#</a> \u6570\u7EC4\u7EC3\u4E60</h3><h4 id="\u6C42\u6570\u7EC4\u6240\u6709\u5143\u7D20\u4E4B\u548C" tabindex="-1"><a class="header-anchor" href="#\u6C42\u6570\u7EC4\u6240\u6709\u5143\u7D20\u4E4B\u548C" aria-hidden="true">#</a> \u6C42\u6570\u7EC4\u6240\u6709\u5143\u7D20\u4E4B\u548C</h4><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;math/rand&quot;</span>
    <span class="token string">&quot;time&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">// \u6C42\u5143\u7D20\u548C</span>
<span class="token keyword">func</span> <span class="token function">sumArr</span><span class="token punctuation">(</span>a <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> sum <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        sum <span class="token operator">+=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> sum
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u82E5\u60F3\u505A\u4E00\u4E2A\u771F\u6B63\u7684\u968F\u673A\u6570\uFF0C\u8981\u79CD\u5B50</span>
    <span class="token comment">// seed()\u79CD\u5B50\u9ED8\u8BA4\u662F1</span>
    <span class="token comment">//rand.Seed(1)</span>
    rand<span class="token punctuation">.</span><span class="token function">Seed</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Unix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">var</span> b <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token builtin">int</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4EA7\u751F\u4E00\u4E2A0\u52301000\u968F\u673A\u6570</span>
        b<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> rand<span class="token punctuation">.</span><span class="token function">Intn</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    sum <span class="token operator">:=</span> <span class="token function">sumArr</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;sum=%d\\n&quot;</span><span class="token punctuation">,</span> sum<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div></details><h4 id="\u627E\u51FA\u6570\u7EC4\u4E2D\u548C\u4E3A\u7ED9\u5B9A\u503C\u7684\u4E24\u4E2A\u5143\u7D20\u7684\u4E0B\u6807-\u4F8B\u5982\u6570\u7EC4-1-3-5-8-7-\u627E\u51FA\u4E24\u4E2A\u5143\u7D20\u4E4B\u548C\u7B49\u4E8E8\u7684\u4E0B\u6807\u5206\u522B\u662F-0-4-\u548C-1-2" tabindex="-1"><a class="header-anchor" href="#\u627E\u51FA\u6570\u7EC4\u4E2D\u548C\u4E3A\u7ED9\u5B9A\u503C\u7684\u4E24\u4E2A\u5143\u7D20\u7684\u4E0B\u6807-\u4F8B\u5982\u6570\u7EC4-1-3-5-8-7-\u627E\u51FA\u4E24\u4E2A\u5143\u7D20\u4E4B\u548C\u7B49\u4E8E8\u7684\u4E0B\u6807\u5206\u522B\u662F-0-4-\u548C-1-2" aria-hidden="true">#</a> \u627E\u51FA\u6570\u7EC4\u4E2D\u548C\u4E3A\u7ED9\u5B9A\u503C\u7684\u4E24\u4E2A\u5143\u7D20\u7684\u4E0B\u6807\uFF0C\u4F8B\u5982\u6570\u7EC4[1,3,5,8,7]\uFF0C\u627E\u51FA\u4E24\u4E2A\u5143\u7D20\u4E4B\u548C\u7B49\u4E8E8\u7684\u4E0B\u6807\u5206\u522B\u662F\uFF080\uFF0C4\uFF09\u548C\uFF081\uFF0C2\uFF09</h4>`,32),Sn={class:"custom-container details"},An=n("summary",null,"\u67E5\u770B\u4EE3\u7801",-1),zn=n("div",{class:"language-go ext-go line-numbers-mode"},[n("pre",{class:"language-go"},[n("code",null,[n("span",{class:"token keyword"},"package"),s(` main

`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token string"},'"fmt"'),s(`

`),n("span",{class:"token keyword"},"func"),s(),n("span",{class:"token function"},"myTest"),n("span",{class:"token punctuation"},"("),s("a "),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},","),s(" target "),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    `),n("span",{class:"token comment"},"// \u904D\u5386\u6570\u7EC4"),s(`
    `),n("span",{class:"token keyword"},"for"),s(" i "),n("span",{class:"token operator"},":="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token function"},"len"),n("span",{class:"token punctuation"},"("),s("a"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),s(),n("span",{class:"token punctuation"},"{"),s(`
        other `),n("span",{class:"token operator"},":="),s(" target "),n("span",{class:"token operator"},"-"),s(" a"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(`
        `),n("span",{class:"token comment"},"// \u7EE7\u7EED\u904D\u5386"),s(`
        `),n("span",{class:"token keyword"},"for"),s(" j "),n("span",{class:"token operator"},":="),s(" i "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},";"),s(" j "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token function"},"len"),n("span",{class:"token punctuation"},"("),s("a"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(" j"),n("span",{class:"token operator"},"++"),s(),n("span",{class:"token punctuation"},"{"),s(`
            `),n("span",{class:"token keyword"},"if"),s(" a"),n("span",{class:"token punctuation"},"["),s("j"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"=="),s(" other "),n("span",{class:"token punctuation"},"{"),s(`
                fmt`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Printf"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"(%d,%d)\\n"'),n("span",{class:"token punctuation"},","),s(" i"),n("span",{class:"token punctuation"},","),s(" j"),n("span",{class:"token punctuation"},")"),s(`
            `),n("span",{class:"token punctuation"},"}"),s(`
        `),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token punctuation"},"}"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"func"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
    b `),n("span",{class:"token operator"},":="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"7"),n("span",{class:"token punctuation"},"}"),s(`
    `),n("span",{class:"token function"},"myTest"),n("span",{class:"token punctuation"},"("),s("b"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br"),n("span",{class:"line-number"},"21"),n("br")])],-1),Bn=n("div",{class:"language-go ext-go line-numbers-mode"},[n("pre",{class:"language-go"},[n("code",null,[n("span",{class:"token keyword"},"package"),s(` main

`),n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token string"},'"fmt"'),s(`

`),n("span",{class:"token keyword"},"func"),s(),n("span",{class:"token function"},"twoSum"),n("span",{class:"token punctuation"},"("),s("a "),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},","),s(" target "),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
	`),n("span",{class:"token comment"},"// \u9700\u8981\u7684\u5DEE\u503C \u9700\u8981\u8BE5\u5DEE\u503C\u7684\u7D22\u5F15"),s(`
	need `),n("span",{class:"token operator"},":="),s(),n("span",{class:"token function"},"make"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"map"),n("span",{class:"token punctuation"},"["),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(`
	ans `),n("span",{class:"token operator"},":="),s(),n("span",{class:"token function"},"make"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"map"),n("span",{class:"token punctuation"},"["),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},")"),s(`
	`),n("span",{class:"token keyword"},"var"),s(" num "),n("span",{class:"token builtin"},"int"),s(`
	`),n("span",{class:"token keyword"},"for"),s(" i "),n("span",{class:"token operator"},":="),s(),n("span",{class:"token number"},"0"),n("span",{class:"token punctuation"},";"),s(" i "),n("span",{class:"token operator"},"<"),s(),n("span",{class:"token function"},"len"),n("span",{class:"token punctuation"},"("),s("a"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(" i"),n("span",{class:"token operator"},"++"),s(),n("span",{class:"token punctuation"},"{"),s(`
		num `),n("span",{class:"token operator"},"="),s(" a"),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(`
		`),n("span",{class:"token keyword"},"if"),s(" v"),n("span",{class:"token punctuation"},","),s(" ok "),n("span",{class:"token operator"},":="),s(" need"),n("span",{class:"token punctuation"},"["),s("num"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},";"),s(" ok "),n("span",{class:"token punctuation"},"{"),s(`
			ans`),n("span",{class:"token punctuation"},"["),s("i"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(` v
		`),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"else"),s(),n("span",{class:"token punctuation"},"{"),s(`
			need`),n("span",{class:"token punctuation"},"["),s("target"),n("span",{class:"token operator"},"-"),s("num"),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token operator"},"="),s(` i
		`),n("span",{class:"token punctuation"},"}"),s(`
	`),n("span",{class:"token punctuation"},"}"),s(`
	fmt`),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"Println"),n("span",{class:"token punctuation"},"("),s("ans"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token keyword"},"func"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{"),s(`
	b `),n("span",{class:"token operator"},":="),s(),n("span",{class:"token punctuation"},"["),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},"]"),n("span",{class:"token builtin"},"int"),n("span",{class:"token punctuation"},"{"),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"7"),n("span",{class:"token punctuation"},"}"),s(`
	`),n("span",{class:"token function"},"twoSum"),n("span",{class:"token punctuation"},"("),s("b"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},")"),s(`
`),n("span",{class:"token punctuation"},"}"),s(`

`),n("span",{class:"token comment"},"// map[2:1 4:0]"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br"),n("span",{class:"line-number"},"4"),n("br"),n("span",{class:"line-number"},"5"),n("br"),n("span",{class:"line-number"},"6"),n("br"),n("span",{class:"line-number"},"7"),n("br"),n("span",{class:"line-number"},"8"),n("br"),n("span",{class:"line-number"},"9"),n("br"),n("span",{class:"line-number"},"10"),n("br"),n("span",{class:"line-number"},"11"),n("br"),n("span",{class:"line-number"},"12"),n("br"),n("span",{class:"line-number"},"13"),n("br"),n("span",{class:"line-number"},"14"),n("br"),n("span",{class:"line-number"},"15"),n("br"),n("span",{class:"line-number"},"16"),n("br"),n("span",{class:"line-number"},"17"),n("br"),n("span",{class:"line-number"},"18"),n("br"),n("span",{class:"line-number"},"19"),n("br"),n("span",{class:"line-number"},"20"),n("br"),n("span",{class:"line-number"},"21"),n("br"),n("span",{class:"line-number"},"22"),n("br"),n("span",{class:"line-number"},"23"),n("br"),n("span",{class:"line-number"},"24"),n("br"),n("span",{class:"line-number"},"25"),n("br"),n("span",{class:"line-number"},"26"),n("br")])],-1),Tn=c(`<h2 id="\u5207\u7247" tabindex="-1"><a class="header-anchor" href="#\u5207\u7247" aria-hidden="true">#</a> \u5207\u7247</h2><p>\u9700\u8981\u8BF4\u660E\uFF0Cslice \u5E76\u4E0D\u662F\u6570\u7EC4\u6216\u6570\u7EC4\u6307\u9488\u3002\u5B83\u901A\u8FC7\u5185\u90E8\u6307\u9488\u548C\u76F8\u5173\u5C5E\u6027\u5F15\u7528\u6570\u7EC4\u7247\u6BB5\uFF0C\u4EE5\u5B9E\u73B0\u53D8\u957F\u65B9\u6848\u3002</p><ol><li>\u5207\u7247\uFF1A\u5207\u7247\u662F\u6570\u7EC4\u7684\u4E00\u4E2A\u5F15\u7528\uFF0C\u56E0\u6B64\u5207\u7247\u662F\u5F15\u7528\u7C7B\u578B\u3002\u4F46\u81EA\u8EAB\u662F\u7ED3\u6784\u4F53\uFF0C\u503C\u62F7\u8D1D\u4F20\u9012\u3002</li><li>\u5207\u7247\u7684\u957F\u5EA6\u53EF\u4EE5\u6539\u53D8\uFF0C\u56E0\u6B64\uFF0C\u5207\u7247\u662F\u4E00\u4E2A\u53EF\u53D8\u7684\u6570\u7EC4\u3002</li><li>\u5207\u7247\u904D\u5386\u65B9\u5F0F\u548C\u6570\u7EC4\u4E00\u6837\uFF0C\u53EF\u4EE5\u7528<code>len()</code>\u6C42\u957F\u5EA6\u3002\u8868\u793A\u53EF\u7528\u5143\u7D20\u6570\u91CF\uFF0C\u8BFB\u5199\u64CD\u4F5C\u4E0D\u80FD\u8D85\u8FC7\u8BE5\u9650\u5236\u3002</li><li>cap\u53EF\u4EE5\u6C42\u51FAslice\u6700\u5927\u6269\u5F20\u5BB9\u91CF\uFF0C\u4E0D\u80FD\u8D85\u51FA\u6570\u7EC4\u9650\u5236\u3002<code>0 &lt;= len(slice) &lt;= len(array)</code>\uFF0C\u5176\u4E2Darray\u662Fslice\u5F15\u7528\u7684\u6570\u7EC4\u3002</li><li>\u5207\u7247\u7684\u5B9A\u4E49\uFF1A<code>var \u53D8\u91CF\u540D []\u7C7B\u578B</code>\uFF0C\u6BD4\u5982 <code>var str []string </code>\u3002</li><li>\u5982\u679C <code>slice == nil</code>\uFF0C\u90A3\u4E48 len\u3001cap \u7ED3\u679C\u90FD\u7B49\u4E8E 0\u3002</li></ol><h3 id="\u521B\u5EFA\u5207\u7247\u7684\u5404\u79CD\u65B9\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u5207\u7247\u7684\u5404\u79CD\u65B9\u5F0F" aria-hidden="true">#</a> \u521B\u5EFA\u5207\u7247\u7684\u5404\u79CD\u65B9\u5F0F</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">//1.\u58F0\u660E\u5207\u7247</span>
   <span class="token keyword">var</span> s1 <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span>
   <span class="token keyword">if</span> s1 <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
      fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u662F\u7A7A&quot;</span><span class="token punctuation">)</span>
   <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4E0D\u662F\u7A7A&quot;</span><span class="token punctuation">)</span>
   <span class="token punctuation">}</span>
   <span class="token comment">// 2.:=</span>
   s2 <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
   <span class="token comment">// 3.make()</span>
   <span class="token keyword">var</span> s3 <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
   fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s1<span class="token punctuation">,</span> s2<span class="token punctuation">,</span> s3<span class="token punctuation">)</span>
   <span class="token comment">// 4.\u521D\u59CB\u5316\u8D4B\u503C</span>
   <span class="token keyword">var</span> s4 <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
   fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s4<span class="token punctuation">)</span>
   s5 <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span>
   fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s5<span class="token punctuation">)</span>
   <span class="token comment">// 5.\u4ECE\u6570\u7EC4\u5207\u7247</span>
   arr <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span>
   <span class="token keyword">var</span> s6 <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span>
   <span class="token comment">// \u5DE6\u95ED\u53F3\u5F00</span>
   s6 <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span>
   fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s6<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h4 id="_1-\u5229\u7528\u6570\u7EC4\u6765\u521B\u5EFA" tabindex="-1"><a class="header-anchor" href="#_1-\u5229\u7528\u6570\u7EC4\u6765\u521B\u5EFA" aria-hidden="true">#</a> 1. \u5229\u7528\u6570\u7EC4\u6765\u521B\u5EFA</h4><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u5DE6\u95ED\u53F3\u5F00</p></div><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>\u5168\u5C40\uFF1A
<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">}</span>
<span class="token keyword">var</span> slice0 <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>start<span class="token punctuation">:</span>end<span class="token punctuation">]</span> 
<span class="token keyword">var</span> slice1 <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token punctuation">:</span>end<span class="token punctuation">]</span>        
<span class="token keyword">var</span> slice2 <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>start<span class="token punctuation">:</span><span class="token punctuation">]</span>        
<span class="token keyword">var</span> slice3 <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span> 
<span class="token keyword">var</span> slice4 <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token function">len</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>      <span class="token comment">//\u53BB\u6389\u5207\u7247\u7684\u6700\u540E\u4E00\u4E2A\u5143\u7D20</span>
\u5C40\u90E8\uFF1A
arr2 <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span>
slice5 <span class="token operator">:=</span> arr<span class="token punctuation">[</span>start<span class="token punctuation">:</span>end<span class="token punctuation">]</span>
slice6 <span class="token operator">:=</span> arr<span class="token punctuation">[</span><span class="token punctuation">:</span>end<span class="token punctuation">]</span>        
slice7 <span class="token operator">:=</span> arr<span class="token punctuation">[</span>start<span class="token punctuation">:</span><span class="token punctuation">]</span>     
slice8 <span class="token operator">:=</span> arr<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span>  
slice9 <span class="token operator">:=</span> arr<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token function">len</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment">//\u53BB\u6389\u5207\u7247\u7684\u6700\u540E\u4E00\u4E2A\u5143\u7D20</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><img src="`+m+`" alt="null"></p><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">}</span>
<span class="token keyword">var</span> slice0 <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">]</span>
<span class="token keyword">var</span> slice1 <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span>        <span class="token comment">//\u53EF\u4EE5\u7B80\u5199\u4E3A var slice []int = arr[:end]</span>
<span class="token keyword">var</span> slice2 <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">]</span>       <span class="token comment">//\u53EF\u4EE5\u7B80\u5199\u4E3A var slice[]int = arr[start:]</span>
<span class="token keyword">var</span> slice3 <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token function">len</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment">//var slice []int = arr[:]</span>
<span class="token keyword">var</span> slice4 <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token function">len</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>      <span class="token comment">//\u53BB\u6389\u5207\u7247\u7684\u6700\u540E\u4E00\u4E2A\u5143\u7D20</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u5168\u5C40\u53D8\u91CF\uFF1Aarr %v\\n&quot;</span><span class="token punctuation">,</span> arr<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u5168\u5C40\u53D8\u91CF\uFF1Aslice0 %v\\n&quot;</span><span class="token punctuation">,</span> slice0<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u5168\u5C40\u53D8\u91CF\uFF1Aslice1 %v\\n&quot;</span><span class="token punctuation">,</span> slice1<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u5168\u5C40\u53D8\u91CF\uFF1Aslice2 %v\\n&quot;</span><span class="token punctuation">,</span> slice2<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u5168\u5C40\u53D8\u91CF\uFF1Aslice3 %v\\n&quot;</span><span class="token punctuation">,</span> slice3<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u5168\u5C40\u53D8\u91CF\uFF1Aslice4 %v\\n&quot;</span><span class="token punctuation">,</span> slice4<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;-----------------------------------\\n&quot;</span><span class="token punctuation">)</span>
    arr2 <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">}</span>
    slice5 <span class="token operator">:=</span> arr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">]</span>
    slice6 <span class="token operator">:=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span>         <span class="token comment">//\u53EF\u4EE5\u7B80\u5199\u4E3A slice := arr[:end]</span>
    slice7 <span class="token operator">:=</span> arr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token number">10</span><span class="token punctuation">]</span>        <span class="token comment">//\u53EF\u4EE5\u7B80\u5199\u4E3A slice := arr[start:]</span>
    slice8 <span class="token operator">:=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token function">len</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">]</span>  <span class="token comment">//slice := arr[:]</span>
    slice9 <span class="token operator">:=</span> arr<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token function">len</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment">//\u53BB\u6389\u5207\u7247\u7684\u6700\u540E\u4E00\u4E2A\u5143\u7D20</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u5C40\u90E8\u53D8\u91CF\uFF1A arr2 %v\\n&quot;</span><span class="token punctuation">,</span> arr2<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u5C40\u90E8\u53D8\u91CF\uFF1A slice5 %v\\n&quot;</span><span class="token punctuation">,</span> slice5<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u5C40\u90E8\u53D8\u91CF\uFF1A slice6 %v\\n&quot;</span><span class="token punctuation">,</span> slice6<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u5C40\u90E8\u53D8\u91CF\uFF1A slice7 %v\\n&quot;</span><span class="token punctuation">,</span> slice7<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u5C40\u90E8\u53D8\u91CF\uFF1A slice8 %v\\n&quot;</span><span class="token punctuation">,</span> slice8<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;\u5C40\u90E8\u53D8\u91CF\uFF1A slice9 %v\\n&quot;</span><span class="token punctuation">,</span> slice9<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\u5168\u5C40\u53D8\u91CF\uFF1Aarr <span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span><span class="token punctuation">]</span>
\u5168\u5C40\u53D8\u91CF\uFF1Aslice0 <span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span><span class="token punctuation">]</span>
\u5168\u5C40\u53D8\u91CF\uFF1Aslice1 <span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span><span class="token punctuation">]</span>
\u5168\u5C40\u53D8\u91CF\uFF1Aslice2 <span class="token punctuation">[</span><span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span><span class="token punctuation">]</span>
\u5168\u5C40\u53D8\u91CF\uFF1Aslice3 <span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span><span class="token punctuation">]</span>
\u5168\u5C40\u53D8\u91CF\uFF1Aslice4 <span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span><span class="token punctuation">]</span>
-----------------------------------
\u5C40\u90E8\u53D8\u91CF\uFF1A arr2 <span class="token punctuation">[</span><span class="token number">9</span> <span class="token number">8</span> <span class="token number">7</span> <span class="token number">6</span> <span class="token number">5</span> <span class="token number">4</span> <span class="token number">3</span> <span class="token number">2</span> <span class="token number">1</span> <span class="token number">0</span><span class="token punctuation">]</span>
\u5C40\u90E8\u53D8\u91CF\uFF1A slice5 <span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span><span class="token punctuation">]</span>
\u5C40\u90E8\u53D8\u91CF\uFF1A slice6 <span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span><span class="token punctuation">]</span>
\u5C40\u90E8\u53D8\u91CF\uFF1A slice7 <span class="token punctuation">[</span><span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span><span class="token punctuation">]</span>
\u5C40\u90E8\u53D8\u91CF\uFF1A slice8 <span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span><span class="token punctuation">]</span>
\u5C40\u90E8\u53D8\u91CF\uFF1A slice9 <span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></details><h4 id="_2-\u901A\u8FC7make\u6765\u521B\u5EFA" tabindex="-1"><a class="header-anchor" href="#_2-\u901A\u8FC7make\u6765\u521B\u5EFA" aria-hidden="true">#</a> 2. \u901A\u8FC7make\u6765\u521B\u5EFA</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">var</span> slice <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">type</span> <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">type</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">)</span>
slice  <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">type</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">)</span>
slice  <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">type</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">,</span> <span class="token builtin">cap</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="`+d+`" alt="null"></p><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">var</span> slice0 <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> slice1 <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> slice2 <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;make\u5168\u5C40slice0 \uFF1A%v\\n&quot;</span><span class="token punctuation">,</span> slice0<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;make\u5168\u5C40slice1 \uFF1A%v\\n&quot;</span><span class="token punctuation">,</span> slice1<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;make\u5168\u5C40slice2 \uFF1A%v\\n&quot;</span><span class="token punctuation">,</span> slice2<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;--------------------------------------&quot;</span><span class="token punctuation">)</span>
    slice3 <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
    slice4 <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
    slice5 <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;make\u5C40\u90E8slice3 \uFF1A%v\\n&quot;</span><span class="token punctuation">,</span> slice3<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;make\u5C40\u90E8slice4 \uFF1A%v\\n&quot;</span><span class="token punctuation">,</span> slice4<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;make\u5C40\u90E8slice5 \uFF1A%v\\n&quot;</span><span class="token punctuation">,</span> slice5<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    make\u5168\u5C40slice0 \uFF1A[0 0 0 0 0 0 0 0 0 0]
    make\u5168\u5C40slice1 \uFF1A[0 0 0 0 0 0 0 0 0 0]
    make\u5168\u5C40slice2 \uFF1A[0 0 0 0 0 0 0 0 0 0]
    --------------------------------------
    make\u5C40\u90E8slice3 \uFF1A[0 0 0 0 0 0 0 0 0 0]
    make\u5C40\u90E8slice4 \uFF1A[0 0 0 0 0 0 0 0 0 0]
    make\u5C40\u90E8slice5 \uFF1A[0 0 0 0 0 0 0 0 0 0]
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></details><h4 id="_3-\u76F4\u63A5\u521B\u5EFA-slice-\u5BF9\u8C61-\u81EA\u52A8\u5206\u914D\u5E95\u5C42\u6570\u7EC4\u3002" tabindex="-1"><a class="header-anchor" href="#_3-\u76F4\u63A5\u521B\u5EFA-slice-\u5BF9\u8C61-\u81EA\u52A8\u5206\u914D\u5E95\u5C42\u6570\u7EC4\u3002" aria-hidden="true">#</a> 3. \u76F4\u63A5\u521B\u5EFA slice \u5BF9\u8C61\uFF0C\u81EA\u52A8\u5206\u914D\u5E95\u5C42\u6570\u7EC4\u3002</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    s1 <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">}</span> <span class="token comment">// \u901A\u8FC7\u521D\u59CB\u5316\u8868\u8FBE\u5F0F\u6784\u9020\uFF0C\u53EF\u4F7F\u7528\u7D22\u5F15\u53F7\u3002</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">)</span>

    s2 <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token comment">// \u4F7F\u7528 make \u521B\u5EFA\uFF0C\u6307\u5B9A len \u548C cap \u503C\u3002</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s2<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span class="token punctuation">)</span>

    s3 <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token comment">// \u7701\u7565 cap\uFF0C\u76F8\u5F53\u4E8E cap = len\u3002</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s3<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>s3<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>s3<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    [0 1 2 3 0 0 0 0 100] 9 9
    [0 0 0 0 0 0] 6 8
    [0 0 0 0 0 0] 6 6
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u4F7F\u7528 make \u52A8\u6001\u521B\u5EFAslice\uFF0C\u907F\u514D\u4E86\u6570\u7EC4\u5FC5\u987B\u7528\u5E38\u91CF\u505A\u957F\u5EA6\u7684\u9EBB\u70E6\u3002\u8FD8\u53EF\u7528\u6307\u9488\u76F4\u63A5\u8BBF\u95EE\u5E95\u5C42\u6570\u7EC4\uFF0C\u9000\u5316\u6210\u666E\u901A\u6570\u7EC4\u64CD\u4F5C\u3002</p><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    s <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span>
    p <span class="token operator">:=</span> <span class="token operator">&amp;</span>s<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token comment">// *int, \u83B7\u53D6\u5E95\u5C42\u6570\u7EC4\u5143\u7D20\u6307\u9488\u3002</span>
    <span class="token operator">*</span>p <span class="token operator">+=</span> <span class="token number">100</span>

    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    [0 1 102 3]
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></details><p>\u81F3\u4E8E <code>[][]T</code>\uFF0C\u662F\u6307\u5143\u7D20\u7C7B\u578B\u4E3A <code>[]T</code>\u3002</p><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span>
        <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    [[1 2 3] [100 200] [11 22 33 44]]
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></details><p>\u53EF\u76F4\u63A5\u4FEE\u6539 struct array/slice \u6210\u5458\u3002</p><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    d <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token keyword">struct</span> <span class="token punctuation">{</span>
        x <span class="token builtin">int</span>
    <span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

    s <span class="token operator">:=</span> d<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span>

    d<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">10</span>
    s<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">20</span>

    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%p, %p\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>d<span class="token punctuation">,</span> <span class="token operator">&amp;</span>d<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    [{0} {10} {20} {0} {0}]
    0xc4200160f0, 0xc4200160f0
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></details><h3 id="\u5207\u7247\u7684\u5185\u5B58\u5E03\u5C40" tabindex="-1"><a class="header-anchor" href="#\u5207\u7247\u7684\u5185\u5B58\u5E03\u5C40" aria-hidden="true">#</a> \u5207\u7247\u7684\u5185\u5B58\u5E03\u5C40</h3><p><img src="`+f+`" alt="null"></p><p>\u8BFB\u5199\u64CD\u4F5C\u5B9E\u9645\u76EE\u6807\u662F\u5E95\u5C42\u6570\u7EC4\uFF0C\u53EA\u9700\u6CE8\u610F\u7D22\u5F15\u53F7\u7684\u5DEE\u522B\u3002</p><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span>

    s <span class="token operator">:=</span> data<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span>
    s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">100</span>
    s<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">200</span>

    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u8F93\u51FA:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>    <span class="token punctuation">[</span><span class="token number">102</span> <span class="token number">203</span><span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">1</span> <span class="token number">102</span> <span class="token number">203</span> <span class="token number">4</span> <span class="token number">5</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></details><h3 id="\u67E5" tabindex="-1"><a class="header-anchor" href="#\u67E5" aria-hidden="true">#</a> \u67E5</h3><ul><li>\u4F7F\u7528\u7D22\u5F15\u4E0B\u6807</li></ul><blockquote><p>\u7D22\u5F15\u4E0B\u6807\u5927\u4E8E\u5207\u7247\u7684<code>len</code>\uFF0C\u53EF\u4EE5\u8FC7\u7F16\u8BD1\uFF0C\u4F46\u662F\u4F1A\u62A5<strong>\u8FD0\u884C\u65F6\u9519\u8BEF</strong>\u3002</p></blockquote><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	s <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// panic: runtime error: index out of range [4] with length 4</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></details><ul><li>\u68C0\u67E5\u4E00\u4E2A\u5143\u7D20\u662F\u5426\u5728\u5207\u7247\u4E2D</li></ul><blockquote><p><code>Go</code>\u4E2D\u5E76\u6CA1\u6709\u76F4\u63A5\u63D0\u4F9B\u51FD\u6570\u5224\u65AD\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u904D\u5386\u64CD\u4F5C</p></blockquote><ul><li>\u68C0\u67E5\u5207\u7247\u662F\u5426\u4E3A\u7A7A</li></ul><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>ss <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>ss<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>ss<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></details><ul><li>slice\u904D\u5386\uFF1A</li></ul><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    data <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">}</span>
    slice <span class="token operator">:=</span> data<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> index<span class="token punctuation">,</span> value <span class="token operator">:=</span> <span class="token keyword">range</span> slice <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;index : %v , value : %v\\n&quot;</span><span class="token punctuation">,</span> index<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>index : 0 , value : 0
index : 1 , value : 1
index : 2 , value : 2
index : 3 , value : 3
index : 4 , value : 4
index : 5 , value : 5
index : 6 , value : 6
index : 7 , value : 7
index : 8 , value : 8
index : 9 , value : 9
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></details><h3 id="\u6539" tabindex="-1"><a class="header-anchor" href="#\u6539" aria-hidden="true">#</a> \u6539</h3><ul><li>\u666E\u901A\u7684\u6539</li></ul><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	s <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
	s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">99</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div></details><ul><li>\u5207\u7247resize\uFF08\u8C03\u6574\u5927\u5C0F\uFF09</li></ul><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;slice a : %v , len(a) : %v\\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span>
    b <span class="token operator">:=</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;slice b : %v , len(b) : %v\\n&quot;</span><span class="token punctuation">,</span> b<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>
    c <span class="token operator">:=</span> b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;slice c : %v , len(c) : %v\\n&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>slice a : [1 3 4 5] , len(a) : 4
slice b : [3] , len(b) : 1
slice c : [3 4 5] , len(c) : 3
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></details><ul><li>\u5207\u7247\u7684\u5207\u7247\u7684\u66F4\u6539</li></ul><details class="custom-container details"><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	a <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;a: Address %p , value = %v \\r\\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> a<span class="token punctuation">)</span>

	b <span class="token operator">:=</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
	b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">99</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;a: Address %p , value = %v \\r\\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> a<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;b: Address %p , value = %v \\r\\n&quot;</span><span class="token punctuation">,</span> b<span class="token punctuation">,</span> b<span class="token punctuation">)</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u8F93\u51FA</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>a: Address 0xc00000a480 , value <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span><span class="token punctuation">]</span> 
a: Address 0xc00000a480 , value <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">99</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span><span class="token punctuation">]</span> 
b: Address 0xc00000a488 , value <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">99</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230\u5207\u7247\u7684\u5207\u7247\u7684\u66F4\u6539\u662F\u4F1A\u5F71\u54CD\u539F\u6570\u7EC4\u7684\uFF0C\u56E0\u4E3A\u5207\u7247\u662F\u5F15\u7528\u7C7B\u578B\u3002</p></details><h3 id="\u5220" tabindex="-1"><a class="header-anchor" href="#\u5220" aria-hidden="true">#</a> \u5220</h3><blockquote><p><code>Go</code>\u4E2D\u5E76\u6CA1\u6709\u76F4\u63A5\u63D0\u4F9B\u51FD\u6570\u5220\u9664\uFF0C\u6211\u4EEC\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528\u7D22\u5F15\u4E0B\u6807\u624B\u52A8\u5207</p></blockquote><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	s <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>

	s <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> s<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token operator">...</span><span class="token punctuation">)</span> <span class="token comment">// \u5220\u9664\u7D22\u5F15\u4E3A2\u7684\u5143\u7D20</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>

	s <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token function">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment">// \u5220\u9664\u6700\u540E\u4E00\u4E2A\u5143\u7D20</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>

	s <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token comment">// \u5220\u9664\u7B2C\u4E00\u4E2A\u5143\u7D20</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u7ED3\u679C</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">4</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></details><h3 id="\u589E" tabindex="-1"><a class="header-anchor" href="#\u589E" aria-hidden="true">#</a> \u589E</h3><ul><li>\u7528append\u5185\u7F6E\u51FD\u6570\u64CD\u4F5C\u5207\u7247\uFF08\u5207\u7247\u8FFD\u52A0\uFF09</li></ul><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;slice a : %v\\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span>
    <span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;slice b : %v\\n&quot;</span><span class="token punctuation">,</span> b<span class="token punctuation">)</span>
    c <span class="token operator">:=</span> <span class="token function">append</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token operator">...</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;slice c : %v\\n&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span>
    d <span class="token operator">:=</span> <span class="token function">append</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;slice d : %v\\n&quot;</span><span class="token punctuation">,</span> d<span class="token punctuation">)</span>
    e <span class="token operator">:=</span> <span class="token function">append</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;slice e : %v\\n&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    slice a : [1 2 3]
    slice b : [4 5 6]
    slice c : [1 2 3 4 5 6]
    slice d : [1 2 3 4 5 6 7]
    slice e : [1 2 3 4 5 6 7 8 9 10]
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></details><ul><li>append \uFF1A\u5411 slice \u5C3E\u90E8\u6DFB\u52A0\u6570\u636E\uFF0C\u8FD4\u56DE\u65B0\u7684 slice \u5BF9\u8C61\u3002</li></ul><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    s1 <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%p\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>s1<span class="token punctuation">)</span>

    s2 <span class="token operator">:=</span> <span class="token function">append</span><span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%p\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>s2<span class="token punctuation">)</span>

    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s1<span class="token punctuation">,</span> s2<span class="token punctuation">)</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>0xc42000a060
0xc42000a080
[] [1]
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></details><ul><li>\u8D85\u51FA\u539F slice.cap \u9650\u5236\uFF0C\u5C31\u4F1A\u91CD\u65B0\u5206\u914D\u5E95\u5C42\u6570\u7EC4\uFF0C\u5373\u4FBF\u539F\u6570\u7EC4\u5E76\u672A\u586B\u6EE1\u3002</li></ul><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

	data <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
	s <span class="token operator">:=</span> data<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;len(s) = %d, cap(s) = %d, s = %v \\r\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span>

	s <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token comment">// \u4E00\u6B21 append \u4E24\u4E2A\u503C\uFF0C\u8D85\u51FA s.cap \u9650\u5236\u3002</span>

	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> data<span class="token punctuation">)</span>         <span class="token comment">// \u91CD\u65B0\u5206\u914D\u5E95\u5C42\u6570\u7EC4\uFF0C\u4E0E\u539F\u6570\u7EC4\u65E0\u5173\u3002</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// \u6BD4\u5BF9\u5E95\u5C42\u6570\u7EC4\u8D77\u59CB\u6307\u9488\u3002</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;len(s) = %d, cap(s) = %d, s = %v \\r\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span>

<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>[0 1 2 3 4 0 0 0 0 0 0]
len(s) = 2, cap(s) = 3, s = [0 1] 
[0 1 100 200] [0 1 2 3 4 0 0 0 0 0 0]
0xc00000a4b0 0xc00001e0c0
len(s) = 4, cap(s) = 6, s = [0 1 100 200]
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u4ECE\u8F93\u51FA\u7ED3\u679C\u53EF\u4EE5\u770B\u51FA\uFF0Cappend \u540E\u7684 s \u91CD\u65B0\u5206\u914D\u4E86\u5E95\u5C42\u6570\u7EC4\uFF0C\u5E76\u590D\u5236\u6570\u636E\u3002\u5982\u679C\u53EA\u8FFD\u52A0\u4E00\u4E2A\u503C\uFF0C\u5219\u4E0D\u4F1A\u8D85\u8FC7 s.cap \u9650\u5236\uFF0C\u4E5F\u5C31\u4E0D\u4F1A\u91CD\u65B0\u5206\u914D\u3002 \u5728\u5927\u6279\u91CF\u6DFB\u52A0\u6570\u636E\u65F6\uFF0C\u5EFA\u8BAE\u4E00\u6B21\u6027\u5206\u914D\u8DB3\u591F\u5927\u7684\u7A7A\u95F4\uFF0C\u4EE5\u51CF\u5C11\u5185\u5B58\u5206\u914D\u548C\u6570\u636E\u590D\u5236\u5F00\u9500\u3002\u6216\u521D\u59CB\u5316\u8DB3\u591F\u957F\u7684 len \u5C5E\u6027\uFF0C\u6539\u7528\u7D22\u5F15\u53F7\u8FDB\u884C\u64CD\u4F5C\u3002\u53CA\u65F6\u91CA\u653E\u4E0D\u518D\u4F7F\u7528\u7684 slice \u5BF9\u8C61\uFF0C\u907F\u514D\u6301\u6709\u8FC7\u671F\u6570\u7EC4\uFF0C\u9020\u6210 GC \u65E0\u6CD5\u56DE\u6536\u3002</p></details><ul><li>slice\u4E2Dcap\u91CD\u65B0\u5206\u914D\u89C4\u5F8B\uFF1A</li></ul><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    s <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    c <span class="token operator">:=</span> <span class="token function">cap</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>

    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">50</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        s <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> i<span class="token punctuation">)</span>
        <span class="token keyword">if</span> n <span class="token operator">:=</span> <span class="token function">cap</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span> n <span class="token operator">&gt;</span> c <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;cap: %d -&gt; %d\\n&quot;</span><span class="token punctuation">,</span> c<span class="token punctuation">,</span> n<span class="token punctuation">)</span>
            c <span class="token operator">=</span> n
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>cap: 1 -&gt; 2
cap: 2 -&gt; 4
cap: 4 -&gt; 8
cap: 8 -&gt; 16
cap: 16 -&gt; 32
cap: 32 -&gt; 64
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></details><ul><li>\u5207\u7247\u62F7\u8D1D</li></ul><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    s1 <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;slice s1 : %v\\n&quot;</span><span class="token punctuation">,</span> s1<span class="token punctuation">)</span>
    s2 <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;slice s2 : %v\\n&quot;</span><span class="token punctuation">,</span> s2<span class="token punctuation">)</span>
    <span class="token function">copy</span><span class="token punctuation">(</span>s2<span class="token punctuation">,</span> s1<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;copied slice s1 : %v\\n&quot;</span><span class="token punctuation">,</span> s1<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;copied slice s2 : %v\\n&quot;</span><span class="token punctuation">,</span> s2<span class="token punctuation">)</span>
    s3 <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;slice s3 : %v\\n&quot;</span><span class="token punctuation">,</span> s3<span class="token punctuation">)</span>
    s3 <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>s3<span class="token punctuation">,</span> s2<span class="token operator">...</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;appended slice s3 : %v\\n&quot;</span><span class="token punctuation">,</span> s3<span class="token punctuation">)</span>
    s3 <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>s3<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;last slice s3 : %v\\n&quot;</span><span class="token punctuation">,</span> s3<span class="token punctuation">)</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>slice s1 : [1 2 3 4 5]
slice s2 : [0 0 0 0 0 0 0 0 0 0]
copied slice s1 : [1 2 3 4 5]
copied slice s2 : [1 2 3 4 5 0 0 0 0 0]
slice s3 : [1 2 3]
appended slice s3 : [1 2 3 1 2 3 4 5 0 0 0 0 0]
last slice s3 : [1 2 3 1 2 3 4 5 0 0 0 0 0 4 5 6]
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></details><ul><li>copy \uFF1A\u51FD\u6570 copy \u5728\u4E24\u4E2A slice \u95F4\u590D\u5236\u6570\u636E\uFF0C\u590D\u5236\u957F\u5EA6\u4EE5 len \u5C0F\u7684\u4E3A\u51C6\u3002\u4E24\u4E2A slice \u53EF\u6307\u5411\u540C\u4E00\u5E95\u5C42\u6570\u7EC4\uFF0C\u5141\u8BB8\u5143\u7D20\u533A\u95F4\u91CD\u53E0\u3002</li></ul><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    data <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;array data : &quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>
    s1 <span class="token operator">:=</span> data<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
    s2 <span class="token operator">:=</span> data<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;slice s1 : %v\\n&quot;</span><span class="token punctuation">,</span> s1<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;slice s2 : %v\\n&quot;</span><span class="token punctuation">,</span> s2<span class="token punctuation">)</span>
    <span class="token function">copy</span><span class="token punctuation">(</span>s2<span class="token punctuation">,</span> s1<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;copied slice s1 : %v\\n&quot;</span><span class="token punctuation">,</span> s1<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;copied slice s2 : %v\\n&quot;</span><span class="token punctuation">,</span> s2<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;last array data : &quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>array data :  [0 1 2 3 4 5 6 7 8 9]
slice s1 : [8 9]
slice s2 : [0 1 2 3 4]
copied slice s1 : [8 9]
copied slice s2 : [8 9 2 3 4]
last array data :  [8 9 2 3 4 5 6 7 8 9]
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5E94\u53CA\u65F6\u5C06\u6240\u9700\u6570\u636E copy \u5230\u8F83\u5C0F\u7684 slice\uFF0C\u4EE5\u4FBF\u91CA\u653E\u8D85\u5927\u53F7\u5E95\u5C42\u6570\u7EC4\u5185\u5B58\u3002</p></details><h2 id="\u6269\u5C55" tabindex="-1"><a class="header-anchor" href="#\u6269\u5C55" aria-hidden="true">#</a> \u6269\u5C55</h2><h3 id="\u5B57\u7B26\u4E32\u548C\u5207\u7247-string-and-slice" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32\u548C\u5207\u7247-string-and-slice" aria-hidden="true">#</a> \u5B57\u7B26\u4E32\u548C\u5207\u7247\uFF08string and slice\uFF09</h3><p>string\u5E95\u5C42\u5C31\u662F\u4E00\u4E2Abyte\u7684\u6570\u7EC4\uFF0C\u56E0\u6B64\uFF0C\u4E5F\u53EF\u4EE5\u8FDB\u884C\u5207\u7247\u64CD\u4F5C\u3002</p><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    str <span class="token operator">:=</span> <span class="token string">&quot;hello world&quot;</span>
    s1 <span class="token operator">:=</span> str<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span>

    s2 <span class="token operator">:=</span> str<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>hello
world
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></details><p>string\u672C\u8EAB\u662F\u4E0D\u53EF\u53D8\u7684\uFF0C\u56E0\u6B64\u8981\u6539\u53D8string\u4E2D\u95F4\u5B57\u7B26\u3002\u9700\u8981\u5148\u8F6C\u5316\u4E3A<code>[]byte</code>\u5207\u7247\u518D\u64CD\u4F5C\u3002</p><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    str <span class="token operator">:=</span> <span class="token string">&quot;Hello world&quot;</span>
    s <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token comment">//\u4E2D\u6587\u5B57\u7B26\u9700\u8981\u7528[]rune(str)</span>
    s<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;G&#39;</span>
    s <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">]</span>
    s <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token char">&#39;!&#39;</span><span class="token punctuation">)</span>
    str <span class="token operator">=</span> <span class="token function">string</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    Hello Go!
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></details><h3 id="\u542B\u6709\u4E2D\u6587\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u542B\u6709\u4E2D\u6587\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u542B\u6709\u4E2D\u6587\u5B57\u7B26\u4E32\uFF1A</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    str <span class="token operator">:=</span> <span class="token string">&quot;\u4F60\u597D\uFF0C\u4E16\u754C\uFF01hello world\uFF01&quot;</span>
    s <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">rune</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> 
    s<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;\u591F&#39;</span>
    s<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;\u6D6A&#39;</span>
    s<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;g&#39;</span>
    s <span class="token operator">=</span> s<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">14</span><span class="token punctuation">]</span>
    str <span class="token operator">=</span> <span class="token function">string</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u4F60\u597D\uFF0C\u591F\u6D6A\uFF01hello go
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="slice-data-6-8-\u4E24\u4E2A\u5192\u53F7\u7684\u7406\u89E3" tabindex="-1"><a class="header-anchor" href="#slice-data-6-8-\u4E24\u4E2A\u5192\u53F7\u7684\u7406\u89E3" aria-hidden="true">#</a> slice <code>data[:6:8]</code> \u4E24\u4E2A\u5192\u53F7\u7684\u7406\u89E3</h3><p>\u5E38\u89C4slice , <code>data[6:8]</code>\uFF0C\u4ECE\u7B2C6\u4F4D\u5230\u7B2C8\u4F4D\uFF08\u8FD4\u56DE6\uFF0C 7\uFF09\uFF0C\u957F\u5EA6len\u4E3A2\uFF0C \u6700\u5927\u53EF\u6269\u5145\u957F\u5EA6cap\u4E3A4\uFF086-9\uFF09</p><p>\u53E6\u4E00\u79CD\u5199\u6CD5\uFF1A <code>data[:6:8]</code> \u6BCF\u4E2A\u6570\u5B57\u524D\u90FD\u6709\u4E2A\u5192\u53F7\uFF0C slice\u5185\u5BB9\u4E3Adata\u4ECE0\u5230\u7B2C6\u4F4D\uFF0C\u957F\u5EA6len\u4E3A6\uFF0C\u6700\u5927\u6269\u5145\u9879cap\u8BBE\u7F6E\u4E3A8</p><p><code>a[x:y:z]</code> \u5207\u7247\u5185\u5BB9 <code>[x:y]</code> \u5207\u7247\u957F\u5EA6:<code> y-x</code> \u5207\u7247\u5BB9\u91CF:<code>z-x</code></p><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    slice <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">}</span>
    d1 <span class="token operator">:=</span> slice<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">]</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>d1<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>d1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>d1<span class="token punctuation">)</span><span class="token punctuation">)</span>
    d2 <span class="token operator">:=</span> slice<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">]</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>d2<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>d2<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>d2<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span><span class="token number">6</span> <span class="token number">7</span><span class="token punctuation">]</span> <span class="token number">2</span> <span class="token number">4</span>
<span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span><span class="token punctuation">]</span> <span class="token number">6</span> <span class="token number">8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></details><h3 id="\u6570\u7EC4or\u5207\u7247\u8F6C\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4or\u5207\u7247\u8F6C\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u6570\u7EC4or\u5207\u7247\u8F6C\u5B57\u7B26\u4E32\uFF1A</h3><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;strings&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	a <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>strings<span class="token punctuation">.</span><span class="token function">Trim</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token function">Sprint</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;[]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>
		<span class="token comment">// func strings.Replace(s string, old string, new string, n int) string</span>
		strings<span class="token punctuation">.</span><span class="token function">Replace</span><span class="token punctuation">(</span>
			strings<span class="token punctuation">.</span><span class="token function">Trim</span><span class="token punctuation">(</span>fmt<span class="token punctuation">.</span><span class="token function">Sprint</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;[]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			<span class="token string">&quot; &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;-&quot;</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u8F93\u51FA</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span><span class="token punctuation">]</span>
<span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span>
<span class="token number">1</span>-2-3-4-5
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></details><h2 id="\u5207\u7247\u7684\u5751" tabindex="-1"><a class="header-anchor" href="#\u5207\u7247\u7684\u5751" aria-hidden="true">#</a> \u5207\u7247\u7684\u5751</h2><p>\u6CE8\u610F\u5207\u7247\u5F15\u7528\u5BFC\u81F4\u7684\u5751\uFF0C\u4EE5\u53CA\u6DF1\u62F7\u8D1Dcopy\u7684\u6CE8\u610F\u70B9</p><h2 id="slice\u7684\u6E90\u7801" tabindex="-1"><a class="header-anchor" href="#slice\u7684\u6E90\u7801" aria-hidden="true">#</a> slice\u7684\u6E90\u7801</h2>`,81),Cn={href:"https://github.com/golang/go/blob/master/src/runtime/slice.go",target:"_blank",rel:"noopener noreferrer"},Gn=s("go/slice.go at master \xB7 golang/go (github.com)"),In=c('<h2 id="slice\u7684\u5E95\u5C42\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#slice\u7684\u5E95\u5C42\u5B9E\u73B0" aria-hidden="true">#</a> slice\u7684\u5E95\u5C42\u5B9E\u73B0</h2><p>\u5207\u7247\u662F Go \u4E2D\u7684\u4E00\u79CD\u57FA\u672C\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u4F7F\u7528\u8FD9\u79CD\u7ED3\u6784\u53EF\u4EE5\u7528\u6765\u7BA1\u7406\u6570\u636E\u96C6\u5408\u3002\u5207\u7247\u7684\u8BBE\u8BA1\u60F3\u6CD5\u662F\u7531\u52A8\u6001\u6570\u7EC4\u6982\u5FF5\u800C\u6765\uFF0C\u4E3A\u4E86\u5F00\u53D1\u8005\u53EF\u4EE5\u66F4\u52A0\u65B9\u4FBF\u7684\u4F7F\u4E00\u4E2A\u6570\u636E\u7ED3\u6784\u53EF\u4EE5\u81EA\u52A8\u589E\u52A0\u548C\u51CF\u5C11\u3002\u4F46\u662F\u5207\u7247\u672C\u8EAB\u5E76\u4E0D\u662F\u52A8\u6001\u6570\u636E\u6216\u8005\u6570\u7EC4\u6307\u9488\u3002\u5207\u7247\u5E38\u89C1\u7684\u64CD\u4F5C\u6709 reslice\u3001append\u3001copy\u3002\u4E0E\u6B64\u540C\u65F6\uFF0C\u5207\u7247\u8FD8\u5177\u6709\u53EF\u7D22\u5F15\uFF0C\u53EF\u8FED\u4EE3\u7684\u4F18\u79C0\u7279\u6027\u3002</p><h3 id="\u5207\u7247\u548C\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u5207\u7247\u548C\u6570\u7EC4" aria-hidden="true">#</a> \u5207\u7247\u548C\u6570\u7EC4</h3><p><img src="'+g+`" alt="null"></p><p>\u5173\u4E8E\u5207\u7247\u548C\u6570\u7EC4\u600E\u4E48\u9009\u62E9\uFF1F\u63A5\u4E0B\u6765\u597D\u597D\u8BA8\u8BBA\u8BA8\u8BBA\u8FD9\u4E2A\u95EE\u9898\u3002</p><p>\u5728 Go \u4E2D\uFF0C\u4E0E C \u6570\u7EC4\u53D8\u91CF\u9690\u5F0F\u4F5C\u4E3A\u6307\u9488\u4F7F\u7528\u4E0D\u540C\uFF0CGo \u6570\u7EC4\u662F\u503C\u7C7B\u578B\uFF0C\u8D4B\u503C\u548C\u51FD\u6570\u4F20\u53C2\u64CD\u4F5C\u90FD\u4F1A\u590D\u5236\u6574\u4E2A\u6570\u7EC4\u6570\u636E\u3002</p><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arrayA <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">}</span>
    <span class="token keyword">var</span> arrayB <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">int</span>

    arrayB <span class="token operator">=</span> arrayA

    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;arrayA : %p , %v\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>arrayA<span class="token punctuation">,</span> arrayA<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;arrayB : %p , %v\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>arrayB<span class="token punctuation">,</span> arrayB<span class="token punctuation">)</span>

    <span class="token function">testArray</span><span class="token punctuation">(</span>arrayA<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">testArray</span><span class="token punctuation">(</span>x <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;func Array : %p , %v\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>x<span class="token punctuation">,</span> x<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u6253\u5370\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    arrayA : 0xc4200bebf0 , [100 200]
    arrayB : 0xc4200bec00 , [100 200]
    func Array : 0xc4200bec30 , [100 200]
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></details><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><p>\u53EF\u4EE5\u770B\u5230\uFF0C\u4E09\u4E2A\u5185\u5B58\u5730\u5740\u90FD\u4E0D\u540C\uFF0C\u8FD9\u4E5F\u5C31\u9A8C\u8BC1\u4E86 Go \u4E2D\u6570\u7EC4\u8D4B\u503C\u548C\u51FD\u6570\u4F20\u53C2\u90FD\u662F<strong>\u503C\u4F20\u9012</strong>\u7684\u3002\u90A3\u8FD9\u4F1A\u5BFC\u81F4\u4EC0\u4E48\u95EE\u9898\u5462\uFF1F</p></div><p>\u5047\u60F3\u6BCF\u6B21\u4F20\u53C2\u90FD\u7528\u6570\u7EC4\uFF0C\u90A3\u4E48\u6BCF\u6B21\u6570\u7EC4\u90FD\u8981\u88AB\u590D\u5236\u4E00\u904D\u3002\u5982\u679C\u6570\u7EC4\u5927\u5C0F\u6709 100\u4E07\uFF0C\u572864\u4F4D\u673A\u5668\u4E0A\u5C31\u9700\u8981\u82B1\u8D39\u5927\u7EA6 800W \u5B57\u8282\uFF0C\u5373 8MB \u5185\u5B58\u3002\u8FD9\u6837\u4F1A\u6D88\u8017\u6389\u5927\u91CF\u7684\u5185\u5B58\u3002\u4E8E\u662F\u4E4E\u6709\u4EBA\u60F3\u5230\uFF0C\u51FD\u6570\u4F20\u53C2\u7528\u6570\u7EC4\u7684\u6307\u9488\u3002</p><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arrayA <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">}</span>
    <span class="token function">testArrayPoint</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>arrayA<span class="token punctuation">)</span>   <span class="token comment">// 1.\u4F20\u6570\u7EC4\u6307\u9488</span>
    arrayB <span class="token operator">:=</span> arrayA<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span>
    <span class="token function">testArrayPoint</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>arrayB<span class="token punctuation">)</span>   <span class="token comment">// 2.\u4F20\u5207\u7247</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;arrayA : %p , %v\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>arrayA<span class="token punctuation">,</span> arrayA<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">testArrayPoint</span><span class="token punctuation">(</span>x <span class="token operator">*</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;func Array : %p , %v\\n&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> <span class="token operator">*</span>x<span class="token punctuation">)</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>x<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">100</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u6253\u5370\u7ED3\u679C\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>    func Array <span class="token builtin class-name">:</span> 0xc4200b0140 , <span class="token punctuation">[</span><span class="token number">100</span> <span class="token number">200</span><span class="token punctuation">]</span>
    func Array <span class="token builtin class-name">:</span> 0xc4200b0180 , <span class="token punctuation">[</span><span class="token number">100</span> <span class="token number">300</span><span class="token punctuation">]</span>
    arrayA <span class="token builtin class-name">:</span> 0xc4200b0140 , <span class="token punctuation">[</span><span class="token number">100</span> <span class="token number">400</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></details><p>\u8FD9\u4E5F\u5C31\u8BC1\u660E\u4E86\u6570\u7EC4\u6307\u9488\u786E\u5B9E\u5230\u8FBE\u4E86\u6211\u4EEC\u60F3\u8981\u7684\u6548\u679C\u3002\u73B0\u5728\u5C31\u7B97\u662F\u4F20\u516510\u4EBF\u7684\u6570\u7EC4\uFF0C\u4E5F\u53EA\u9700\u8981\u518D\u6808\u4E0A\u5206\u914D\u4E00\u4E2A8\u4E2A\u5B57\u8282\u7684\u5185\u5B58\u7ED9\u6307\u9488\u5C31\u53EF\u4EE5\u4E86\u3002\u8FD9\u6837\u66F4\u52A0\u9AD8\u6548\u7684\u5229\u7528\u5185\u5B58\uFF0C\u6027\u80FD\u4E5F\u6BD4\u4E4B\u524D\u7684\u597D\u3002</p><div class="custom-container warning"><p class="custom-container-title">\u6CE8\u610F</p><p>\u4E0D\u8FC7\u4F20\u6307\u9488\u4F1A\u6709\u4E00\u4E2A\u5F0A\u7AEF\uFF0C\u4ECE\u6253\u5370\u7ED3\u679C\u53EF\u4EE5\u770B\u5230\uFF0C\u7B2C\u4E00\u884C\u548C\u7B2C\u4E09\u884C\u6307\u9488\u5730\u5740\u90FD\u662F\u540C\u4E00\u4E2A\uFF0C\u4E07\u4E00\u539F\u6570\u7EC4\u7684\u6307\u9488\u6307\u5411\u66F4\u6539\u4E86\uFF0C\u90A3\u4E48\u51FD\u6570\u91CC\u9762\u7684\u6307\u9488\u6307\u5411\u90FD\u4F1A\u8DDF\u7740\u66F4\u6539\u3002</p></div><p>\u5207\u7247\u7684\u4F18\u52BF\u4E5F\u5C31\u8868\u73B0\u51FA\u6765\u4E86\u3002\u7528\u5207\u7247\u4F20\u6570\u7EC4\u53C2\u6570\uFF0C\u65E2\u53EF\u4EE5\u8FBE\u5230\u8282\u7EA6\u5185\u5B58\u7684\u76EE\u7684\uFF0C\u4E5F\u53EF\u4EE5\u8FBE\u5230\u5408\u7406\u5904\u7406\u597D\u5171\u4EAB\u5185\u5B58\u7684\u95EE\u9898\u3002\u6253\u5370\u7ED3\u679C\u7B2C\u4E8C\u884C\u5C31\u662F\u5207\u7247\uFF0C\u5207\u7247\u7684\u6307\u9488\u548C\u539F\u6765\u6570\u7EC4\u7684\u6307\u9488\u662F\u4E0D\u540C\u7684\u3002</p><ul><li>\u7531\u6B64\u6211\u4EEC\u53EF\u4EE5\u5F97\u51FA\u7ED3\u8BBA\uFF1A</li></ul><blockquote><p>\u628A\u7B2C\u4E00\u4E2A\u5927\u6570\u7EC4\u4F20\u9012\u7ED9\u51FD\u6570\u4F1A\u6D88\u8017\u5F88\u591A\u5185\u5B58\uFF0C\u91C7\u7528\u5207\u7247\u7684\u65B9\u5F0F\u4F20\u53C2\u53EF\u4EE5\u907F\u514D\u4E0A\u8FF0\u95EE\u9898\u3002\u5207\u7247\u662F<strong>\u5F15\u7528\u4F20\u9012</strong>\uFF0C\u6240\u4EE5\u5B83\u4EEC\u4E0D\u9700\u8981\u4F7F\u7528\u989D\u5916\u7684\u5185\u5B58\u5E76\u4E14\u6BD4\u4F7F\u7528\u6570\u7EC4\u66F4\u6709\u6548\u7387\u3002</p></blockquote><p>\u4F46\u662F\uFF0C\u4F9D\u65E7\u6709\u53CD\u4F8B\u3002</p><div class="custom-container tip"><p class="custom-container-title">\u6027\u80FD\u6D4B\u8BD5\u7684\u6E29\u99A8\u63D0\u793A</p><p><code>go benchmark</code>\u6027\u80FD\u6D4B\u8BD5\u7684\u6587\u4EF6\u540D\u9700\u8981\u4EE5<code>_test.go</code>\u7ED3\u5C3E\uFF0C\u4E14\u8FDB\u884C\u6D4B\u8BD5\u7684\u51FD\u6570\u540D\u8981\u4EE5<code>Benchmark</code>\u5F00\u5934\u3002</p></div><details class="custom-container details"><summary>\u67E5\u770B\u7EC6\u8282</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;testing&quot;</span>

<span class="token keyword">func</span> <span class="token function">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> x <span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token builtin">int</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        x<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> x
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token punctuation">{</span>
    x <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">1024</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        x<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> x
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">BenchmarkArray</span><span class="token punctuation">(</span>b <span class="token operator">*</span>testing<span class="token punctuation">.</span>B<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> b<span class="token punctuation">.</span>N<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        <span class="token function">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">BenchmarkSlice</span><span class="token punctuation">(</span>b <span class="token operator">*</span>testing<span class="token punctuation">.</span>B<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> b<span class="token punctuation">.</span>N<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        <span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><p>\u6211\u4EEC\u505A\u4E00\u6B21\u6027\u80FD\u6D4B\u8BD5\uFF0C\u5E76\u4E14\u7981\u7528\u5185\u8054\u548C\u4F18\u5316\uFF0C\u6765\u89C2\u5BDF\u5207\u7247\u7684\u5806\u4E0A\u5185\u5B58\u5206\u914D\u7684\u60C5\u51B5\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>go <span class="token builtin class-name">test</span> -bench <span class="token builtin class-name">.</span> -benchmem -gcflags <span class="token string">&quot;-N -l&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\u6BD4\u8F83\u201C\u4EE4\u4EBA\u610F\u5916\u201D\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>goos: windows
goarch: amd64
pkg: github.com/csDeng/gostudy/01_study/basic/array_slice/slice/src
cpu: Intel(R) Core(TM) i5-8265U CPU @ 1.60GHz
BenchmarkArray-8          450879              2665 ns/op               0 B/op          0 allocs/op
BenchmarkSlice-8          275074              4085 ns/op            8192 B/op          1 allocs/op
PASS
ok      github.com/csDeng/gostudy/01_study/basic/array_slice/slice/src  3.228s
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></details><p>\u89E3\u91CA\u4E00\u4E0B\u4E0A\u8FF0\u7ED3\u679C\uFF0C\u5728\u6D4B\u8BD5 Array \u7684\u65F6\u5019\uFF0C\u7528\u7684\u662F8\u6838\uFF0C\u5FAA\u73AF\u6B21\u6570\u662F45_0879\uFF0C\u5E73\u5747\u6BCF\u6B21\u6267\u884C\u65F6\u95F4\u662F2665 ns\uFF0C\u6BCF\u6B21\u6267\u884C\u5806\u4E0A\u5206\u914D\u5185\u5B58\u603B\u91CF\u662F0\uFF0C\u5206\u914D\u6B21\u6570\u4E5F\u662F0 \u3002</p><p>\u800C\u5207\u7247\u7684\u7ED3\u679C\u5C31\u201C\u5DEE\u201D\u4E00\u70B9\uFF0C\u540C\u6837\u4E5F\u662F\u7528\u7684\u662F8\u6838\uFF0C\u5FAA\u73AF\u6B21\u6570\u662F27_5074\uFF0C\u5E73\u5747\u6BCF\u6B21\u6267\u884C\u65F6\u95F4\u662F4085 ns\uFF0C\u4F46\u662F\u6BCF\u6B21\u6267\u884C\u4E00\u6B21\uFF0C\u5806\u4E0A\u5206\u914D\u5185\u5B58\u603B\u91CF\u662F8192\uFF0C\u5206\u914D\u6B21\u6570\u4E5F\u662F1 \u3002</p><p>\u8FD9\u6837\u5BF9\u6BD4\u770B\u6765\uFF0C\u5E76\u975E\u6240\u6709\u65F6\u5019\u90FD\u9002\u5408\u7528\u5207\u7247\u4EE3\u66FF\u6570\u7EC4\uFF0C\u56E0\u4E3A\u5207\u7247\u5E95\u5C42\u6570\u7EC4\u53EF\u80FD\u4F1A\u5728\u5806\u4E0A\u5206\u914D\u5185\u5B58\uFF0C\u800C\u4E14\u5C0F\u6570\u7EC4\u5728\u6808\u4E0A\u62F7\u8D1D\u7684\u6D88\u8017\u4E5F\u672A\u5FC5\u6BD4make \u6D88\u8017\u5927\u3002</p><h3 id="\u5207\u7247\u7684\u6570\u636E\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#\u5207\u7247\u7684\u6570\u636E\u7ED3\u6784" aria-hidden="true">#</a> \u5207\u7247\u7684\u6570\u636E\u7ED3\u6784</h3><p>\u5207\u7247\u672C\u8EAB\u5E76\u4E0D\u662F\u52A8\u6001\u6570\u7EC4\u6216\u8005\u6570\u7EC4\u6307\u9488\u3002\u5B83\u5185\u90E8\u5B9E\u73B0\u7684\u6570\u636E\u7ED3\u6784\u901A\u8FC7\u6307\u9488\u5F15\u7528\u5E95\u5C42\u6570\u7EC4\uFF0C\u8BBE\u5B9A\u76F8\u5173\u5C5E\u6027\u5C06\u6570\u636E\u8BFB\u5199\u64CD\u4F5C\u9650\u5B9A\u5728\u6307\u5B9A\u7684\u533A\u57DF\u5185\u3002\u5207\u7247\u672C\u8EAB\u662F\u4E00\u4E2A\u53EA\u8BFB\u5BF9\u8C61\uFF0C\u5176\u5DE5\u4F5C\u673A\u5236\u7C7B\u4F3C\u6570\u7EC4\u6307\u9488\u7684\u4E00\u79CD\u5C01\u88C5\u3002</p><p>\u5207\u7247\uFF08slice\uFF09\u662F\u5BF9\u6570\u7EC4\u4E00\u4E2A\u8FDE\u7EED\u7247\u6BB5\u7684\u5F15\u7528\uFF0C\u6240\u4EE5\u5207\u7247\u662F\u4E00\u4E2A\u5F15\u7528\u7C7B\u578B\uFF08\u56E0\u6B64\u66F4\u7C7B\u4F3C\u4E8E C/C++ \u4E2D\u7684\u6570\u7EC4\u7C7B\u578B\uFF0C\u6216\u8005 Python \u4E2D\u7684 list \u7C7B\u578B\uFF09\u3002\u8FD9\u4E2A\u7247\u6BB5\u53EF\u4EE5\u662F\u6574\u4E2A\u6570\u7EC4\uFF0C\u6216\u8005\u662F\u7531\u8D77\u59CB\u548C\u7EC8\u6B62\u7D22\u5F15\u6807\u8BC6\u7684\u4E00\u4E9B\u9879\u7684\u5B50\u96C6\u3002\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u7EC8\u6B62\u7D22\u5F15\u6807\u8BC6\u7684\u9879\u4E0D\u5305\u62EC\u5728\u5207\u7247\u5185\u3002\u5207\u7247\u63D0\u4F9B\u4E86\u4E00\u4E2A\u4E0E\u6307\u5411\u6570\u7EC4\u7684\u52A8\u6001\u7A97\u53E3\u3002</p><p>\u7ED9\u5B9A\u9879\u7684\u5207\u7247\u7D22\u5F15\u53EF\u80FD\u6BD4\u76F8\u5173\u6570\u7EC4\u7684\u76F8\u540C\u5143\u7D20\u7684\u7D22\u5F15\u5C0F\u3002\u548C\u6570\u7EC4\u4E0D\u540C\u7684\u662F\uFF0C\u5207\u7247\u7684\u957F\u5EA6\u53EF\u4EE5\u5728\u8FD0\u884C\u65F6\u4FEE\u6539\uFF0C\u6700\u5C0F\u4E3A 0 \u6700\u5927\u4E3A\u76F8\u5173\u6570\u7EC4\u7684\u957F\u5EA6\uFF1A\u5207\u7247\u662F\u4E00\u4E2A\u957F\u5EA6\u53EF\u53D8\u7684\u6570\u7EC4\u3002</p><p>Slice \u7684\u6570\u636E\u7ED3\u6784\u5B9A\u4E49\u5982\u4E0B:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> slice <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    array unsafe<span class="token punctuation">.</span>Pointer
    <span class="token builtin">len</span>   <span class="token builtin">int</span>
    <span class="token builtin">cap</span>   <span class="token builtin">int</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><img src="`+v+'" alt="null"></p><p>\u5207\u7247\u7684\u7ED3\u6784\u4F53\u75313\u90E8\u5206\u6784\u6210\uFF0CPointer \u662F\u6307\u5411\u4E00\u4E2A\u6570\u7EC4\u7684\u6307\u9488\uFF0Clen \u4EE3\u8868\u5F53\u524D\u5207\u7247\u7684\u957F\u5EA6\uFF0Ccap \u662F\u5F53\u524D\u5207\u7247\u7684\u5BB9\u91CF\u3002cap \u603B\u662F\u5927\u4E8E\u7B49\u4E8E len \u7684\u3002</p><p><img src="'+y+`" alt="null"></p><p>\u5982\u679C\u60F3\u4ECE slice \u4E2D\u5F97\u5230\u4E00\u5757\u5185\u5B58\u5730\u5740\uFF0C\u53EF\u4EE5\u8FD9\u6837\u505A\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;unsafe&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	s <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
	ptr <span class="token operator">:=</span> unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Value:s = %v, Address:s = %p \\r\\n&quot;</span><span class="token punctuation">,</span> s<span class="token punctuation">,</span> s<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Value:ptr = %v, Address:ptr = %p \\r\\n&quot;</span><span class="token punctuation">,</span> ptr<span class="token punctuation">,</span> ptr<span class="token punctuation">)</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><details class="custom-container details"><summary>\u8F93\u51FA\u7ED3\u679C</summary><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>Value:s <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">0</span><span class="token punctuation">]</span>, Address:s <span class="token operator">=</span> 0xc0000140c0 
Value:ptr <span class="token operator">=</span> 0xc0000140c0, Address:ptr <span class="token operator">=</span> 0xc0000140c0 
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></details><div class="custom-container warning"><p class="custom-container-title">\u4E0D\u80FD\u7406\u89E3\u90E8\u5206</p><p>\u5982\u679C\u53CD\u8FC7\u6765\u5462\uFF1F\u4ECE Go \u7684\u5185\u5B58\u5730\u5740\u4E2D\u6784\u9020\u4E00\u4E2A slice\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">var</span> ptr unsafe<span class="token punctuation">.</span>Pointer
<span class="token keyword">var</span> s1 <span class="token operator">=</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    addr <span class="token builtin">uintptr</span>
    <span class="token builtin">len</span> <span class="token builtin">int</span>
    <span class="token builtin">cap</span> <span class="token builtin">int</span>
<span class="token punctuation">}</span><span class="token punctuation">{</span>ptr<span class="token punctuation">,</span> length<span class="token punctuation">,</span> length<span class="token punctuation">}</span>
s <span class="token operator">:=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>s1<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u6784\u9020\u4E00\u4E2A\u865A\u62DF\u7684\u7ED3\u6784\u4F53\uFF0C\u628A slice \u7684\u6570\u636E\u7ED3\u6784\u62FC\u51FA\u6765\u3002</p><p>\u5F53\u7136\u8FD8\u6709\u66F4\u52A0\u76F4\u63A5\u7684\u65B9\u6CD5\uFF0C\u5728 Go \u7684\u53CD\u5C04\u4E2D\u5C31\u5B58\u5728\u4E00\u4E2A\u4E0E\u4E4B\u5BF9\u5E94\u7684\u6570\u636E\u7ED3\u6784 SliceHeader\uFF0C\u6211\u4EEC\u53EF\u4EE5\u7528\u5B83\u6765\u6784\u9020\u4E00\u4E2A slice</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>    <span class="token keyword">var</span> o <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span>
    sliceHeader <span class="token operator">:=</span> <span class="token punctuation">(</span><span class="token operator">*</span>reflect<span class="token punctuation">.</span>SliceHeader<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>o<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    sliceHeader<span class="token punctuation">.</span>Cap <span class="token operator">=</span> length
    sliceHeader<span class="token punctuation">.</span>Len <span class="token operator">=</span> length
    sliceHeader<span class="token punctuation">.</span>Data <span class="token operator">=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>ptr<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></div><h3 id="\u521B\u5EFA\u5207\u7247" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u5207\u7247" aria-hidden="true">#</a> \u521B\u5EFA\u5207\u7247</h3><p>make \u51FD\u6570\u5141\u8BB8\u5728\u8FD0\u884C\u671F\u52A8\u6001\u6307\u5B9A\u6570\u7EC4\u957F\u5EA6\uFF0C\u7ED5\u5F00\u4E86\u6570\u7EC4\u7C7B\u578B\u5FC5\u987B\u4F7F\u7528\u7F16\u8BD1\u671F\u5E38\u91CF\u7684\u9650\u5236\u3002</p><p>\u521B\u5EFA\u5207\u7247\u6709\u4E24\u79CD\u5F62\u5F0F\uFF0Cmake \u521B\u5EFA\u5207\u7247\uFF0C\u7A7A\u5207\u7247\u3002</p><h4 id="make-\u548C\u5207\u7247\u5B57\u9762\u91CF" tabindex="-1"><a class="header-anchor" href="#make-\u548C\u5207\u7247\u5B57\u9762\u91CF" aria-hidden="true">#</a> make \u548C\u5207\u7247\u5B57\u9762\u91CF</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">makeslice</span><span class="token punctuation">(</span>et <span class="token operator">*</span>_type<span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">,</span> <span class="token builtin">cap</span> <span class="token builtin">int</span><span class="token punctuation">)</span> slice <span class="token punctuation">{</span>
    <span class="token comment">// \u6839\u636E\u5207\u7247\u7684\u6570\u636E\u7C7B\u578B\uFF0C\u83B7\u53D6\u5207\u7247\u7684\u6700\u5927\u5BB9\u91CF</span>
    maxElements <span class="token operator">:=</span> <span class="token function">maxSliceCap</span><span class="token punctuation">(</span>et<span class="token punctuation">.</span>size<span class="token punctuation">)</span>
    <span class="token comment">// \u6BD4\u8F83\u5207\u7247\u7684\u957F\u5EA6\uFF0C\u957F\u5EA6\u503C\u57DF\u5E94\u8BE5\u5728[0,maxElements]\u4E4B\u95F4</span>
    <span class="token keyword">if</span> <span class="token builtin">len</span> <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token function">uintptr</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> maxElements <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token string">&quot;makeslice: len out of range&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6BD4\u8F83\u5207\u7247\u7684\u5BB9\u91CF\uFF0C\u5BB9\u91CF\u503C\u57DF\u5E94\u8BE5\u5728[len,maxElements]\u4E4B\u95F4</span>
    <span class="token keyword">if</span> <span class="token builtin">cap</span> <span class="token operator">&lt;</span> <span class="token builtin">len</span> <span class="token operator">||</span> <span class="token function">uintptr</span><span class="token punctuation">(</span><span class="token builtin">cap</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> maxElements <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token string">&quot;makeslice: cap out of range&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6839\u636E\u5207\u7247\u7684\u5BB9\u91CF\u7533\u8BF7\u5185\u5B58</span>
    p <span class="token operator">:=</span> <span class="token function">mallocgc</span><span class="token punctuation">(</span>et<span class="token punctuation">.</span>size<span class="token operator">*</span><span class="token function">uintptr</span><span class="token punctuation">(</span><span class="token builtin">cap</span><span class="token punctuation">)</span><span class="token punctuation">,</span> et<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token comment">// \u8FD4\u56DE\u7533\u8BF7\u597D\u5185\u5B58\u7684\u5207\u7247\u7684\u9996\u5730\u5740</span>
    <span class="token keyword">return</span> slice<span class="token punctuation">{</span>p<span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">,</span> <span class="token builtin">cap</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u8FD8\u6709\u4E00\u4E2A int64 \u7684\u7248\u672C\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">makeslice64</span><span class="token punctuation">(</span>et <span class="token operator">*</span>_type<span class="token punctuation">,</span> len64<span class="token punctuation">,</span> cap64 <span class="token builtin">int64</span><span class="token punctuation">)</span> slice <span class="token punctuation">{</span>
    <span class="token builtin">len</span> <span class="token operator">:=</span> <span class="token function">int</span><span class="token punctuation">(</span>len64<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token function">int64</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">)</span> <span class="token operator">!=</span> len64 <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token string">&quot;makeslice: len out of range&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token builtin">cap</span> <span class="token operator">:=</span> <span class="token function">int</span><span class="token punctuation">(</span>cap64<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token function">int64</span><span class="token punctuation">(</span><span class="token builtin">cap</span><span class="token punctuation">)</span> <span class="token operator">!=</span> cap64 <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token string">&quot;makeslice: cap out of range&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token function">makeslice</span><span class="token punctuation">(</span>et<span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">,</span> <span class="token builtin">cap</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u5B9E\u73B0\u539F\u7406\u548C\u4E0A\u9762\u7684\u662F\u4E00\u6837\u7684\uFF0C\u53EA\u4E0D\u8FC7\u591A\u4E86\u628A int64 \u8F6C\u6362\u6210 int \u8FD9\u4E00\u6B65\u7F62\u4E86\u3002</p><p><img src="`+h+'" alt="null"></p><p>\u4E0A\u56FE\u662F\u7528 make \u51FD\u6570\u521B\u5EFA\u7684\u4E00\u4E2A len = 4\uFF0C cap = 6 \u7684\u5207\u7247\u3002\u5185\u5B58\u7A7A\u95F4\u7533\u8BF7\u4E866\u4E2A int \u7C7B\u578B\u7684\u5185\u5B58\u5927\u5C0F\u3002\u7531\u4E8E len = 4\uFF0C\u6240\u4EE5\u540E\u97622\u4E2A\u6682\u65F6\u8BBF\u95EE\u4E0D\u5230\uFF0C\u4F46\u662F\u5BB9\u91CF\u8FD8\u662F\u5728\u7684\u3002\u8FD9\u65F6\u5019\u6570\u7EC4\u91CC\u9762\u6BCF\u4E2A\u53D8\u91CF\u90FD\u662F0 \u3002</p><p>\u9664\u4E86 make \u51FD\u6570\u53EF\u4EE5\u521B\u5EFA\u5207\u7247\u4EE5\u5916\uFF0C\u5B57\u9762\u91CF\u4E5F\u53EF\u4EE5\u521B\u5EFA\u5207\u7247\u3002</p><p><img src="'+w+'" alt="null"></p><div class="custom-container tip"><p class="custom-container-title">\u6E29\u99A8\u63D0\u793A</p><p>\u8FD9\u91CC\u662F\u7528\u5B57\u9762\u91CF\u521B\u5EFA\u7684\u4E00\u4E2A len = 6\uFF0Ccap = 6 \u7684\u5207\u7247\uFF0C\u8FD9\u65F6\u5019\u6570\u7EC4\u91CC\u9762\u6BCF\u4E2A\u5143\u7D20\u7684\u503C\u90FD\u521D\u59CB\u5316\u5B8C\u6210\u4E86\u3002\u9700\u8981\u6CE8\u610F\u7684\u662F<code>[ ]</code>\u91CC\u9762\u4E0D\u8981\u5199\u6570\u7EC4\u7684\u5BB9\u91CF\uFF0C\u56E0\u4E3A\u5982\u679C\u5199\u4E86\u4E2A\u6570\u4EE5\u540E\u5C31\u662F\u6570\u7EC4\u4E86\uFF0C\u800C\u4E0D\u662F\u5207\u7247\u4E86\u3002</p></div><p><img src="'+q+`" alt="null"></p><p>\u8FD8\u6709\u4E00\u79CD\u7B80\u5355\u7684\u5B57\u9762\u91CF\u521B\u5EFA\u5207\u7247\u7684\u65B9\u6CD5\u3002\u5982\u4E0A\u56FE\u3002\u4E0A\u56FE\u5C31 Slice A \u521B\u5EFA\u51FA\u4E86\u4E00\u4E2A len = 3\uFF0Ccap = 3 \u7684\u5207\u7247\u3002\u4ECE\u539F\u6570\u7EC4\u7684\u7B2C\u4E8C\u4F4D\u5143\u7D20(0\u662F\u7B2C\u4E00\u4F4D)\u5F00\u59CB\u5207\uFF0C\u4E00\u76F4\u5207\u5230\u7B2C\u56DB\u4F4D\u4E3A\u6B62(\u4E0D\u5305\u62EC\u7B2C\u4E94\u4F4D)\u3002\u540C\u7406\uFF0CSlice B \u521B\u5EFA\u51FA\u4E86\u4E00\u4E2A len = 2\uFF0Ccap = 4 \u7684\u5207\u7247\u3002</p><div class="custom-container tip"><p class="custom-container-title">\u5B57\u9762\u91CF\u521B\u5EFA\u5207\u7247\u7684\u63D0\u793A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>array <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">}</span>

s <span class="token operator">:=</span> array<span class="token punctuation">[</span>low<span class="token punctuation">:</span>high<span class="token punctuation">]</span>
<span class="token comment">// len = high -low</span>

s <span class="token operator">:=</span> array<span class="token punctuation">[</span>low<span class="token punctuation">:</span>high<span class="token punctuation">:</span>max<span class="token punctuation">]</span>
<span class="token comment">// len = high-low cap = max-low</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></div><h4 id="nil-\u548C\u7A7A\u5207\u7247" tabindex="-1"><a class="header-anchor" href="#nil-\u548C\u7A7A\u5207\u7247" aria-hidden="true">#</a> nil \u548C\u7A7A\u5207\u7247</h4><p>nil \u5207\u7247\u548C\u7A7A\u5207\u7247\u4E5F\u662F\u5E38\u7528\u7684\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    var slice []int
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="`+x+`" alt="null"></p><p>nil \u5207\u7247\u88AB\u7528\u5728\u5F88\u591A\u6807\u51C6\u5E93\u548C\u5185\u7F6E\u51FD\u6570\u4E2D\uFF0C\u63CF\u8FF0\u4E00\u4E2A\u4E0D\u5B58\u5728\u7684\u5207\u7247\u7684\u65F6\u5019\uFF0C\u5C31\u9700\u8981\u7528\u5230 nil \u5207\u7247\u3002\u6BD4\u5982\u51FD\u6570\u5728\u53D1\u751F\u5F02\u5E38\u7684\u65F6\u5019\uFF0C\u8FD4\u56DE\u7684\u5207\u7247\u5C31\u662F nil \u5207\u7247\u3002nil \u5207\u7247\u7684\u6307\u9488\u6307\u5411 nil\u3002</p><p>\u7A7A\u5207\u7247\u4E00\u822C\u4F1A\u7528\u6765\u8868\u793A\u4E00\u4E2A\u7A7A\u7684\u96C6\u5408\u3002\u6BD4\u5982\u6570\u636E\u5E93\u67E5\u8BE2\uFF0C\u4E00\u6761\u7ED3\u679C\u4E5F\u6CA1\u6709\u67E5\u5230\uFF0C\u90A3\u4E48\u5C31\u53EF\u4EE5\u8FD4\u56DE\u4E00\u4E2A\u7A7A\u5207\u7247\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>    silce <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span>
    slice <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><img src="`+P+`" alt="null"></p><p>\u7A7A\u5207\u7247\u548C nil \u5207\u7247\u7684\u533A\u522B\u5728\u4E8E\uFF0C\u7A7A\u5207\u7247\u6307\u5411\u7684\u5730\u5740\u4E0D\u662Fnil\uFF0C\u6307\u5411\u7684\u662F\u4E00\u4E2A\u5185\u5B58\u5730\u5740\uFF0C\u4F46\u662F\u5B83\u6CA1\u6709\u5206\u914D\u4EFB\u4F55\u5185\u5B58\u7A7A\u95F4\uFF0C\u5373\u5E95\u5C42\u5143\u7D20\u5305\u542B0\u4E2A\u5143\u7D20\u3002</p><p>\u6700\u540E\u9700\u8981\u8BF4\u660E\u7684\u4E00\u70B9\u662F\u3002\u4E0D\u7BA1\u662F\u4F7F\u7528 nil \u5207\u7247\u8FD8\u662F\u7A7A\u5207\u7247\uFF0C\u5BF9\u5176\u8C03\u7528\u5185\u7F6E\u51FD\u6570 append\uFF0Clen \u548C cap \u7684\u6548\u679C\u90FD\u662F\u4E00\u6837\u7684\u3002</p><h3 id="\u5207\u7247\u6269\u5BB9" tabindex="-1"><a class="header-anchor" href="#\u5207\u7247\u6269\u5BB9" aria-hidden="true">#</a> \u5207\u7247\u6269\u5BB9</h3><div class="custom-container tip"><p class="custom-container-title">\u601D\u8003\u9898\u6765\u4E86</p><p>\u5F53\u4E00\u4E2A\u5207\u7247\u7684\u5BB9\u91CF\u6EE1\u4E86\uFF0C\u5C31\u9700\u8981\u6269\u5BB9\u4E86\u3002\u600E\u4E48\u6269\uFF0C\u7B56\u7565\u662F\u4EC0\u4E48\uFF1F</p></div><details class="custom-container details"><summary>\u67E5\u770B\u7B54\u6848</summary><ul><li><code>Go 1.8/1.9</code>\u5927\u540C\u5C0F\u5F02</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// growslice handles slice growth during append.</span>
<span class="token comment">// It is passed the slice element type, the old slice, and the desired new minimum capacity,</span>
<span class="token comment">// and it returns a new slice with at least that capacity, with the old data</span>
<span class="token comment">// copied into it.</span>
<span class="token comment">// The new slice&#39;s length is set to the old slice&#39;s length,</span>
<span class="token comment">// NOT to the new requested capacity.</span>
<span class="token comment">// This is for codegen convenience. The old slice&#39;s length is used immediately</span>
<span class="token comment">// to calculate where to write new values during an append.</span>
<span class="token comment">// TODO: When the old backend is gone, reconsider this decision.</span>
<span class="token comment">// The SSA backend might prefer the new length or to return only ptr/cap and save stack space.</span>
<span class="token keyword">func</span> <span class="token function">growslice</span><span class="token punctuation">(</span>et <span class="token operator">*</span>_type<span class="token punctuation">,</span> old slice<span class="token punctuation">,</span> <span class="token builtin">cap</span> <span class="token builtin">int</span><span class="token punctuation">)</span> slice <span class="token punctuation">{</span>
    <span class="token comment">/**  
    @et\uFF1A\u5207\u7247\u7C7B\u578B
    @old\uFF1A \u5C31\u5207\u7247
    @cap: \u65B0\u7684\u5207\u7247\u5BB9\u91CF
    
    **/</span>
    <span class="token keyword">if</span> raceenabled <span class="token punctuation">{</span>
        callerpc <span class="token operator">:=</span> <span class="token function">getcallerpc</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>et<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token function">racereadrangepc</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span>array<span class="token punctuation">,</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span><span class="token builtin">len</span><span class="token operator">*</span><span class="token function">int</span><span class="token punctuation">(</span>et<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> callerpc<span class="token punctuation">,</span> <span class="token function">funcPC</span><span class="token punctuation">(</span>growslice<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> msanenabled <span class="token punctuation">{</span>
        <span class="token function">msanread</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span>array<span class="token punctuation">,</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span><span class="token builtin">len</span><span class="token operator">*</span><span class="token function">int</span><span class="token punctuation">(</span>et<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">if</span> <span class="token builtin">cap</span> <span class="token operator">&lt;</span> old<span class="token punctuation">.</span><span class="token builtin">cap</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u65B0\u8981\u6269\u5BB9\u7684\u5BB9\u91CF\u6BD4\u539F\u6765\u7684\u5BB9\u91CF\u8FD8\u8981\u5C0F\uFF0C\u8FD9\u4EE3\u8868\u8981\u7F29\u5BB9\u4E86\uFF0C\u90A3\u4E48\u53EF\u4EE5\u76F4\u63A5\u62A5panic\u4E86</span>
           <span class="token function">panic</span><span class="token punctuation">(</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token string">&quot;growslice: cap out of range&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> et<span class="token punctuation">.</span>size <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u5F53\u524D\u5207\u7247\u7684\u5927\u5C0F\u4E3A0\uFF0C\u8FD8\u8C03\u7528\u4E86\u6269\u5BB9\u65B9\u6CD5\uFF0C\u90A3\u4E48\u5C31\u65B0\u751F\u6210\u4E00\u4E2A\u65B0\u7684\u5BB9\u91CF\u7684\u5207\u7247\u8FD4\u56DE\u3002</span>
        <span class="token keyword">return</span> slice<span class="token punctuation">{</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>zerobase<span class="token punctuation">)</span><span class="token punctuation">,</span> old<span class="token punctuation">.</span><span class="token builtin">len</span><span class="token punctuation">,</span> <span class="token builtin">cap</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

  <span class="token comment">// \u8FD9\u91CC\u5C31\u662F\u6269\u5BB9\u7684\u7B56\u7565</span>
    newcap <span class="token operator">:=</span> old<span class="token punctuation">.</span><span class="token builtin">cap</span>
    doublecap <span class="token operator">:=</span> newcap <span class="token operator">+</span> newcap
    <span class="token keyword">if</span> <span class="token builtin">cap</span> <span class="token operator">&gt;</span> doublecap <span class="token punctuation">{</span>
        newcap <span class="token operator">=</span> <span class="token builtin">cap</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> old<span class="token punctuation">.</span><span class="token builtin">len</span> <span class="token operator">&lt;</span> <span class="token number">1024</span> <span class="token punctuation">{</span>
            newcap <span class="token operator">=</span> doublecap
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> newcap <span class="token operator">&lt;</span> <span class="token builtin">cap</span> <span class="token punctuation">{</span>
                newcap <span class="token operator">+=</span> newcap <span class="token operator">/</span> <span class="token number">4</span>
            <span class="token punctuation">}</span> 
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u8BA1\u7B97\u65B0\u7684\u5207\u7247\u7684\u5BB9\u91CF\uFF0C\u957F\u5EA6\u3002</span>
    <span class="token keyword">var</span> lenmem<span class="token punctuation">,</span> newlenmem<span class="token punctuation">,</span> capmem <span class="token builtin">uintptr</span>
    <span class="token keyword">const</span> ptrSize <span class="token operator">=</span> unsafe<span class="token punctuation">.</span><span class="token function">Sizeof</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">byte</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">switch</span> et<span class="token punctuation">.</span>size <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>
        lenmem <span class="token operator">=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span><span class="token builtin">len</span><span class="token punctuation">)</span>
        newlenmem <span class="token operator">=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span><span class="token builtin">cap</span><span class="token punctuation">)</span>
        capmem <span class="token operator">=</span> <span class="token function">roundupsize</span><span class="token punctuation">(</span><span class="token function">uintptr</span><span class="token punctuation">(</span>newcap<span class="token punctuation">)</span><span class="token punctuation">)</span>
        newcap <span class="token operator">=</span> <span class="token function">int</span><span class="token punctuation">(</span>capmem<span class="token punctuation">)</span>
    <span class="token keyword">case</span> ptrSize<span class="token punctuation">:</span>
        lenmem <span class="token operator">=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span><span class="token builtin">len</span><span class="token punctuation">)</span> <span class="token operator">*</span> ptrSize
        newlenmem <span class="token operator">=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span><span class="token builtin">cap</span><span class="token punctuation">)</span> <span class="token operator">*</span> ptrSize
        capmem <span class="token operator">=</span> <span class="token function">roundupsize</span><span class="token punctuation">(</span><span class="token function">uintptr</span><span class="token punctuation">(</span>newcap<span class="token punctuation">)</span> <span class="token operator">*</span> ptrSize<span class="token punctuation">)</span>
        newcap <span class="token operator">=</span> <span class="token function">int</span><span class="token punctuation">(</span>capmem <span class="token operator">/</span> ptrSize<span class="token punctuation">)</span>
    <span class="token keyword">default</span><span class="token punctuation">:</span>
        lenmem <span class="token operator">=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span><span class="token builtin">len</span><span class="token punctuation">)</span> <span class="token operator">*</span> et<span class="token punctuation">.</span>size
        newlenmem <span class="token operator">=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span><span class="token builtin">cap</span><span class="token punctuation">)</span> <span class="token operator">*</span> et<span class="token punctuation">.</span>size
        capmem <span class="token operator">=</span> <span class="token function">roundupsize</span><span class="token punctuation">(</span><span class="token function">uintptr</span><span class="token punctuation">(</span>newcap<span class="token punctuation">)</span> <span class="token operator">*</span> et<span class="token punctuation">.</span>size<span class="token punctuation">)</span>
        newcap <span class="token operator">=</span> <span class="token function">int</span><span class="token punctuation">(</span>capmem <span class="token operator">/</span> et<span class="token punctuation">.</span>size<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5224\u65AD\u975E\u6CD5\u7684\u503C\uFF0C\u4FDD\u8BC1\u5BB9\u91CF\u662F\u5728\u589E\u52A0\uFF0C\u5E76\u4E14\u5BB9\u91CF\u4E0D\u8D85\u8FC7\u6700\u5927\u5BB9\u91CF</span>
    <span class="token keyword">if</span> <span class="token builtin">cap</span> <span class="token operator">&lt;</span> old<span class="token punctuation">.</span><span class="token builtin">cap</span> <span class="token operator">||</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>newcap<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token function">maxSliceCap</span><span class="token punctuation">(</span>et<span class="token punctuation">.</span>size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token string">&quot;growslice: cap out of range&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">var</span> p unsafe<span class="token punctuation">.</span>Pointer
    
    <span class="token keyword">if</span> et<span class="token punctuation">.</span>kind<span class="token operator">&amp;</span>kindNoPointers <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5728\u8001\u7684\u5207\u7247\u540E\u9762\u7EE7\u7EED\u6269\u5145\u5BB9\u91CF</span>
        p <span class="token operator">=</span> <span class="token function">mallocgc</span><span class="token punctuation">(</span>capmem<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
        <span class="token comment">// \u5C06 lenmem \u8FD9\u4E2A\u591A\u4E2A bytes \u4ECE old.array\u5730\u5740 \u62F7\u8D1D\u5230 p \u7684\u5730\u5740\u5904</span>
        <span class="token function">memmove</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> old<span class="token punctuation">.</span>array<span class="token punctuation">,</span> lenmem<span class="token punctuation">)</span>
        <span class="token comment">// \u5148\u5C06 P \u5730\u5740\u52A0\u4E0A\u65B0\u7684\u5BB9\u91CF\u5F97\u5230\u65B0\u5207\u7247\u5BB9\u91CF\u7684\u5730\u5740\uFF0C\u7136\u540E\u5C06\u65B0\u5207\u7247\u5BB9\u91CF\u5730\u5740\u540E\u9762\u7684 capmem-newlenmem \u4E2A bytes \u8FD9\u5757\u5185\u5B58\u521D\u59CB\u5316\u3002\u4E3A\u4E4B\u540E\u7EE7\u7EED append() \u64CD\u4F5C\u817E\u51FA\u7A7A\u95F4\u3002</span>
        <span class="token function">memclrNoHeapPointers</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> newlenmem<span class="token punctuation">)</span><span class="token punctuation">,</span> capmem<span class="token operator">-</span>newlenmem<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u91CD\u65B0\u7533\u8BF7\u65B0\u7684\u6570\u7EC4\u7ED9\u65B0\u5207\u7247</span>
        <span class="token comment">// \u91CD\u65B0\u7533\u8BF7 capmen \u8FD9\u4E2A\u5927\u7684\u5185\u5B58\u5730\u5740\uFF0C\u5E76\u4E14\u521D\u59CB\u5316\u4E3A0\u503C</span>
        p <span class="token operator">=</span> <span class="token function">mallocgc</span><span class="token punctuation">(</span>capmem<span class="token punctuation">,</span> et<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token operator">!</span>writeBarrier<span class="token punctuation">.</span>enabled <span class="token punctuation">{</span>
            <span class="token comment">// \u5982\u679C\u8FD8\u4E0D\u80FD\u6253\u5F00\u5199\u9501\uFF0C\u90A3\u4E48\u53EA\u80FD\u628A lenmem \u5927\u5C0F\u7684 bytes \u5B57\u8282\u4ECE old.array \u62F7\u8D1D\u5230 p \u7684\u5730\u5740\u5904</span>
            <span class="token function">memmove</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> old<span class="token punctuation">.</span>array<span class="token punctuation">,</span> lenmem<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5FAA\u73AF\u62F7\u8D1D\u8001\u7684\u5207\u7247\u7684\u503C</span>
            <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> lenmem<span class="token punctuation">;</span> i <span class="token operator">+=</span> et<span class="token punctuation">.</span>size <span class="token punctuation">{</span>
                <span class="token function">typedmemmove</span><span class="token punctuation">(</span>et<span class="token punctuation">,</span> <span class="token function">add</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">add</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span>array<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u8FD4\u56DE\u6700\u7EC8\u65B0\u5207\u7247\uFF0C\u5BB9\u91CF\u66F4\u65B0\u4E3A\u6700\u65B0\u6269\u5BB9\u4E4B\u540E\u7684\u5BB9\u91CF</span>
    <span class="token keyword">return</span> slice<span class="token punctuation">{</span>p<span class="token punctuation">,</span> old<span class="token punctuation">.</span><span class="token builtin">len</span><span class="token punctuation">,</span> newcap<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br></div></div><ul><li>\u6700\u65B0\u7248<code>Go2</code>\uFF082022-4-7\uFF09</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// growslice handles slice growth during append.</span>
<span class="token comment">// It is passed the slice element type, the old slice, and the desired new minimum capacity,</span>
<span class="token comment">// and it returns a new slice with at least that capacity, with the old data</span>
<span class="token comment">// copied into it.</span>
<span class="token comment">// The new slice&#39;s length is set to the old slice&#39;s length,</span>
<span class="token comment">// NOT to the new requested capacity.</span>
<span class="token comment">// This is for codegen convenience. The old slice&#39;s length is used immediately</span>
<span class="token comment">// to calculate where to write new values during an append.</span>
<span class="token comment">// TODO: When the old backend is gone, reconsider this decision.</span>
<span class="token comment">// The SSA backend might prefer the new length or to return only ptr/cap and save stack space.</span>
<span class="token keyword">func</span> <span class="token function">growslice</span><span class="token punctuation">(</span>et <span class="token operator">*</span>_type<span class="token punctuation">,</span> old slice<span class="token punctuation">,</span> <span class="token builtin">cap</span> <span class="token builtin">int</span><span class="token punctuation">)</span> slice <span class="token punctuation">{</span>
	<span class="token keyword">if</span> raceenabled <span class="token punctuation">{</span>
		callerpc <span class="token operator">:=</span> <span class="token function">getcallerpc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token function">racereadrangepc</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span>array<span class="token punctuation">,</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span><span class="token builtin">len</span><span class="token operator">*</span><span class="token function">int</span><span class="token punctuation">(</span>et<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> callerpc<span class="token punctuation">,</span> abi<span class="token punctuation">.</span><span class="token function">FuncPCABIInternal</span><span class="token punctuation">(</span>growslice<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> msanenabled <span class="token punctuation">{</span>
		<span class="token function">msanread</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span>array<span class="token punctuation">,</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span><span class="token builtin">len</span><span class="token operator">*</span><span class="token function">int</span><span class="token punctuation">(</span>et<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">if</span> asanenabled <span class="token punctuation">{</span>
		<span class="token function">asanread</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span>array<span class="token punctuation">,</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span><span class="token builtin">len</span><span class="token operator">*</span><span class="token function">int</span><span class="token punctuation">(</span>et<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> <span class="token builtin">cap</span> <span class="token operator">&lt;</span> old<span class="token punctuation">.</span><span class="token builtin">cap</span> <span class="token punctuation">{</span>
		<span class="token function">panic</span><span class="token punctuation">(</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token string">&quot;growslice: cap out of range&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">if</span> et<span class="token punctuation">.</span>size <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
		<span class="token comment">// append should not create a slice with nil pointer but non-zero len.</span>
		<span class="token comment">// We assume that append doesn&#39;t need to preserve old.array in this case.</span>
		<span class="token keyword">return</span> slice<span class="token punctuation">{</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>zerobase<span class="token punctuation">)</span><span class="token punctuation">,</span> old<span class="token punctuation">.</span><span class="token builtin">len</span><span class="token punctuation">,</span> <span class="token builtin">cap</span><span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	newcap <span class="token operator">:=</span> old<span class="token punctuation">.</span><span class="token builtin">cap</span>
	doublecap <span class="token operator">:=</span> newcap <span class="token operator">+</span> newcap
	<span class="token keyword">if</span> <span class="token builtin">cap</span> <span class="token operator">&gt;</span> doublecap <span class="token punctuation">{</span>
		newcap <span class="token operator">=</span> <span class="token builtin">cap</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		<span class="token keyword">const</span> threshold <span class="token operator">=</span> <span class="token number">256</span>
		<span class="token keyword">if</span> old<span class="token punctuation">.</span><span class="token builtin">cap</span> <span class="token operator">&lt;</span> threshold <span class="token punctuation">{</span>
			newcap <span class="token operator">=</span> doublecap
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// Check 0 &lt; newcap to detect overflow</span>
			<span class="token comment">// and prevent an infinite loop.</span>
			<span class="token keyword">for</span> <span class="token number">0</span> <span class="token operator">&lt;</span> newcap <span class="token operator">&amp;&amp;</span> newcap <span class="token operator">&lt;</span> <span class="token builtin">cap</span> <span class="token punctuation">{</span>
				<span class="token comment">// Transition from growing 2x for small slices</span>
				<span class="token comment">// to growing 1.25x for large slices. This formula</span>
				<span class="token comment">// gives a smooth-ish transition between the two.</span>
                <span class="token comment">// \u4ECE\u5C0F\u7247\u589E\u957F2\u500D\u5230\u5927\u7247\u589E\u957F1.25\u500D\u3002\u8FD9\u4E2A\u516C\u5F0F\u7ED9\u51FA\u4E86\u4E24\u8005\u4E4B\u95F4\u7684\u5E73\u6ED1\u8FC7\u6E21\u3002</span>
				newcap <span class="token operator">+=</span> <span class="token punctuation">(</span>newcap <span class="token operator">+</span> <span class="token number">3</span><span class="token operator">*</span>threshold<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">4</span>
			<span class="token punctuation">}</span>
			<span class="token comment">// Set newcap to the requested cap when</span>
			<span class="token comment">// the newcap calculation overflowed.</span>
            <span class="token comment">// \u5F53newcap\u8BA1\u7B97\u6EA2\u51FA\u65F6\uFF0C\u5C06newcap\u8BBE\u7F6E\u4E3A\u8BF7\u6C42\u7684\u4E0A\u9650\u3002</span>
			<span class="token keyword">if</span> newcap <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token punctuation">{</span>
				newcap <span class="token operator">=</span> <span class="token builtin">cap</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">var</span> overflow <span class="token builtin">bool</span>
	<span class="token keyword">var</span> lenmem<span class="token punctuation">,</span> newlenmem<span class="token punctuation">,</span> capmem <span class="token builtin">uintptr</span>
	<span class="token comment">// Specialize for common values of et.size.</span>
	<span class="token comment">// For 1 we don&#39;t need any division/multiplication.</span>
	<span class="token comment">// For goarch.PtrSize, compiler will optimize division/multiplication into a shift by a constant.</span>
	<span class="token comment">// For powers of 2, use a variable shift.</span>
	<span class="token keyword">switch</span> <span class="token punctuation">{</span>
	<span class="token keyword">case</span> et<span class="token punctuation">.</span>size <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
		lenmem <span class="token operator">=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span><span class="token builtin">len</span><span class="token punctuation">)</span>
		newlenmem <span class="token operator">=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span><span class="token builtin">cap</span><span class="token punctuation">)</span>
		capmem <span class="token operator">=</span> <span class="token function">roundupsize</span><span class="token punctuation">(</span><span class="token function">uintptr</span><span class="token punctuation">(</span>newcap<span class="token punctuation">)</span><span class="token punctuation">)</span>
		overflow <span class="token operator">=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>newcap<span class="token punctuation">)</span> <span class="token operator">&gt;</span> maxAlloc
		newcap <span class="token operator">=</span> <span class="token function">int</span><span class="token punctuation">(</span>capmem<span class="token punctuation">)</span>
	<span class="token keyword">case</span> et<span class="token punctuation">.</span>size <span class="token operator">==</span> goarch<span class="token punctuation">.</span>PtrSize<span class="token punctuation">:</span>
		lenmem <span class="token operator">=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span><span class="token builtin">len</span><span class="token punctuation">)</span> <span class="token operator">*</span> goarch<span class="token punctuation">.</span>PtrSize
		newlenmem <span class="token operator">=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span><span class="token builtin">cap</span><span class="token punctuation">)</span> <span class="token operator">*</span> goarch<span class="token punctuation">.</span>PtrSize
		capmem <span class="token operator">=</span> <span class="token function">roundupsize</span><span class="token punctuation">(</span><span class="token function">uintptr</span><span class="token punctuation">(</span>newcap<span class="token punctuation">)</span> <span class="token operator">*</span> goarch<span class="token punctuation">.</span>PtrSize<span class="token punctuation">)</span>
		overflow <span class="token operator">=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>newcap<span class="token punctuation">)</span> <span class="token operator">&gt;</span> maxAlloc<span class="token operator">/</span>goarch<span class="token punctuation">.</span>PtrSize
		newcap <span class="token operator">=</span> <span class="token function">int</span><span class="token punctuation">(</span>capmem <span class="token operator">/</span> goarch<span class="token punctuation">.</span>PtrSize<span class="token punctuation">)</span>
	<span class="token keyword">case</span> <span class="token function">isPowerOfTwo</span><span class="token punctuation">(</span>et<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">:</span>
		<span class="token keyword">var</span> shift <span class="token builtin">uintptr</span>
		<span class="token keyword">if</span> goarch<span class="token punctuation">.</span>PtrSize <span class="token operator">==</span> <span class="token number">8</span> <span class="token punctuation">{</span>
			<span class="token comment">// Mask shift for better code generation.</span>
			shift <span class="token operator">=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span><span class="token function">Ctz64</span><span class="token punctuation">(</span><span class="token function">uint64</span><span class="token punctuation">(</span>et<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">63</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			shift <span class="token operator">=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span><span class="token function">Ctz32</span><span class="token punctuation">(</span><span class="token function">uint32</span><span class="token punctuation">(</span>et<span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">31</span>
		<span class="token punctuation">}</span>
		lenmem <span class="token operator">=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span><span class="token builtin">len</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> shift
		newlenmem <span class="token operator">=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span><span class="token builtin">cap</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> shift
		capmem <span class="token operator">=</span> <span class="token function">roundupsize</span><span class="token punctuation">(</span><span class="token function">uintptr</span><span class="token punctuation">(</span>newcap<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> shift<span class="token punctuation">)</span>
		overflow <span class="token operator">=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>newcap<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token punctuation">(</span>maxAlloc <span class="token operator">&gt;&gt;</span> shift<span class="token punctuation">)</span>
		newcap <span class="token operator">=</span> <span class="token function">int</span><span class="token punctuation">(</span>capmem <span class="token operator">&gt;&gt;</span> shift<span class="token punctuation">)</span>
	<span class="token keyword">default</span><span class="token punctuation">:</span>
		lenmem <span class="token operator">=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span><span class="token builtin">len</span><span class="token punctuation">)</span> <span class="token operator">*</span> et<span class="token punctuation">.</span>size
		newlenmem <span class="token operator">=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span><span class="token builtin">cap</span><span class="token punctuation">)</span> <span class="token operator">*</span> et<span class="token punctuation">.</span>size
		capmem<span class="token punctuation">,</span> overflow <span class="token operator">=</span> math<span class="token punctuation">.</span><span class="token function">MulUintptr</span><span class="token punctuation">(</span>et<span class="token punctuation">.</span>size<span class="token punctuation">,</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>newcap<span class="token punctuation">)</span><span class="token punctuation">)</span>
		capmem <span class="token operator">=</span> <span class="token function">roundupsize</span><span class="token punctuation">(</span>capmem<span class="token punctuation">)</span>
		newcap <span class="token operator">=</span> <span class="token function">int</span><span class="token punctuation">(</span>capmem <span class="token operator">/</span> et<span class="token punctuation">.</span>size<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// The check of overflow in addition to capmem &gt; maxAlloc is needed</span>
	<span class="token comment">// to prevent an overflow which can be used to trigger a segfault</span>
	<span class="token comment">// on 32bit architectures with this example program:</span>
	<span class="token comment">//</span>
	<span class="token comment">// type T [1&lt;&lt;27 + 1]int64</span>
	<span class="token comment">//</span>
	<span class="token comment">// var d T</span>
	<span class="token comment">// var s []T</span>
	<span class="token comment">//</span>
	<span class="token comment">// func main() {</span>
	<span class="token comment">//   s = append(s, d, d, d, d)</span>
	<span class="token comment">//   print(len(s), &quot;\\n&quot;)</span>
	<span class="token comment">// }</span>
	<span class="token keyword">if</span> overflow <span class="token operator">||</span> capmem <span class="token operator">&gt;</span> maxAlloc <span class="token punctuation">{</span>
		<span class="token function">panic</span><span class="token punctuation">(</span><span class="token function">errorString</span><span class="token punctuation">(</span><span class="token string">&quot;growslice: cap out of range&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">var</span> p unsafe<span class="token punctuation">.</span>Pointer
	<span class="token keyword">if</span> et<span class="token punctuation">.</span>ptrdata <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
        <span class="token comment">// // \u5728\u8001\u7684\u5207\u7247\u540E\u9762\u7EE7\u7EED\u6269\u5145\u5BB9\u91CF</span>
		p <span class="token operator">=</span> <span class="token function">mallocgc</span><span class="token punctuation">(</span>capmem<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
		<span class="token comment">// The append() that calls growslice is going to overwrite from old.len to cap (which will be the new length).</span>
		<span class="token comment">// Only clear the part that will not be overwritten.</span>
		<span class="token function">memclrNoHeapPointers</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> newlenmem<span class="token punctuation">)</span><span class="token punctuation">,</span> capmem<span class="token operator">-</span>newlenmem<span class="token punctuation">)</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		<span class="token comment">// Note: can&#39;t use rawmem (which avoids zeroing of memory), because then GC can scan uninitialized memory.\u4E0D\u4F7F\u7528rawmem(\u8FD9\u907F\u514D\u4E86\u5185\u5B58\u5F52\u96F6)\uFF0C\u56E0\u4E3A\u8FD9\u6837GC\u53EF\u4EE5\u626B\u63CF\u672A\u521D\u59CB\u5316\u7684\u5185\u5B58\u3002</span>
		p <span class="token operator">=</span> <span class="token function">mallocgc</span><span class="token punctuation">(</span>capmem<span class="token punctuation">,</span> et<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> lenmem <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> writeBarrier<span class="token punctuation">.</span>enabled <span class="token punctuation">{</span>
			<span class="token comment">// Only shade the pointers in old.array since we know the destination slice p</span>
			<span class="token comment">// only contains nil pointers because it has been cleared during alloc.</span>
			<span class="token function">bulkBarrierPreWriteSrcOnly</span><span class="token punctuation">(</span><span class="token function">uintptr</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>old<span class="token punctuation">.</span>array<span class="token punctuation">)</span><span class="token punctuation">,</span> lenmem<span class="token operator">-</span>et<span class="token punctuation">.</span>size<span class="token operator">+</span>et<span class="token punctuation">.</span>ptrdata<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token function">memmove</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> old<span class="token punctuation">.</span>array<span class="token punctuation">,</span> lenmem<span class="token punctuation">)</span>

	<span class="token keyword">return</span> slice<span class="token punctuation">{</span>p<span class="token punctuation">,</span> old<span class="token punctuation">.</span><span class="token builtin">len</span><span class="token punctuation">,</span> newcap<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br></div></div><p>\u4E0A\u8FF0\u5C31\u662F\u6269\u5BB9\u7684\u5B9E\u73B0\u3002\u4E3B\u8981\u9700\u8981\u5173\u6CE8\u7684\u6709\u4E24\u70B9\uFF0C\u4E00\u4E2A\u662F\u6269\u5BB9\u65F6\u5019\u7684\u7B56\u7565\uFF0C\u8FD8\u6709\u4E00\u4E2A\u5C31\u662F\u6269\u5BB9\u662F\u751F\u6210\u5168\u65B0\u7684\u5185\u5B58\u5730\u5740\u8FD8\u662F\u5728\u539F\u6765\u7684\u5730\u5740\u540E\u8FFD\u52A0\u3002</p></details><h4 id="\u6269\u5BB9\u7B56\u7565" tabindex="-1"><a class="header-anchor" href="#\u6269\u5BB9\u7B56\u7565" aria-hidden="true">#</a> \u6269\u5BB9\u7B56\u7565</h4><p>\u5148\u770B\u770B\u6269\u5BB9\u7B56\u7565\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	slice <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">}</span>
	<span class="token comment">// \u6269\u5BB9</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Init slice = %v, Pointer = %p, len = %d, cap = %d\\n\\n&quot;</span><span class="token punctuation">,</span> slice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>slice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">)</span>

	newSlice <span class="token operator">:=</span> <span class="token function">append</span><span class="token punctuation">(</span>slice<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Before slice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> slice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>slice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Before newSlice = %v, Pointer = %p, len = %d, cap = %d\\n\\n&quot;</span><span class="token punctuation">,</span> newSlice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>newSlice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">)</span>

	<span class="token comment">// \u5BF9\u65B0\u5207\u7247\u64CD\u4F5C\uFF0C\u770B\u770B\u4F1A\u4E0D\u4F1A\u5F71\u54CD\u539F\u5207\u7247</span>
	newSlice<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">10</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;After slice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> slice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>slice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;After newSlice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> newSlice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>newSlice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>Init slice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span> <span class="token number">30</span> <span class="token number">40</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc000004078, len <span class="token operator">=</span> <span class="token number">4</span>, cap <span class="token operator">=</span> <span class="token number">4</span>

Before slice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span> <span class="token number">30</span> <span class="token number">40</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc000004078, len <span class="token operator">=</span> <span class="token number">4</span>, cap <span class="token operator">=</span> <span class="token number">4</span>
Before newSlice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span> <span class="token number">30</span> <span class="token number">40</span> <span class="token number">50</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc0000040a8, len <span class="token operator">=</span> <span class="token number">5</span>, cap <span class="token operator">=</span> <span class="token number">8</span>

After slice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span> <span class="token number">30</span> <span class="token number">40</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc000004078, len <span class="token operator">=</span> <span class="token number">4</span>, cap <span class="token operator">=</span> <span class="token number">4</span>
After newSlice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">30</span> <span class="token number">30</span> <span class="token number">40</span> <span class="token number">50</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc0000040a8, len <span class="token operator">=</span> <span class="token number">5</span>, cap <span class="token operator">=</span> <span class="token number">8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u7528\u56FE\u8868\u793A\u51FA\u4E0A\u8FF0\u8FC7\u7A0B\u3002</p><p><img src="`+_+`" alt="null"></p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u4ECE\u56FE\u4E0A\u6211\u4EEC\u53EF\u4EE5\u5F88\u5BB9\u6613\u7684\u770B\u51FA\uFF0C\u65B0\u7684\u5207\u7247\u548C\u4E4B\u524D\u7684\u5207\u7247\u5DF2\u7ECF\u4E0D\u540C\u4E86\uFF0C\u56E0\u4E3A\u65B0\u7684\u5207\u7247\u66F4\u6539\u4E86\u4E00\u4E2A\u503C\uFF0C\u5E76\u6CA1\u6709\u5F71\u54CD\u5230\u539F\u6765\u7684\u6570\u7EC4\uFF0C\u65B0\u5207\u7247\u6307\u5411\u7684\u6570\u7EC4\u662F\u4E00\u4E2A\u5168\u65B0\u7684\u6570\u7EC4\u3002\u5E76\u4E14 cap \u5BB9\u91CF\u4E5F\u53D1\u751F\u4E86\u53D8\u5316\u3002\u8FD9\u4E4B\u95F4\u7A76\u7ADF\u53D1\u751F\u4E86\u4EC0\u4E48\u5462\uFF1F</p></div><p>Go \u4E2D\u5207\u7247\u6269\u5BB9\u7684\u7B56\u7565\u662F\u8FD9\u6837\u7684\uFF1A</p><p>\u5982\u679C\u5207\u7247\u7684\u5BB9\u91CF\u5C0F\u4E8E 1024 \u4E2A\u5143\u7D20\uFF0C\u4E8E\u662F\u6269\u5BB9\u7684\u65F6\u5019\u5C31\u7FFB\u500D\u589E\u52A0\u5BB9\u91CF\u3002\u4E0A\u9762\u90A3\u4E2A\u4F8B\u5B50\u4E5F\u9A8C\u8BC1\u4E86\u8FD9\u4E00\u60C5\u51B5\uFF0C\u603B\u5BB9\u91CF\u4ECE\u539F\u6765\u76844\u4E2A\u7FFB\u500D\u5230\u73B0\u5728\u76848\u4E2A\u3002</p><p>\u4E00\u65E6\u5143\u7D20\u4E2A\u6570\u8D85\u8FC7 1024 \u4E2A\u5143\u7D20\uFF0C\u90A3\u4E48\u589E\u957F\u56E0\u5B50\u5C31\u53D8\u6210 1.25 \uFF0C\u5373\u6BCF\u6B21\u589E\u52A0\u539F\u6765\u5BB9\u91CF\u7684\u56DB\u5206\u4E4B\u4E00\u3002(\u5C0Ftip:\u65B0\u65E7\u7248\u672C\u57FA\u672C\u90FD\u662F\u8FD9\u4E2A\u610F\u601D\uFF0C\u53EA\u662F\u6709\u70B9\u5C0F\u7EC6\u8282\u4E0D\u4E00\u81F4)</p><p>\u6CE8\u610F\uFF1A\u6269\u5BB9\u6269\u5927\u7684\u5BB9\u91CF\u90FD\u662F\u9488\u5BF9\u539F\u6765\u7684\u5BB9\u91CF\u800C\u8A00\u7684\uFF0C\u800C\u4E0D\u662F\u9488\u5BF9\u539F\u6765\u6570\u7EC4\u7684\u957F\u5EA6\u800C\u8A00\u7684\u3002</p><h4 id="\u65B0\u6570\u7EC4-or-\u8001\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u65B0\u6570\u7EC4-or-\u8001\u6570\u7EC4" aria-hidden="true">#</a> \u65B0\u6570\u7EC4 or \u8001\u6570\u7EC4 \uFF1F</h4><p>\u518D\u8C08\u8C08\u6269\u5BB9\u4E4B\u540E\u7684\u6570\u7EC4\u4E00\u5B9A\u662F\u65B0\u7684\u4E48\uFF1F\u8FD9\u4E2A\u4E0D\u4E00\u5B9A\uFF0C\u5206\u4E24\u79CD\u60C5\u51B5\u3002</p><ul><li>\u60C5\u51B5\u4E00\uFF1A\u5207\u7247<code>len &lt; cap</code></li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>
<span class="token comment">/** len &lt; cap**/</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	array <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">}</span>
	slice <span class="token operator">:=</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;init slice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> slice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>slice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Init array %v \\n\\n&quot;</span><span class="token punctuation">,</span> array<span class="token punctuation">)</span>

	newSlice <span class="token operator">:=</span> <span class="token function">append</span><span class="token punctuation">(</span>slice<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span>

	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Before slice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> slice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>slice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Before newSlice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> newSlice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>newSlice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Before array %v \\r\\n\\r\\n&quot;</span><span class="token punctuation">,</span> array<span class="token punctuation">)</span>

	newSlice<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">10</span>

	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;After slice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> slice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>slice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;After newSlice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> newSlice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>newSlice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;After array = %v\\n&quot;</span><span class="token punctuation">,</span> array<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>\u6253\u5370\u8F93\u51FA\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>init slice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc000096060, len <span class="token operator">=</span> <span class="token number">2</span>, cap <span class="token operator">=</span> <span class="token number">4</span>
Init array <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span> <span class="token number">30</span> <span class="token number">40</span><span class="token punctuation">]</span>

Before slice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc000096060, len <span class="token operator">=</span> <span class="token number">2</span>, cap <span class="token operator">=</span> <span class="token number">4</span>
Before newSlice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span> <span class="token number">50</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc000096090, len <span class="token operator">=</span> <span class="token number">3</span>, cap <span class="token operator">=</span> <span class="token number">4</span>
Before array <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span> <span class="token number">50</span> <span class="token number">40</span><span class="token punctuation">]</span>

After slice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">30</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc000096060, len <span class="token operator">=</span> <span class="token number">2</span>, cap <span class="token operator">=</span> <span class="token number">4</span>
After newSlice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">30</span> <span class="token number">50</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc000096090, len <span class="token operator">=</span> <span class="token number">3</span>, cap <span class="token operator">=</span> <span class="token number">4</span>
After array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">30</span> <span class="token number">50</span> <span class="token number">40</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u628A\u4E0A\u8FF0\u8FC7\u7A0B\u7528\u56FE\u8868\u793A\u51FA\u6765\uFF0C\u5982\u4E0B\u56FE\u3002</p><p><img src="`+S+`" alt="null"></p><p>\u901A\u8FC7\u6253\u5370\u7684\u7ED3\u679C\uFF0C\u6211\u4EEC\u53EF\u4EE5\u770B\u5230\uFF0C\u5728\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u6269\u5BB9\u4EE5\u540E\u5E76\u6CA1\u6709\u65B0\u5EFA\u4E00\u4E2A\u65B0\u7684\u6570\u7EC4\uFF0C\u6269\u5BB9\u524D\u540E\u7684\u6570\u7EC4\u90FD\u662F\u540C\u4E00\u4E2A\uFF0C\u8FD9\u4E5F\u5C31\u5BFC\u81F4\u4E86\u65B0\u7684\u5207\u7247\u4FEE\u6539\u4E86\u4E00\u4E2A\u503C\uFF0C\u4E5F\u5F71\u54CD\u5230\u4E86\u8001\u7684\u5207\u7247\u4E86\u3002\u5E76\u4E14 <code>append() </code>\u64CD\u4F5C\u4E5F\u6539\u53D8\u4E86\u539F\u6765\u6570\u7EC4\u91CC\u9762\u7684\u503C\u3002\u4E00\u4E2A <code>append() </code>\u64CD\u4F5C\u5F71\u54CD\u4E86\u8FD9\u4E48\u591A\u5730\u65B9\uFF0C\u5982\u679C\u539F\u6570\u7EC4\u4E0A\u6709\u591A\u4E2A\u5207\u7247\uFF0C\u90A3\u4E48\u8FD9\u4E9B\u5207\u7247\u90FD\u4F1A\u88AB\u5F71\u54CD\uFF01\u65E0\u610F\u95F4\u5C31\u4EA7\u751F\u4E86\u83AB\u540D\u7684 bug\uFF01</p><details class="custom-container details"><summary>Go\u4E2D\u6587\u6587\u6863\u7684\u539F\u8BDD</summary><p>\u8FD9\u79CD\u60C5\u51B5\uFF0C\u7531\u4E8E\u539F\u6570\u7EC4\u8FD8\u6709\u5BB9\u91CF\u53EF\u4EE5\u6269\u5BB9\uFF0C\u6240\u4EE5\u6267\u884C <code>append()</code> \u64CD\u4F5C\u4EE5\u540E\uFF0C\u4F1A\u5728\u539F\u6570\u7EC4\u4E0A\u76F4\u63A5\u64CD\u4F5C\uFF0C\u6240\u4EE5\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u6269\u5BB9\u4EE5\u540E\u7684\u6570\u7EC4\u8FD8\u662F\u6307\u5411\u539F\u6765\u7684\u6570\u7EC4\u3002</p><p>\u8FD9\u79CD\u60C5\u51B5\u4E5F\u6781\u5BB9\u6613\u51FA\u73B0\u5728\u5B57\u9762\u91CF\u521B\u5EFA\u5207\u7247\u65F6\u5019\uFF0C\u7B2C\u4E09\u4E2A\u53C2\u6570 cap \u4F20\u503C\u7684\u65F6\u5019\uFF0C\u5982\u679C\u7528\u5B57\u9762\u91CF\u521B\u5EFA\u5207\u7247\uFF0C<code>cap</code> \u5E76\u4E0D\u7B49\u4E8E\u6307\u5411\u6570\u7EC4\u7684\u603B\u5BB9\u91CF\uFF0C\u90A3\u4E48\u8FD9\u79CD\u60C5\u51B5\u5C31\u4F1A\u53D1\u751F\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>    slice <span class="token operator">:=</span> array<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u4E0A\u9762\u8FD9\u79CD\u60C5\u51B5\u975E\u5E38\u5371\u9669\uFF0C\u6781\u5EA6\u5BB9\u6613\u4EA7\u751F bug \u3002</p></details><div class="custom-container tip"><p class="custom-container-title">\u9519\u8BEF\u66F4\u6B63</p><p>\u539F\u6587\u6863\u4E2D\u63D0\u5230\uFF0C\u201C\u5728\u5B57\u9762\u91CF\u521B\u5EFA\u5207\u7247\u65F6\u5019\uFF0C\u7B2C\u4E09\u4E2A\u53C2\u6570 cap \u4F20\u503C\u7684\u65F6\u5019\uFF0C\u5982\u679C\u7528\u5B57\u9762\u91CF\u521B\u5EFA\u5207\u7247\uFF0C<code>cap</code> \u5E76\u4E0D\u7B49\u4E8E\u6307\u5411\u6570\u7EC4\u7684\u603B\u5BB9\u91CF\uFF0C\u90A3\u4E48\u8FD9\u79CD\u60C5\u51B5\uFF08\u5BF9\u65B0\u5207\u7247\u7684\u4FEE\u6539\u5F71\u54CD\u5E95\u5C42\u6570\u7EC4\uFF09\u5C31\u4F1A\u53D1\u751F\u3002\u201D</p><blockquote><p>\u7ECF\u8FC7\u6D4B\u8BD5\uFF0C\u53D1\u73B0\u662F\u5207\u7247\u7684<code>len&lt;cap</code>\u5BFC\u81F4\u7684\uFF0C\u4E0E\u5207\u7247\u8DDF\u5E95\u5C42\u6570\u7EC4\u7684\u603B\u5BB9\u91CF\u5173\u7CFB\u65E0\u5173\u3002\u4F46\u662F\u6709\u4E2A\u95EE\u9898\u662F\uFF0C\u5F53<code>len&lt;cap</code>\u7684\u65F6\u5019\uFF0C\u5207\u7247\u7684\u589E\u957F\u5FC5\u4E0D\u4F1A\u8FDB\u884C\u6269\u5BB9\uFF0C\u6240\u4EE5\u65B0\u5207\u7247\u7684\u5E95\u5C42\u8DDF\u539F\u5207\u7247\u7684\u5E95\u5C42\u662F\u4E00\u6837\u7684\uFF0C\u53EA\u662F\u5185\u5B58\u5185\u5BB9\u7684\u53EF\u89C1\u6027\u4E0D\u4E00\u81F4\u3002</p><p>\u6240\u4EE5\u8BF4\uFF0C\u8FD9\u4E2A\u6807\u9898\uFF08\u65B0\u6570\u7EC4or\u8001\u6570\u7EC4\uFF09\u6307\u7684\u5E94\u8BE5\u662F\u5207\u7247\u589E\u957F\u4E5F\u5C31\u662F<code>append</code>\u4E4B\u540E\u7684\u8FD4\u56DE\u7684\u662F\u65B0\u5207\u7247\u7684\u5E95\u5C42\u6570\u7EC4\u662F\u5426\u4E3A\u65B0\u3002</p></blockquote></div><details class="custom-container details"><summary>len\u5C0F\u4E8Ecap\u7EC6\u8282\u6D4B\u8BD5</summary><ul><li>slice\u7684cap\u5C0F\u4E8E\u5E95\u5C42\u6570\u7EC4\u603B\u5BB9\u91CF</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	array <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">}</span>
	slice <span class="token operator">:=</span> array<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;init slice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> slice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>slice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Init array %v, Pointer = %p \\r\\n\\r\\n&quot;</span><span class="token punctuation">,</span> array<span class="token punctuation">,</span> <span class="token operator">&amp;</span>array<span class="token punctuation">)</span>

	newSlice <span class="token operator">:=</span> <span class="token function">append</span><span class="token punctuation">(</span>slice<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span>

	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Before slice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> slice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>slice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Before newSlice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> newSlice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>newSlice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Before array %v, Pointer = %p \\r\\n\\r\\n&quot;</span><span class="token punctuation">,</span> array<span class="token punctuation">,</span> <span class="token operator">&amp;</span>array<span class="token punctuation">)</span>

	newSlice<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">10</span>

	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;After slice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> slice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>slice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;After newSlice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> newSlice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>newSlice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;After array = %v, Pointer = %p \\r\\n\\r\\n&quot;</span><span class="token punctuation">,</span> array<span class="token punctuation">,</span> <span class="token operator">&amp;</span>array<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>init slice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc000004078, len <span class="token operator">=</span> <span class="token number">1</span>, cap <span class="token operator">=</span> <span class="token number">3</span>
Init array <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span> <span class="token number">30</span> <span class="token number">40</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc0000121c0 

Before slice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc000004078, len <span class="token operator">=</span> <span class="token number">1</span>, cap <span class="token operator">=</span> <span class="token number">3</span>
Before newSlice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">20</span> <span class="token number">50</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc0000040a8, len <span class="token operator">=</span> <span class="token number">2</span>, cap <span class="token operator">=</span> <span class="token number">3</span>
Before array <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span> <span class="token number">50</span> <span class="token number">40</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc0000121c0

After slice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc000004078, len <span class="token operator">=</span> <span class="token number">1</span>, cap <span class="token operator">=</span> <span class="token number">3</span>
After newSlice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">20</span> <span class="token number">60</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc0000040a8, len <span class="token operator">=</span> <span class="token number">2</span>, cap <span class="token operator">=</span> <span class="token number">3</span>
After array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span> <span class="token number">60</span> <span class="token number">40</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc0000121c0

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u4ECE\u8F93\u51FA\u6765\u770B\uFF0C<code>slice,newSlice,array</code>\u7684\u5730\u5740\u90FD\u662F\u4E0D\u4E00\u6837\u7684\u3002\u4F46\u662F\u4E3A\u4EC0\u4E48\u5BF9<code>newSlice</code>\u7684\u4FEE\u6539\u4F1A\u5F71\u54CD\u5230<code>array</code>\u5462\uFF1F</p><blockquote><p>\u601D\u8003\u4E00\u4E0B\uFF0C\u55EF\u3002</p></blockquote><ul><li>slice\u7684cap\u7B49\u4E8E\u5E95\u5C42\u6570\u7EC4\u603B\u5BB9\u91CF</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	array <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">}</span>
	slice <span class="token operator">:=</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;init slice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> slice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>slice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Init array %v, Pointer = %p \\r\\n\\r\\n&quot;</span><span class="token punctuation">,</span> array<span class="token punctuation">,</span> <span class="token operator">&amp;</span>array<span class="token punctuation">)</span>

	newSlice <span class="token operator">:=</span> <span class="token function">append</span><span class="token punctuation">(</span>slice<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span>

	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Before slice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> slice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>slice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Before newSlice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> newSlice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>newSlice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Before array %v, Pointer = %p \\r\\n\\r\\n&quot;</span><span class="token punctuation">,</span> array<span class="token punctuation">,</span> <span class="token operator">&amp;</span>array<span class="token punctuation">)</span>

	newSlice<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">10</span>

	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;After slice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> slice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>slice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;After newSlice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> newSlice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>newSlice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;After array = %v, Pointer = %p \\r\\n\\r\\n&quot;</span><span class="token punctuation">,</span> array<span class="token punctuation">,</span> <span class="token operator">&amp;</span>array<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>\u8F93\u51FA</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>init slice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc000096060, len <span class="token operator">=</span> <span class="token number">2</span>, cap <span class="token operator">=</span> <span class="token number">4</span>
Init array <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span> <span class="token number">30</span> <span class="token number">40</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc0000a8080 

Before slice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc000096060, len <span class="token operator">=</span> <span class="token number">2</span>, cap <span class="token operator">=</span> <span class="token number">4</span>
Before newSlice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span> <span class="token number">50</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc000096090, len <span class="token operator">=</span> <span class="token number">3</span>, cap <span class="token operator">=</span> <span class="token number">4</span>
Before array <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span> <span class="token number">50</span> <span class="token number">40</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc0000a8080

After slice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">30</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc000096060, len <span class="token operator">=</span> <span class="token number">2</span>, cap <span class="token operator">=</span> <span class="token number">4</span>
After newSlice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">30</span> <span class="token number">50</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc000096090, len <span class="token operator">=</span> <span class="token number">3</span>, cap <span class="token operator">=</span> <span class="token number">4</span>
After array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">30</span> <span class="token number">50</span> <span class="token number">40</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc0000a8080
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><blockquote><p>\u4ECE\u8F93\u51FA\u6765\u770B\uFF0C<code>slice,newSlice,array</code>\u7684\u5730\u5740\u90FD\u662F\u4F9D\u7136\u4E0D\u4E00\u6837\u7684\u3002\u4F46\u662F\u5BF9\u65B0\u5207\u7247\u7684\u64CD\u4F5C\u4F9D\u7136\u5F71\u54CD\u4E86\u539F\u6570\u7EC4\u3002</p></blockquote><ul><li>slice\u7684cap\u5927\u4E8E\u5E95\u5C42\u6570\u7EC4\u603B\u5BB9\u91CF\uFF1F</li></ul><p>\u5BF9\u4E0D\u8D77\uFF0C\u8FD9\u79CD\u60C5\u51B5\u662F\u4E0D\u5B58\u5728\u7684\u3002</p><p>\u9996\u5148\uFF0C\u4ECE\u5E95\u5C42\u64CD\u4F5C\u7CFB\u7EDF\u7684\u89D2\u5EA6\u6765\u770B\uFF0Cslice\u7684\u5E95\u5C42\u662F\u4F9D\u9760\u8FDE\u7EED\u6570\u7EC4\u6765\u5206\u914D\u5185\u5B58\u7684\uFF0C\u53EF\u4EE5\u7406\u89E3\u4E3A\u5207\u7247\u4EC5\u4EC5\u662F\u6570\u7EC4\u7684\u4E00\u79CD\u5C01\u88C5\u800C\u5DF2\uFF0C\u4F46\u662F\u4ED6\u662F\u4E0D\u5177\u5907\u66F4\u6539\u5E95\u5C42\u6570\u7EC4\u7684\u76F8\u5173\u57FA\u672C\u4FE1\u606F\uFF08\u5730\u5740\uFF0C\u6570\u7EC4\u5927\u5C0F\uFF09\u7684\uFF0C\u800C\u4ED6\u7684\u6269\u5BB9\u7684<strong>\u4E00\u79CD\u65B9\u5F0F</strong>\u662F\u901A\u8FC7\u65B0\u751F\u6210\u4E00\u4E2A\u6570\u7EC4\uFF0C\u7136\u540E\u628A\u5143\u7D20\u62F7\u8D1D\u8FC7\u53BB\u5B9E\u73B0\u7684\u3002</p><p>\u5176\u6B21\uFF0C\u4ECE\u4EE3\u7801\u7684\u89D2\u5EA6\u6765\u770B\uFF0C\u4ED6\u662F\u4F1A\u62A5\u9519\u7684\u3002\u8D34\u4E2A\u56FE\u89E3\u5343\u6101\u3002</p><p><img src="`+A+`" alt="image-20220409012630666"></p></details><p>\u5EFA\u8BAE\u7528\u5B57\u9762\u91CF\u521B\u5EFA\u5207\u7247\u7684\u65F6\u5019\uFF0Ccap \u7684\u503C\u4E00\u5B9A\u8981\u4FDD\u6301\u6E05\u9192\uFF0C\u907F\u514D\u5171\u4EAB\u539F\u6570\u7EC4\u5BFC\u81F4\u7684 bug\u3002</p><ul><li>\u60C5\u51B5\u4E8C\uFF1A\u5207\u7247<code>len=cap</code></li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token comment">/**
len=cap
*/</span>

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	array <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">}</span>
	slice <span class="token operator">:=</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;init slice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> slice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>slice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Init array %v, Pointer = %p \\r\\n\\r\\n&quot;</span><span class="token punctuation">,</span> array<span class="token punctuation">,</span> <span class="token operator">&amp;</span>array<span class="token punctuation">)</span>

	newSlice <span class="token operator">:=</span> <span class="token function">append</span><span class="token punctuation">(</span>slice<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span>

	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Before slice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> slice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>slice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Before newSlice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> newSlice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>newSlice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Before array %v, Pointer = %p \\r\\n\\r\\n&quot;</span><span class="token punctuation">,</span> array<span class="token punctuation">,</span> <span class="token operator">&amp;</span>array<span class="token punctuation">)</span>

	newSlice<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">10</span>

	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;After slice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> slice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>slice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;After newSlice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> newSlice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>newSlice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;After array %v, Pointer = %p \\r\\n\\r\\n&quot;</span><span class="token punctuation">,</span> array<span class="token punctuation">,</span> <span class="token operator">&amp;</span>array<span class="token punctuation">)</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p>\u8F93\u51FA</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>init slice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span> <span class="token number">30</span> <span class="token number">40</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc000004078, len <span class="token operator">=</span> <span class="token number">4</span>, cap <span class="token operator">=</span> <span class="token number">4</span>
Init array <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span> <span class="token number">30</span> <span class="token number">40</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc0000121c0 

Before slice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span> <span class="token number">30</span> <span class="token number">40</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc000004078, len <span class="token operator">=</span> <span class="token number">4</span>, cap <span class="token operator">=</span> <span class="token number">4</span>
Before newSlice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span> <span class="token number">30</span> <span class="token number">40</span> <span class="token number">50</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc0000040a8, len <span class="token operator">=</span> <span class="token number">5</span>, cap <span class="token operator">=</span> <span class="token number">8</span>
Before array <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span> <span class="token number">30</span> <span class="token number">40</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc0000121c0

After slice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span> <span class="token number">30</span> <span class="token number">40</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc000004078, len <span class="token operator">=</span> <span class="token number">4</span>, cap <span class="token operator">=</span> <span class="token number">4</span>
After newSlice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">30</span> <span class="token number">30</span> <span class="token number">40</span> <span class="token number">50</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc0000040a8, len <span class="token operator">=</span> <span class="token number">5</span>, cap <span class="token operator">=</span> <span class="token number">8</span>
After array <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span> <span class="token number">30</span> <span class="token number">40</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc0000121c0
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u60C5\u51B5\u4E8C\u5176\u5B9E\u5C31\u662F\u5728\u6269\u5BB9\u7B56\u7565\u91CC\u9762\u4E3E\u7684\u4F8B\u5B50\uFF0C\u5728\u90A3\u4E2A\u4F8B\u5B50\u4E2D\u4E4B\u6240\u4EE5\u751F\u6210\u4E86\u65B0\u7684\u5207\u7247\uFF0C\u662F\u56E0\u4E3A\u539F\u6765\u6570\u7EC4\u7684\u5BB9\u91CF\u5DF2\u7ECF\u8FBE\u5230\u4E86\u6700\u5927\u503C\uFF0C\u518D\u60F3\u6269\u5BB9\uFF0C Go \u9ED8\u8BA4\u4F1A\u5148\u5F00\u4E00\u7247\u5185\u5B58\u533A\u57DF\uFF0C\u628A\u539F\u6765\u7684\u503C\u62F7\u8D1D\u8FC7\u6765\uFF0C\u7136\u540E\u518D\u6267\u884C append() \u64CD\u4F5C\u3002\u8FD9\u79CD\u60C5\u51B5\u4E1D\u6BEB\u4E0D\u5F71\u54CD\u539F\u6570\u7EC4\u3002</p><details class="custom-container details"><summary>len\u7B49\u4E8Ecap\u7EC6\u8282\u6D4B\u8BD5</summary><ul><li><code>slice cap</code>\u5C0F\u4E8E\u6570\u7EC4\u603B\u5BB9\u91CF</li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token comment">/**
len=cap
*/</span>

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	array <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">}</span>
	slice <span class="token operator">:=</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;init slice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> slice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>slice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Init array %v, Pointer = %p \\r\\n\\r\\n&quot;</span><span class="token punctuation">,</span> array<span class="token punctuation">,</span> <span class="token operator">&amp;</span>array<span class="token punctuation">)</span>

	newSlice <span class="token operator">:=</span> <span class="token function">append</span><span class="token punctuation">(</span>slice<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span>

	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Before slice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> slice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>slice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Before newSlice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> newSlice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>newSlice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Before array %v, Pointer = %p \\r\\n\\r\\n&quot;</span><span class="token punctuation">,</span> array<span class="token punctuation">,</span> <span class="token operator">&amp;</span>array<span class="token punctuation">)</span>

	newSlice<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">10</span>

	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;After slice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> slice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>slice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>slice<span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;After newSlice = %v, Pointer = %p, len = %d, cap = %d\\n&quot;</span><span class="token punctuation">,</span> newSlice<span class="token punctuation">,</span> <span class="token operator">&amp;</span>newSlice<span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">cap</span><span class="token punctuation">(</span>newSlice<span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;After array %v, Pointer = %p \\r\\n\\r\\n&quot;</span><span class="token punctuation">,</span> array<span class="token punctuation">,</span> <span class="token operator">&amp;</span>array<span class="token punctuation">)</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p>\u8F93\u51FA</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>init slice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc000004078, len <span class="token operator">=</span> <span class="token number">2</span>, cap <span class="token operator">=</span> <span class="token number">2</span>
Init array <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span> <span class="token number">30</span> <span class="token number">40</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc0000121c0 

Before slice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc000004078, len <span class="token operator">=</span> <span class="token number">2</span>, cap <span class="token operator">=</span> <span class="token number">2</span>
Before newSlice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span> <span class="token number">50</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc0000040a8, len <span class="token operator">=</span> <span class="token number">3</span>, cap <span class="token operator">=</span> <span class="token number">4</span>
Before array <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span> <span class="token number">30</span> <span class="token number">40</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc0000121c0

After slice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc000004078, len <span class="token operator">=</span> <span class="token number">2</span>, cap <span class="token operator">=</span> <span class="token number">2</span>
After newSlice <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">30</span> <span class="token number">50</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc0000040a8, len <span class="token operator">=</span> <span class="token number">3</span>, cap <span class="token operator">=</span> <span class="token number">4</span>
After array <span class="token punctuation">[</span><span class="token number">10</span> <span class="token number">20</span> <span class="token number">30</span> <span class="token number">40</span><span class="token punctuation">]</span>, Pointer <span class="token operator">=</span> 0xc0000121c0

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u53EF\u4EE5\u770B\u5230\u5BF9\u65B0\u5207\u7247\u7684\u4FEE\u6539\u662F\u4E0D\u5F71\u54CD\u539F\u6570\u7EC4\u7684\u3002</p><ul><li><code>slice cap</code>\u7B49\u4E8E\u6570\u7EC4\u603B\u5BB9\u91CF</li></ul><blockquote><p>\u4E0A\u6587\u60C5\u51B5\u4E8C</p></blockquote><ul><li><code>slice cap</code>\u5927\u4E8E\u6570\u7EC4\u603B\u5BB9\u91CF</li></ul><blockquote><p>\u4E0D\u5B58\u5728</p></blockquote></details><p>\u6240\u4EE5\u5EFA\u8BAE\u5C3D\u91CF\u907F\u514D\u60C5\u51B5\u4E00\uFF0C\u5C3D\u91CF\u4F7F\u7528\u60C5\u51B5\u4E8C\uFF0C\u907F\u514D bug \u4EA7\u751F\u3002</p><h3 id="\u5207\u7247\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u5207\u7247\u62F7\u8D1D" aria-hidden="true">#</a> \u5207\u7247\u62F7\u8D1D</h3><p>\u7B80\u5355\u5C55\u793A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	a <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;a: Address %p , value = %v \\r\\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> a<span class="token punctuation">)</span>

	<span class="token keyword">var</span> b <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">copy</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">)</span>
	b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">99</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;a: Address %p , value = %v \\r\\n&quot;</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> a<span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;b: Address %p , value = %v \\r\\n&quot;</span><span class="token punctuation">,</span> b<span class="token punctuation">,</span> b<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u8F93\u51FA</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>a<span class="token punctuation">:</span> Address <span class="token number">0xc00000a480</span> <span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span><span class="token punctuation">]</span> 
<span class="token number">6</span>
a<span class="token punctuation">:</span> Address <span class="token number">0xc00000a480</span> <span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span><span class="token punctuation">]</span> 
b<span class="token punctuation">:</span> Address <span class="token number">0xc00000a4b0</span> <span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">99</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="slice-\u4E2D\u62F7\u8D1D\u65B9\u6CD5\u67092\u4E2A\u3002" tabindex="-1"><a class="header-anchor" href="#slice-\u4E2D\u62F7\u8D1D\u65B9\u6CD5\u67092\u4E2A\u3002" aria-hidden="true">#</a> Slice \u4E2D\u62F7\u8D1D\u65B9\u6CD5\u67092\u4E2A\u3002</h4><ul><li><code>slicecopy</code></li></ul><details class="custom-container details"><summary>\u67E5\u770B\u6E90\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">slicecopy</span><span class="token punctuation">(</span>to<span class="token punctuation">,</span> fm slice<span class="token punctuation">,</span> width <span class="token builtin">uintptr</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u6E90\u5207\u7247\u6216\u8005\u76EE\u6807\u5207\u7247\u6709\u4E00\u4E2A\u957F\u5EA6\u4E3A0\uFF0C\u90A3\u4E48\u5C31\u4E0D\u9700\u8981\u62F7\u8D1D\uFF0C\u76F4\u63A5 return </span>
    <span class="token keyword">if</span> fm<span class="token punctuation">.</span><span class="token builtin">len</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> to<span class="token punctuation">.</span><span class="token builtin">len</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// n \u8BB0\u5F55\u4E0B\u6E90\u5207\u7247\u6216\u8005\u76EE\u6807\u5207\u7247\u8F83\u77ED\u7684\u90A3\u4E00\u4E2A\u7684\u957F\u5EA6</span>
    n <span class="token operator">:=</span> fm<span class="token punctuation">.</span><span class="token builtin">len</span>
    <span class="token keyword">if</span> to<span class="token punctuation">.</span><span class="token builtin">len</span> <span class="token operator">&lt;</span> n <span class="token punctuation">{</span>
        n <span class="token operator">=</span> to<span class="token punctuation">.</span><span class="token builtin">len</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u5165\u53C2 width = 0\uFF0C\u4E5F\u4E0D\u9700\u8981\u62F7\u8D1D\u4E86\uFF0C\u8FD4\u56DE\u8F83\u77ED\u7684\u5207\u7247\u7684\u957F\u5EA6</span>
    <span class="token keyword">if</span> width <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> n
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u5F00\u542F\u4E86\u7ADE\u4E89\u68C0\u6D4B</span>
    <span class="token keyword">if</span> raceenabled <span class="token punctuation">{</span>
        callerpc <span class="token operator">:=</span> <span class="token function">getcallerpc</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>to<span class="token punctuation">)</span><span class="token punctuation">)</span>
        pc <span class="token operator">:=</span> <span class="token function">funcPC</span><span class="token punctuation">(</span>slicecopy<span class="token punctuation">)</span>
        <span class="token function">racewriterangepc</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>array<span class="token punctuation">,</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>n<span class="token operator">*</span><span class="token function">int</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> callerpc<span class="token punctuation">,</span> pc<span class="token punctuation">)</span>
        <span class="token function">racereadrangepc</span><span class="token punctuation">(</span>fm<span class="token punctuation">.</span>array<span class="token punctuation">,</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>n<span class="token operator">*</span><span class="token function">int</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> callerpc<span class="token punctuation">,</span> pc<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u5F00\u542F\u4E86 The memory sanitizer (msan)</span>
    <span class="token keyword">if</span> msanenabled <span class="token punctuation">{</span>
        <span class="token function">msanwrite</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>array<span class="token punctuation">,</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>n<span class="token operator">*</span><span class="token function">int</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token function">msanread</span><span class="token punctuation">(</span>fm<span class="token punctuation">.</span>array<span class="token punctuation">,</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>n<span class="token operator">*</span><span class="token function">int</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    size <span class="token operator">:=</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">*</span> width
    <span class="token keyword">if</span> size <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span> 
        <span class="token comment">// TODO: is this still worth it with new memmove impl?</span>
        <span class="token comment">// \u5982\u679C\u53EA\u6709\u4E00\u4E2A\u5143\u7D20\uFF0C\u90A3\u4E48\u6307\u9488\u76F4\u63A5\u8F6C\u6362\u5373\u53EF</span>
        <span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">byte</span><span class="token punctuation">)</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>array<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token builtin">byte</span><span class="token punctuation">)</span><span class="token punctuation">(</span>fm<span class="token punctuation">.</span>array<span class="token punctuation">)</span> <span class="token comment">// known to be a byte pointer</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u4E0D\u6B62\u4E00\u4E2A\u5143\u7D20\uFF0C\u90A3\u4E48\u5C31\u628A size \u4E2A bytes \u4ECE fm.array \u5730\u5740\u5F00\u59CB\uFF0C\u62F7\u8D1D\u5230 to.array \u5730\u5740\u4E4B\u540E</span>
        <span class="token function">memmove</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>array<span class="token punctuation">,</span> fm<span class="token punctuation">.</span>array<span class="token punctuation">,</span> size<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> n
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div></details><p>\u5728\u8FD9\u4E2A\u65B9\u6CD5\u4E2D\uFF0C<code>slicecopy </code>\u65B9\u6CD5\u4F1A\u628A\u6E90\u5207\u7247\u503C(\u5373 fm Slice )\u4E2D\u7684\u5143\u7D20\u590D\u5236\u5230\u76EE\u6807\u5207\u7247(\u5373 to Slice )\u4E2D\uFF0C\u5E76\u8FD4\u56DE\u88AB\u590D\u5236\u7684\u5143\u7D20\u4E2A\u6570\uFF0Ccopy \u7684\u4E24\u4E2A\u7C7B\u578B\u5FC5\u987B\u4E00\u81F4\u3002slicecopy \u65B9\u6CD5\u6700\u7EC8\u7684\u590D\u5236\u7ED3\u679C\u53D6\u51B3\u4E8E\u8F83\u77ED\u7684\u90A3\u4E2A\u5207\u7247\uFF0C\u5F53\u8F83\u77ED\u7684\u5207\u7247\u590D\u5236\u5B8C\u6210\uFF0C\u6574\u4E2A\u590D\u5236\u8FC7\u7A0B\u5C31\u5168\u90E8\u5B8C\u6210\u4E86\u3002</p><p><img src="`+z+`" alt="null"></p><p>\u4E3E\u4E2A\u4F8B\u5B50\uFF0C\u6BD4\u5982\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    array <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">}</span>
    slice <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>
    n <span class="token operator">:=</span> <span class="token function">copy</span><span class="token punctuation">(</span>slice<span class="token punctuation">,</span> array<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span>slice<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u8FD8\u6709\u4E00\u4E2A\u62F7\u8D1D\u7684\u65B9\u6CD5\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u539F\u7406\u548C slicecopy \u65B9\u6CD5\u7C7B\u4F3C\uFF0C\u4E0D\u5728\u8D58\u8FF0\u4E86\uFF0C\u6CE8\u91CA\u5199\u5728\u4EE3\u7801\u91CC\u9762\u4E86\u3002</p><details class="custom-container details"><summary>\u67E5\u770B\u6E90\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">slicestringcopy</span><span class="token punctuation">(</span>to <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> fm <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u6E90\u5207\u7247\u6216\u8005\u76EE\u6807\u5207\u7247\u6709\u4E00\u4E2A\u957F\u5EA6\u4E3A0\uFF0C\u90A3\u4E48\u5C31\u4E0D\u9700\u8981\u62F7\u8D1D\uFF0C\u76F4\u63A5 return </span>
    <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>fm<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token function">len</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// n \u8BB0\u5F55\u4E0B\u6E90\u5207\u7247\u6216\u8005\u76EE\u6807\u5207\u7247\u8F83\u77ED\u7684\u90A3\u4E00\u4E2A\u7684\u957F\u5EA6</span>
    n <span class="token operator">:=</span> <span class="token function">len</span><span class="token punctuation">(</span>fm<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span> <span class="token operator">&lt;</span> n <span class="token punctuation">{</span>
        n <span class="token operator">=</span> <span class="token function">len</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u5F00\u542F\u4E86\u7ADE\u4E89\u68C0\u6D4B</span>
    <span class="token keyword">if</span> raceenabled <span class="token punctuation">{</span>
        callerpc <span class="token operator">:=</span> <span class="token function">getcallerpc</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>to<span class="token punctuation">)</span><span class="token punctuation">)</span>
        pc <span class="token operator">:=</span> <span class="token function">funcPC</span><span class="token punctuation">(</span>slicestringcopy<span class="token punctuation">)</span>
        <span class="token function">racewriterangepc</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>to<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">,</span> callerpc<span class="token punctuation">,</span> pc<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5982\u679C\u5F00\u542F\u4E86 The memory sanitizer (msan)</span>
    <span class="token keyword">if</span> msanenabled <span class="token punctuation">{</span>
        <span class="token function">msanwrite</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>to<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u62F7\u8D1D\u5B57\u7B26\u4E32\u81F3\u5B57\u8282\u6570\u7EC4</span>
    <span class="token function">memmove</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>to<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">stringStructOf</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>fm<span class="token punctuation">)</span><span class="token punctuation">.</span>str<span class="token punctuation">,</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> n
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div></details><p>\u518D\u4E3E\u4E2A\u4F8B\u5B50\uFF0C\u6BD4\u5982\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    slice <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
    n <span class="token operator">:=</span> <span class="token function">copy</span><span class="token punctuation">(</span>slice<span class="token punctuation">,</span> <span class="token string">&quot;abcdef&quot;</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span>slice<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u8F93\u51FA\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    3 [97,98,99]
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u8BF4\u5230\u62F7\u8D1D\uFF0C\u5207\u7247\u4E2D\u6709\u4E00\u4E2A\u9700\u8981\u6CE8\u610F\u7684\u95EE\u9898\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    slice <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">}</span>
    <span class="token keyword">for</span> index<span class="token punctuation">,</span> value <span class="token operator">:=</span> <span class="token keyword">range</span> slice <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;value = %d , value-addr = %x , slice-addr = %x\\n&quot;</span><span class="token punctuation">,</span> value<span class="token punctuation">,</span> <span class="token operator">&amp;</span>value<span class="token punctuation">,</span> <span class="token operator">&amp;</span>slice<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u8F93\u51FA\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    value = 10 , value-addr = c4200aedf8 , slice-addr = c4200b0320
    value = 20 , value-addr = c4200aedf8 , slice-addr = c4200b0328
    value = 30 , value-addr = c4200aedf8 , slice-addr = c4200b0330
    value = 40 , value-addr = c4200aedf8 , slice-addr = c4200b0338
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u4ECE\u4E0A\u9762\u7ED3\u679C\u6211\u4EEC\u53EF\u4EE5\u770B\u5230\uFF0C\u5982\u679C\u7528 range \u7684\u65B9\u5F0F\u53BB\u904D\u5386\u4E00\u4E2A\u5207\u7247\uFF0C\u62FF\u5230\u7684 Value \u5176\u5B9E\u662F\u5207\u7247\u91CC\u9762\u7684\u503C\u62F7\u8D1D\u3002\u6240\u4EE5\u6BCF\u6B21\u6253\u5370 Value \u7684\u5730\u5740\u90FD\u4E0D\u53D8\u3002</p><p><img src="`+B+`" alt="null"></p><p>\u7531\u4E8E Value \u662F\u503C\u62F7\u8D1D\u7684\uFF0C\u5E76\u975E\u5F15\u7528\u4F20\u9012\uFF0C\u6240\u4EE5\u76F4\u63A5\u6539 Value \u662F\u8FBE\u4E0D\u5230\u66F4\u6539\u539F\u5207\u7247\u503C\u7684\u76EE\u7684\u7684\uFF0C\u9700\u8981\u901A\u8FC7 <code>&amp;slice[index]</code> \u83B7\u53D6\u771F\u5B9E\u7684\u5730\u5740\u3002</p><details class="custom-container details"><summary>\u6D4B\u8BD5\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	s <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span>
	<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> s <span class="token punctuation">{</span>
		v <span class="token operator">+=</span> <span class="token number">5</span>
	<span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
	<span class="token comment">/**
		for range \u91CC\u9762\u7684value\u662F\u4E00\u4E2A\u503C\u62F7\u8D1D
	**/</span>
	<span class="token keyword">for</span> i<span class="token punctuation">,</span> n <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
		s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">5</span>
	<span class="token punctuation">}</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u8F93\u51FA</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></details>`,121);function Nn(On,Vn){const t=e("RouterLink"),o=e("ExternalLinkIcon"),l=e("CodeGroupItem"),u=e("CodeGroup");return r(),k(b,null,[n("nav",C,[n("ul",null,[n("li",null,[a(t,{to:"#\u6570\u7EC4\u548C\u5207\u7247"},{default:p(()=>[G]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#\u6570\u7EC4"},{default:p(()=>[I]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#\u6570\u7EC4\u521D\u59CB\u5316"},{default:p(()=>[N]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#\u4E00\u7EF4\u6570\u7EC4"},{default:p(()=>[O]),_:1})]),n("li",null,[a(t,{to:"#\u591A\u7EF4\u6570\u7EC4"},{default:p(()=>[V]),_:1})]),n("li",null,[a(t,{to:"#\u591A\u7EF4\u6570\u7EC4\u904D\u5386"},{default:p(()=>[H]),_:1})])])]),n("li",null,[a(t,{to:"#\u6570\u7EC4\u62F7\u8D1D\u548C\u4F20\u53C2"},{default:p(()=>[j]),_:1})]),n("li",null,[a(t,{to:"#\u6570\u7EC4\u7EC3\u4E60"},{default:p(()=>[E]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#\u6C42\u6570\u7EC4\u6240\u6709\u5143\u7D20\u4E4B\u548C"},{default:p(()=>[D]),_:1})]),n("li",null,[a(t,{to:"#\u627E\u51FA\u6570\u7EC4\u4E2D\u548C\u4E3A\u7ED9\u5B9A\u503C\u7684\u4E24\u4E2A\u5143\u7D20\u7684\u4E0B\u6807-\u4F8B\u5982\u6570\u7EC4-1-3-5-8-7-\u627E\u51FA\u4E24\u4E2A\u5143\u7D20\u4E4B\u548C\u7B49\u4E8E8\u7684\u4E0B\u6807\u5206\u522B\u662F-0-4-\u548C-1-2"},{default:p(()=>[F]),_:1})])])])])]),n("li",null,[a(t,{to:"#\u5207\u7247"},{default:p(()=>[L]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#\u521B\u5EFA\u5207\u7247\u7684\u5404\u79CD\u65B9\u5F0F"},{default:p(()=>[R]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#_1-\u5229\u7528\u6570\u7EC4\u6765\u521B\u5EFA"},{default:p(()=>[W]),_:1})]),n("li",null,[a(t,{to:"#_2-\u901A\u8FC7make\u6765\u521B\u5EFA"},{default:p(()=>[M]),_:1})]),n("li",null,[a(t,{to:"#_3-\u76F4\u63A5\u521B\u5EFA-slice-\u5BF9\u8C61-\u81EA\u52A8\u5206\u914D\u5E95\u5C42\u6570\u7EC4\u3002"},{default:p(()=>[U]),_:1})])])]),n("li",null,[a(t,{to:"#\u5207\u7247\u7684\u5185\u5B58\u5E03\u5C40"},{default:p(()=>[J]),_:1})]),n("li",null,[a(t,{to:"#\u67E5"},{default:p(()=>[K]),_:1})]),n("li",null,[a(t,{to:"#\u6539"},{default:p(()=>[Q]),_:1})]),n("li",null,[a(t,{to:"#\u5220"},{default:p(()=>[X]),_:1})]),n("li",null,[a(t,{to:"#\u589E"},{default:p(()=>[Y]),_:1})])])]),n("li",null,[a(t,{to:"#\u6269\u5C55"},{default:p(()=>[Z]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#\u5B57\u7B26\u4E32\u548C\u5207\u7247-string-and-slice"},{default:p(()=>[$]),_:1})]),n("li",null,[a(t,{to:"#\u542B\u6709\u4E2D\u6587\u5B57\u7B26\u4E32"},{default:p(()=>[nn]),_:1})]),n("li",null,[a(t,{to:"#slice-data-6-8-\u4E24\u4E2A\u5192\u53F7\u7684\u7406\u89E3"},{default:p(()=>[sn]),_:1})]),n("li",null,[a(t,{to:"#\u6570\u7EC4or\u5207\u7247\u8F6C\u5B57\u7B26\u4E32"},{default:p(()=>[an]),_:1})])])]),n("li",null,[a(t,{to:"#\u5207\u7247\u7684\u5751"},{default:p(()=>[pn]),_:1})]),n("li",null,[a(t,{to:"#slice\u7684\u6E90\u7801"},{default:p(()=>[tn]),_:1})]),n("li",null,[a(t,{to:"#slice\u7684\u5E95\u5C42\u5B9E\u73B0"},{default:p(()=>[en]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#\u5207\u7247\u548C\u6570\u7EC4"},{default:p(()=>[on]),_:1})]),n("li",null,[a(t,{to:"#\u5207\u7247\u7684\u6570\u636E\u7ED3\u6784"},{default:p(()=>[cn]),_:1})]),n("li",null,[a(t,{to:"#\u521B\u5EFA\u5207\u7247"},{default:p(()=>[ln]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#make-\u548C\u5207\u7247\u5B57\u9762\u91CF"},{default:p(()=>[un]),_:1})]),n("li",null,[a(t,{to:"#nil-\u548C\u7A7A\u5207\u7247"},{default:p(()=>[rn]),_:1})])])]),n("li",null,[a(t,{to:"#\u5207\u7247\u6269\u5BB9"},{default:p(()=>[kn]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#\u6269\u5BB9\u7B56\u7565"},{default:p(()=>[bn]),_:1})]),n("li",null,[a(t,{to:"#\u65B0\u6570\u7EC4-or-\u8001\u6570\u7EC4"},{default:p(()=>[mn]),_:1})])])]),n("li",null,[a(t,{to:"#\u5207\u7247\u62F7\u8D1D"},{default:p(()=>[dn]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#slice-\u4E2D\u62F7\u8D1D\u65B9\u6CD5\u67092\u4E2A\u3002"},{default:p(()=>[fn]),_:1})])])])])])])])])]),gn,n("p",null,[vn,n("a",yn,[hn,a(o)]),wn,n("a",qn,[xn,a(o)]),Pn]),_n,n("details",Sn,[An,a(u,null,{default:p(()=>[a(l,{title:"\u539F\u6587\u6863\u7684\u4EE3\u7801",active:""},{default:p(()=>[zn]),_:1}),a(l,{title:"\u6211\u7684\u4EE3\u7801"},{default:p(()=>[Bn]),_:1})]),_:1})]),Tn,n("p",null,[n("a",Cn,[Gn,a(o)])]),In],64)}var jn=i(T,[["render",Nn],["__file","array_slice.html.vue"]]);export{jn as default};
