import{_ as n,e as s}from"./app.2a7ffa2e.js";const a={},p=s(`<h1 id="\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4" aria-hidden="true">#</a> \u6570\u7EC4</h1><h3 id="_1-\u4E8C\u5206\u67E5\u627E-e" tabindex="-1"><a class="header-anchor" href="#_1-\u4E8C\u5206\u67E5\u627E-e" aria-hidden="true">#</a> 1. \u4E8C\u5206\u67E5\u627E E</h3><details class="custom-container details"><blockquote><p>\u7ED9\u5B9A\u4E00\u4E2A n \u4E2A\u5143\u7D20\u6709\u5E8F\u7684\uFF08\u5347\u5E8F\uFF09\u6574\u578B\u6570\u7EC4 nums \u548C\u4E00\u4E2A\u76EE\u6807\u503C target \uFF0C\u5199\u4E00\u4E2A\u51FD\u6570\u641C\u7D22 nums \u4E2D\u7684 target\uFF0C\u5982\u679C\u76EE\u6807\u503C\u5B58\u5728\u8FD4\u56DE\u4E0B\u6807\uFF0C\u5426\u5219\u8FD4\u56DE -1\u3002</p><p>\u793A\u4F8B 1:</p><p>\u8F93\u5165: nums = [-1,0,3,5,9,12], target = 9 \u8F93\u51FA: 4 \u89E3\u91CA: 9 \u51FA\u73B0\u5728 nums \u4E2D\u5E76\u4E14\u4E0B\u6807\u4E3A 4 \u793A\u4F8B 2:</p><p>\u8F93\u5165: nums = [-1,0,3,5,9,12], target = 2 \u8F93\u51FA: -1 \u89E3\u91CA: 2 \u4E0D\u5B58\u5728 nums \u4E2D\u56E0\u6B64\u8FD4\u56DE -1</p><p>\u63D0\u793A\uFF1A</p><p>\u4F60\u53EF\u4EE5\u5047\u8BBE nums \u4E2D\u7684\u6240\u6709\u5143\u7D20\u662F\u4E0D\u91CD\u590D\u7684\u3002 n \u5C06\u5728 [1, 10000]\u4E4B\u95F4\u3002 nums \u7684\u6BCF\u4E2A\u5143\u7D20\u90FD\u5C06\u5728 [-9999, 9999]\u4E4B\u95F4\u3002</p><p>\u6765\u6E90\uFF1A\u529B\u6263\uFF08LeetCode\uFF09 \u94FE\u63A5\uFF1Ahttps://leetcode-cn.com/problems/binary-search \u8457\u4F5C\u6743\u5F52\u9886\u6263\u7F51\u7EDC\u6240\u6709\u3002\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u8054\u7CFB\u5B98\u65B9\u6388\u6743\uFF0C\u975E\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u6CE8\u660E\u51FA\u5904\u3002</p></blockquote><ul><li><p>\u89E3\u6CD5</p></li><li><p>\u4EE3\u7801\u5B9E\u73B0</p></li></ul><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">search</span><span class="token punctuation">(</span>nums <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> target <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    n <span class="token operator">:=</span> <span class="token function">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>
    <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> target <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">0</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>
        <span class="token punctuation">}</span>
        
    <span class="token punctuation">}</span>
    low<span class="token punctuation">,</span> high <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">,</span> n<span class="token operator">-</span><span class="token number">1</span>
    <span class="token keyword">var</span> mid <span class="token builtin">int</span> 
    <span class="token keyword">for</span> low <span class="token operator">&lt;=</span> high <span class="token punctuation">{</span>
        mid <span class="token operator">=</span> low <span class="token operator">+</span> <span class="token punctuation">(</span>high<span class="token operator">-</span>low<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span>
        <span class="token keyword">if</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">==</span> target <span class="token punctuation">{</span>
            <span class="token keyword">return</span> mid
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&lt;</span> target <span class="token punctuation">{</span>
            low <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span> 
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            high <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div></details><h3 id="_2-\u79FB\u9664\u5143\u7D20-e" tabindex="-1"><a class="header-anchor" href="#_2-\u79FB\u9664\u5143\u7D20-e" aria-hidden="true">#</a> 2. \u79FB\u9664\u5143\u7D20 E</h3><details class="custom-container details"><blockquote><p>\u7ED9\u4F60\u4E00\u4E2A\u6570\u7EC4 nums \u548C\u4E00\u4E2A\u503C val\uFF0C\u4F60\u9700\u8981 \u539F\u5730 \u79FB\u9664\u6240\u6709\u6570\u503C\u7B49\u4E8E val \u7684\u5143\u7D20\uFF0C\u5E76\u8FD4\u56DE\u79FB\u9664\u540E\u6570\u7EC4\u7684\u65B0\u957F\u5EA6\u3002</p><p>\u4E0D\u8981\u4F7F\u7528\u989D\u5916\u7684\u6570\u7EC4\u7A7A\u95F4\uFF0C\u4F60\u5FC5\u987B\u4EC5\u4F7F\u7528 O(1) \u989D\u5916\u7A7A\u95F4\u5E76 \u539F\u5730 \u4FEE\u6539\u8F93\u5165\u6570\u7EC4\u3002</p><p>\u5143\u7D20\u7684\u987A\u5E8F\u53EF\u4EE5\u6539\u53D8\u3002\u4F60\u4E0D\u9700\u8981\u8003\u8651\u6570\u7EC4\u4E2D\u8D85\u51FA\u65B0\u957F\u5EA6\u540E\u9762\u7684\u5143\u7D20\u3002</p><p>\u8BF4\u660E:</p><p>\u4E3A\u4EC0\u4E48\u8FD4\u56DE\u6570\u503C\u662F\u6574\u6570\uFF0C\u4F46\u8F93\u51FA\u7684\u7B54\u6848\u662F\u6570\u7EC4\u5462?</p><p>\u8BF7\u6CE8\u610F\uFF0C\u8F93\u5165\u6570\u7EC4\u662F\u4EE5\u300C\u5F15\u7528\u300D\u65B9\u5F0F\u4F20\u9012\u7684\uFF0C\u8FD9\u610F\u5473\u7740\u5728\u51FD\u6570\u91CC\u4FEE\u6539\u8F93\u5165\u6570\u7EC4\u5BF9\u4E8E\u8C03\u7528\u8005\u662F\u53EF\u89C1\u7684\u3002</p><p>\u4F60\u53EF\u4EE5\u60F3\u8C61\u5185\u90E8\u64CD\u4F5C\u5982\u4E0B:</p><p>// nums \u662F\u4EE5\u201C\u5F15\u7528\u201D\u65B9\u5F0F\u4F20\u9012\u7684\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u4E0D\u5BF9\u5B9E\u53C2\u4F5C\u4EFB\u4F55\u62F7\u8D1D int len = removeElement(nums, val);</p><p>// \u5728\u51FD\u6570\u91CC\u4FEE\u6539\u8F93\u5165\u6570\u7EC4\u5BF9\u4E8E\u8C03\u7528\u8005\u662F\u53EF\u89C1\u7684\u3002 // \u6839\u636E\u4F60\u7684\u51FD\u6570\u8FD4\u56DE\u7684\u957F\u5EA6, \u5B83\u4F1A\u6253\u5370\u51FA\u6570\u7EC4\u4E2D \u8BE5\u957F\u5EA6\u8303\u56F4\u5185 \u7684\u6240\u6709\u5143\u7D20\u3002 for (int i = 0; i &lt; len; i++) { print(nums[i]); }</p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165\uFF1Anums = [3,2,2,3], val = 3 \u8F93\u51FA\uFF1A2, nums = [2,2] \u89E3\u91CA\uFF1A\u51FD\u6570\u5E94\u8BE5\u8FD4\u56DE\u65B0\u7684\u957F\u5EA6 2, \u5E76\u4E14 nums \u4E2D\u7684\u524D\u4E24\u4E2A\u5143\u7D20\u5747\u4E3A 2\u3002\u4F60\u4E0D\u9700\u8981\u8003\u8651\u6570\u7EC4\u4E2D\u8D85\u51FA\u65B0\u957F\u5EA6\u540E\u9762\u7684\u5143\u7D20\u3002\u4F8B\u5982\uFF0C\u51FD\u6570\u8FD4\u56DE\u7684\u65B0\u957F\u5EA6\u4E3A 2 \uFF0C\u800C nums = [2,2,3,3] \u6216 nums = [2,2,0,0]\uFF0C\u4E5F\u4F1A\u88AB\u89C6\u4F5C\u6B63\u786E\u7B54\u6848\u3002 \u793A\u4F8B 2\uFF1A</p><p>\u8F93\u5165\uFF1Anums = [0,1,2,2,3,0,4,2], val = 2 \u8F93\u51FA\uFF1A5, nums = [0,1,4,0,3] \u89E3\u91CA\uFF1A\u51FD\u6570\u5E94\u8BE5\u8FD4\u56DE\u65B0\u7684\u957F\u5EA6 5, \u5E76\u4E14 nums \u4E2D\u7684\u524D\u4E94\u4E2A\u5143\u7D20\u4E3A 0, 1, 3, 0, 4\u3002\u6CE8\u610F\u8FD9\u4E94\u4E2A\u5143\u7D20\u53EF\u4E3A\u4EFB\u610F\u987A\u5E8F\u3002\u4F60\u4E0D\u9700\u8981\u8003\u8651\u6570\u7EC4\u4E2D\u8D85\u51FA\u65B0\u957F\u5EA6\u540E\u9762\u7684\u5143\u7D20\u3002</p><p>\u63D0\u793A\uFF1A</p><p>0 &lt;= nums.length &lt;= 100 0 &lt;= nums[i] &lt;= 50 0 &lt;= val &lt;= 100</p><p>\u6765\u6E90\uFF1A\u529B\u6263\uFF08LeetCode\uFF09 \u94FE\u63A5\uFF1Ahttps://leetcode-cn.com/problems/remove-element \u8457\u4F5C\u6743\u5F52\u9886\u6263\u7F51\u7EDC\u6240\u6709\u3002\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u8054\u7CFB\u5B98\u65B9\u6388\u6743\uFF0C\u975E\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u6CE8\u660E\u51FA\u5904\u3002</p></blockquote><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">removeElement</span><span class="token punctuation">(</span>nums <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> val <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    n <span class="token operator">:=</span> <span class="token function">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>
    <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>
    low<span class="token punctuation">,</span>high <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">,</span> n<span class="token operator">-</span><span class="token number">1</span>

    <span class="token keyword">for</span> low <span class="token operator">&lt;</span> high <span class="token punctuation">{</span>
        <span class="token keyword">for</span> low <span class="token operator">&lt;</span> high <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>high<span class="token punctuation">]</span> <span class="token operator">==</span> val <span class="token punctuation">{</span>
            high <span class="token operator">--</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> high <span class="token operator">==</span> <span class="token number">0</span>  <span class="token operator">||</span> low <span class="token operator">==</span> high<span class="token punctuation">{</span>
            <span class="token keyword">break</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> nums<span class="token punctuation">[</span>low<span class="token punctuation">]</span> <span class="token operator">==</span> val <span class="token operator">&amp;&amp;</span> low <span class="token operator">!=</span> high <span class="token punctuation">{</span>
            nums<span class="token punctuation">[</span>low<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>high<span class="token punctuation">]</span>
            high<span class="token operator">--</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> low <span class="token operator">!=</span> high <span class="token punctuation">{</span>
            low <span class="token operator">++</span> 
        <span class="token punctuation">}</span>
        
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> nums<span class="token punctuation">[</span>low<span class="token punctuation">]</span> <span class="token operator">!=</span> val <span class="token punctuation">{</span>
        low <span class="token operator">++</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> low

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div></details><h3 id="_3-\u6709\u5E8F\u6570\u7EC4\u7684\u5E73\u65B9-e" tabindex="-1"><a class="header-anchor" href="#_3-\u6709\u5E8F\u6570\u7EC4\u7684\u5E73\u65B9-e" aria-hidden="true">#</a> 3. \u6709\u5E8F\u6570\u7EC4\u7684\u5E73\u65B9 E</h3><details class="custom-container details"><blockquote><p>\u7ED9\u4F60\u4E00\u4E2A\u6309 \u975E\u9012\u51CF\u987A\u5E8F \u6392\u5E8F\u7684\u6574\u6570\u6570\u7EC4 nums\uFF0C\u8FD4\u56DE \u6BCF\u4E2A\u6570\u5B57\u7684\u5E73\u65B9 \u7EC4\u6210\u7684\u65B0\u6570\u7EC4\uFF0C\u8981\u6C42\u4E5F\u6309 \u975E\u9012\u51CF\u987A\u5E8F \u6392\u5E8F\u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165\uFF1Anums = [-4,-1,0,3,10] \u8F93\u51FA\uFF1A[0,1,9,16,100] \u89E3\u91CA\uFF1A\u5E73\u65B9\u540E\uFF0C\u6570\u7EC4\u53D8\u4E3A [16,1,0,9,100] \u6392\u5E8F\u540E\uFF0C\u6570\u7EC4\u53D8\u4E3A [0,1,9,16,100] \u793A\u4F8B 2\uFF1A</p><p>\u8F93\u5165\uFF1Anums = [-7,-3,2,3,11] \u8F93\u51FA\uFF1A[4,9,9,49,121]</p><p>\u63D0\u793A\uFF1A</p><p>1 &lt;= nums.length &lt;= 104 -104 &lt;= nums[i] &lt;= 104 nums \u5DF2\u6309 \u975E\u9012\u51CF\u987A\u5E8F \u6392\u5E8F</p><p>\u6765\u6E90\uFF1A\u529B\u6263\uFF08LeetCode\uFF09 \u94FE\u63A5\uFF1Ahttps://leetcode-cn.com/problems/squares-of-a-sorted-array \u8457\u4F5C\u6743\u5F52\u9886\u6263\u7F51\u7EDC\u6240\u6709\u3002\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u8054\u7CFB\u5B98\u65B9\u6388\u6743\uFF0C\u975E\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u6CE8\u660E\u51FA\u5904\u3002</p></blockquote><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">sortedSquares</span><span class="token punctuation">(</span>nums <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token punctuation">{</span>
    n <span class="token operator">:=</span> <span class="token function">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>
    low<span class="token punctuation">,</span> high <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">,</span> n<span class="token operator">-</span><span class="token number">1</span>
    res <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span>
    <span class="token keyword">var</span> l<span class="token punctuation">,</span> h <span class="token builtin">int</span>
    i <span class="token operator">:=</span> n<span class="token operator">-</span><span class="token number">1</span>
    <span class="token keyword">for</span> low <span class="token operator">&lt;=</span> high <span class="token punctuation">{</span>
        l<span class="token punctuation">,</span>h <span class="token operator">=</span> nums<span class="token punctuation">[</span>low<span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span>high<span class="token punctuation">]</span>
        <span class="token keyword">if</span> l<span class="token operator">*</span>l <span class="token operator">&gt;</span> h<span class="token operator">*</span>h <span class="token punctuation">{</span>
            res<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> l<span class="token operator">*</span>l
            low <span class="token operator">++</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            res<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> h<span class="token operator">*</span>h
            high <span class="token operator">--</span>
        <span class="token punctuation">}</span>
        i<span class="token operator">--</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div></details><h3 id="_4-\u957F\u5EA6\u6700\u5C0F\u7684\u5B50\u6570\u7EC4-m" tabindex="-1"><a class="header-anchor" href="#_4-\u957F\u5EA6\u6700\u5C0F\u7684\u5B50\u6570\u7EC4-m" aria-hidden="true">#</a> 4. \u957F\u5EA6\u6700\u5C0F\u7684\u5B50\u6570\u7EC4 M</h3><details class="custom-container details"><blockquote><p>\u7ED9\u5B9A\u4E00\u4E2A\u542B\u6709 n \u4E2A\u6B63\u6574\u6570\u7684\u6570\u7EC4\u548C\u4E00\u4E2A\u6B63\u6574\u6570 target \u3002</p><p>\u627E\u51FA\u8BE5\u6570\u7EC4\u4E2D\u6EE1\u8DB3\u5176\u548C \u2265 target \u7684\u957F\u5EA6\u6700\u5C0F\u7684 \u8FDE\u7EED\u5B50\u6570\u7EC4 [numsl, numsl+1, ..., numsr-1, numsr] \uFF0C\u5E76\u8FD4\u56DE\u5176\u957F\u5EA6\u3002\u5982\u679C\u4E0D\u5B58\u5728\u7B26\u5408\u6761\u4EF6\u7684\u5B50\u6570\u7EC4\uFF0C\u8FD4\u56DE 0 \u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165\uFF1Atarget = 7, nums = [2,3,1,2,4,3] \u8F93\u51FA\uFF1A2 \u89E3\u91CA\uFF1A\u5B50\u6570\u7EC4 [4,3] \u662F\u8BE5\u6761\u4EF6\u4E0B\u7684\u957F\u5EA6\u6700\u5C0F\u7684\u5B50\u6570\u7EC4\u3002 \u793A\u4F8B 2\uFF1A</p><p>\u8F93\u5165\uFF1Atarget = 4, nums = [1,4,4] \u8F93\u51FA\uFF1A1 \u793A\u4F8B 3\uFF1A</p><p>\u8F93\u5165\uFF1Atarget = 11, nums = [1,1,1,1,1,1,1,1] \u8F93\u51FA\uFF1A0</p><p>\u63D0\u793A\uFF1A</p><p>1 &lt;= target &lt;= 109 1 &lt;= nums.length &lt;= 105 1 &lt;= nums[i] &lt;= 105</p><p>\u8FDB\u9636\uFF1A</p><p>\u5982\u679C\u4F60\u5DF2\u7ECF\u5B9E\u73B0 O(n) \u65F6\u95F4\u590D\u6742\u5EA6\u7684\u89E3\u6CD5, \u8BF7\u5C1D\u8BD5\u8BBE\u8BA1\u4E00\u4E2A O(n log(n)) \u65F6\u95F4\u590D\u6742\u5EA6\u7684\u89E3\u6CD5\u3002</p><p>\u6765\u6E90\uFF1A\u529B\u6263\uFF08LeetCode\uFF09 \u94FE\u63A5\uFF1Ahttps://leetcode-cn.com/problems/minimum-size-subarray-sum \u8457\u4F5C\u6743\u5F52\u9886\u6263\u7F51\u7EDC\u6240\u6709\u3002\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u8054\u7CFB\u5B98\u65B9\u6388\u6743\uFF0C\u975E\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u6CE8\u660E\u51FA\u5904\u3002</p></blockquote><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">myMin</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> a <span class="token operator">&lt;</span> b <span class="token punctuation">{</span>
        <span class="token keyword">return</span> a
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> b
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">minSubArrayLen</span><span class="token punctuation">(</span>target <span class="token builtin">int</span><span class="token punctuation">,</span> nums <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    n <span class="token operator">:=</span> <span class="token function">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>
    ans <span class="token operator">:=</span> n<span class="token operator">+</span><span class="token number">1</span>
    left<span class="token punctuation">,</span>right <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>
    sum <span class="token operator">:=</span> <span class="token number">0</span>
    <span class="token keyword">for</span> right <span class="token operator">&lt;</span> n <span class="token punctuation">{</span>
        sum <span class="token operator">+=</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span>
        <span class="token keyword">for</span> sum <span class="token operator">&gt;=</span> target  <span class="token punctuation">{</span>
            ans <span class="token operator">=</span> <span class="token function">myMin</span><span class="token punctuation">(</span>ans<span class="token punctuation">,</span> right <span class="token operator">-</span> left <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
            sum <span class="token operator">-=</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span>
            left <span class="token operator">++</span> 
        <span class="token punctuation">}</span>
        right <span class="token operator">++</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> ans <span class="token operator">==</span> n<span class="token operator">+</span><span class="token number">1</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> ans
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div></details><h3 id="_5-\u87BA\u65CB\u77E9\u9635ii-m" tabindex="-1"><a class="header-anchor" href="#_5-\u87BA\u65CB\u77E9\u9635ii-m" aria-hidden="true">#</a> 5. \u87BA\u65CB\u77E9\u9635\u2161 M</h3><details class="custom-container details"><blockquote><p>\u7ED9\u4F60\u4E00\u4E2A\u6B63\u6574\u6570 n \uFF0C\u751F\u6210\u4E00\u4E2A\u5305\u542B 1 \u5230 n2 \u6240\u6709\u5143\u7D20\uFF0C\u4E14\u5143\u7D20\u6309\u987A\u65F6\u9488\u987A\u5E8F\u87BA\u65CB\u6392\u5217\u7684 n x n \u6B63\u65B9\u5F62\u77E9\u9635 matrix \u3002</p><p>\u793A\u4F8B 1\uFF1A</p><p>\u8F93\u5165\uFF1An = 3 \u8F93\u51FA\uFF1A[[1,2,3],[8,9,4],[7,6,5]] \u793A\u4F8B 2\uFF1A</p><p>\u8F93\u5165\uFF1An = 1 \u8F93\u51FA\uFF1A[[1]]</p><p>\u63D0\u793A\uFF1A</p><p>1 &lt;= n &lt;= 20</p><p>\u6765\u6E90\uFF1A\u529B\u6263\uFF08LeetCode\uFF09 \u94FE\u63A5\uFF1Ahttps://leetcode-cn.com/problems/spiral-matrix-ii \u8457\u4F5C\u6743\u5F52\u9886\u6263\u7F51\u7EDC\u6240\u6709\u3002\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u8054\u7CFB\u5B98\u65B9\u6388\u6743\uFF0C\u975E\u5546\u4E1A\u8F6C\u8F7D\u8BF7\u6CE8\u660E\u51FA\u5904\u3002</p></blockquote><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">generateMatrix</span><span class="token punctuation">(</span>n <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span> <span class="token punctuation">{</span>
    matrix <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span>
    <span class="token keyword">for</span> i<span class="token operator">:=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        matrix<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u5DE6\u95ED\u53F3\u95ED</span>
    top<span class="token punctuation">,</span> bottom <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">,</span> n<span class="token operator">-</span><span class="token number">1</span>
    left<span class="token punctuation">,</span>right <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">,</span>n<span class="token operator">-</span><span class="token number">1</span>
    num<span class="token punctuation">,</span> total <span class="token operator">:=</span> <span class="token number">1</span><span class="token punctuation">,</span> n<span class="token operator">*</span>n
    
    <span class="token keyword">for</span> num <span class="token operator">&lt;=</span> total <span class="token punctuation">{</span>
        <span class="token keyword">for</span> i<span class="token operator">:=</span>left<span class="token punctuation">;</span> i<span class="token operator">&lt;=</span>right<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
            matrix<span class="token punctuation">[</span>top<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> num
            num <span class="token operator">++</span>
        <span class="token punctuation">}</span> 
        top <span class="token operator">++</span>
        <span class="token keyword">for</span> i<span class="token operator">:=</span> top<span class="token punctuation">;</span> i<span class="token operator">&lt;=</span> bottom<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
            matrix<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>right<span class="token punctuation">]</span> <span class="token operator">=</span> num
            num <span class="token operator">++</span>
        <span class="token punctuation">}</span>
        right <span class="token operator">--</span>
        <span class="token keyword">for</span> i<span class="token operator">:=</span>right<span class="token punctuation">;</span> i<span class="token operator">&gt;=</span>left<span class="token punctuation">;</span> i<span class="token operator">--</span> <span class="token punctuation">{</span>
            matrix<span class="token punctuation">[</span>bottom<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> num
            num <span class="token operator">++</span>
        <span class="token punctuation">}</span>
        bottom <span class="token operator">--</span>
        <span class="token keyword">for</span> i<span class="token operator">:=</span> bottom<span class="token punctuation">;</span> i<span class="token operator">&gt;=</span> top<span class="token punctuation">;</span> i<span class="token operator">--</span> <span class="token punctuation">{</span>
            matrix<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">=</span> num
            num <span class="token operator">++</span>
        <span class="token punctuation">}</span>
        left <span class="token operator">++</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> matrix
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div></details>`,11);function t(e,o){return p}var c=n(a,[["render",t],["__file","array.html.vue"]]);export{c as default};
