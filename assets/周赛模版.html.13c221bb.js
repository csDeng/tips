import{_ as p,r as t,o as e,c as o,b as n,a as c,F as l,e as s,d as u}from"./app.2a7ffa2e.js";var r="/assets/1674101006-YgLyWs-image.9d4a0846.png";const i={},k=s('<h1 id="\u5E38\u7528\u7684leetcode-\u6A21\u7248" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u7684leetcode-\u6A21\u7248" aria-hidden="true">#</a> \u5E38\u7528\u7684leetcode \u6A21\u7248</h1><div class="custom-container tip"><p class="custom-container-title">\u58F0\u660E</p><p>\u8BE5\u90E8\u5206\u5185\u5BB9\u5927\u90E8\u5206\u6765\u6E90\u7F51\u7EDC\uFF0C\u5305\u62EC\u4F46\u4E0D\u9650\u4E8E\u4EE5\u4E0B\u94FE\u63A5</p><ul><li>https://leetcode.cn/leetbook/</li></ul><p>\u8F85\u4EE5\u4E2A\u4EBA\u5B66\u4E60\u611F\u609F\u5E76\u7F16\u7801\u9A8C\u8BC1\u3002</p></div><p><img src="'+r+'" alt="image.png"></p><h2 id="\u78E8\u5200\u4E0D\u8BEF\u780D\u67F4\u5DE5" tabindex="-1"><a class="header-anchor" href="#\u78E8\u5200\u4E0D\u8BEF\u780D\u67F4\u5DE5" aria-hidden="true">#</a> \u78E8\u5200\u4E0D\u8BEF\u780D\u67F4\u5DE5</h2>',4),b={href:"https://leetcode.cn/circle/discuss/CaOJ45/",target:"_blank",rel:"noopener noreferrer"},d=u("\u5206\u4EAB\uFF5C\u4ECE\u96C6\u5408\u8BBA\u5230\u4F4D\u8FD0\u7B97\uFF0C\u5E38\u89C1\u4F4D\u8FD0\u7B97\u6280\u5DE7\u5206\u7C7B\u603B\u7ED3\uFF01"),m=s(`<h2 id="\u53CC\u6307\u9488" tabindex="-1"><a class="header-anchor" href="#\u53CC\u6307\u9488" aria-hidden="true">#</a> \u53CC\u6307\u9488</h2><h3 id="_1-\u53CC\u6307\u9488-\u53EA\u6709\u4E00\u4E2A\u8F93\u5165-\u4ECE\u4E24\u7AEF\u5F00\u59CB\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#_1-\u53CC\u6307\u9488-\u53EA\u6709\u4E00\u4E2A\u8F93\u5165-\u4ECE\u4E24\u7AEF\u5F00\u59CB\u904D\u5386" aria-hidden="true">#</a> 1. \u53CC\u6307\u9488: \u53EA\u6709\u4E00\u4E2A\u8F93\u5165, \u4ECE\u4E24\u7AEF\u5F00\u59CB\u904D\u5386</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> right <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> ans <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4E00\u4E9B\u6839\u636E letf \u548C right \u76F8\u5173\u7684\u4EE3\u7801\u8865\u5145</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>CONDITION<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            left<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            right<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> ans<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="_2-\u53CC\u6307\u9488-\u6709\u4E24\u4E2A\u8F93\u5165-\u4E24\u4E2A\u90FD\u9700\u8981\u904D\u5386\u5B8C" tabindex="-1"><a class="header-anchor" href="#_2-\u53CC\u6307\u9488-\u6709\u4E24\u4E2A\u8F93\u5165-\u4E24\u4E2A\u90FD\u9700\u8981\u904D\u5386\u5B8C" aria-hidden="true">#</a> 2. \u53CC\u6307\u9488: \u6709\u4E24\u4E2A\u8F93\u5165, \u4E24\u4E2A\u90FD\u9700\u8981\u904D\u5386\u5B8C</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr1<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> ans <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> arr1<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;</span> arr2<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6839\u636E\u9898\u610F\u8865\u5145\u4EE3\u7801</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>CONDITION<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            i<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            j<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> arr1<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6839\u636E\u9898\u610F\u8865\u5145\u4EE3\u7801</span>
        i<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;</span> arr2<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6839\u636E\u9898\u610F\u8865\u5145\u4EE3\u7801</span>
        j<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> ans<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h3 id="_3-\u6ED1\u52A8\u7A97\u53E3" tabindex="-1"><a class="header-anchor" href="#_3-\u6ED1\u52A8\u7A97\u53E3" aria-hidden="true">#</a> 3. \u6ED1\u52A8\u7A97\u53E3</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> ans <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> curr <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> right <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> right <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> right<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6839\u636E\u9898\u610F\u8865\u5145\u4EE3\u7801\u6765\u5C06 arr[right] \u6DFB\u52A0\u5230 curr</span>

        <span class="token keyword">while</span> <span class="token punctuation">(</span>WINDOW_CONDITION_BROKEN<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u4ECE curr \u4E2D\u5220\u9664 arr[left]</span>
            left<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u66F4\u65B0 ans</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> ans<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="_4-\u5FEB\u6162\u6307\u9488" tabindex="-1"><a class="header-anchor" href="#_4-\u5FEB\u6162\u6307\u9488" aria-hidden="true">#</a> 4. \u5FEB\u6162\u6307\u9488</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> head<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ListNode</span> slow <span class="token operator">=</span> head<span class="token punctuation">;</span>
    <span class="token class-name">ListNode</span> fast <span class="token operator">=</span> head<span class="token punctuation">;</span>
    <span class="token keyword">int</span> ans <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>fast <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> fast<span class="token punctuation">.</span>next <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6839\u636E\u9898\u610F\u8865\u5145\u4EE3\u7801</span>
        slow <span class="token operator">=</span> slow<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        fast <span class="token operator">=</span> fast<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> ans<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="\u524D\u7F00\u548C" tabindex="-1"><a class="header-anchor" href="#\u524D\u7F00\u548C" aria-hidden="true">#</a> \u524D\u7F00\u548C</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> prefix <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>
    prefix<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        prefix<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> prefix<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> prefix<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u5B57\u7B26\u4E32</h2><h3 id="_1-\u9AD8\u6548\u7684\u5B57\u7B26\u4E32\u6784\u5EFA" tabindex="-1"><a class="header-anchor" href="#_1-\u9AD8\u6548\u7684\u5B57\u7B26\u4E32\u6784\u5EFA" aria-hidden="true">#</a> 1. \u9AD8\u6548\u7684\u5B57\u7B26\u4E32\u6784\u5EFA</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">char</span> c<span class="token operator">:</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#\u94FE\u8868" aria-hidden="true">#</a> \u94FE\u8868</h2><h3 id="_1-\u53CD\u8F6C\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#_1-\u53CD\u8F6C\u94FE\u8868" aria-hidden="true">#</a> 1. \u53CD\u8F6C\u94FE\u8868</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> head<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ListNode</span> curr <span class="token operator">=</span> head<span class="token punctuation">;</span>
    <span class="token class-name">ListNode</span> prev <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>curr <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ListNode</span> nextNode <span class="token operator">=</span> curr<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        curr<span class="token punctuation">.</span>next <span class="token operator">=</span> prev<span class="token punctuation">;</span>
        prev <span class="token operator">=</span> curr<span class="token punctuation">;</span>
        curr <span class="token operator">=</span> nextNode<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> prev<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4" aria-hidden="true">#</a> \u6570\u7EC4</h2><h3 id="_1-\u627E\u5230\u7B26\u5408\u786E\u5207\u6761\u4EF6\u7684\u5B50\u6570\u7EC4\u6570" tabindex="-1"><a class="header-anchor" href="#_1-\u627E\u5230\u7B26\u5408\u786E\u5207\u6761\u4EF6\u7684\u5B50\u6570\u7EC4\u6570" aria-hidden="true">#</a> 1. \u627E\u5230\u7B26\u5408\u786E\u5207\u6761\u4EF6\u7684\u5B50\u6570\u7EC4\u6570</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> counts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    counts<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> ans <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> curr <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token operator">:</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6839\u636E\u9898\u610F\u8865\u5145\u4EE3\u7801\u6765\u6539\u53D8 curr</span>
        ans <span class="token operator">+=</span> counts<span class="token punctuation">.</span><span class="token function">getOrDefault</span><span class="token punctuation">(</span>curr <span class="token operator">-</span> k<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        counts<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>curr<span class="token punctuation">,</span> counts<span class="token punctuation">.</span><span class="token function">getOrDefault</span><span class="token punctuation">(</span>curr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> ans<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="\u5355\u8C03\u6808" tabindex="-1"><a class="header-anchor" href="#\u5355\u8C03\u6808" aria-hidden="true">#</a> \u5355\u8C03\u6808</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Deque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> st <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> ans <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token operator">:</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5BF9\u4E8E\u5355\u8C03\u9012\u51CF\u7684\u60C5\u51B5\uFF0C\u53EA\u9700\u5C06 &gt; \u7FFB\u8F6C\u5230 &lt;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>stack<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> stack<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u6839\u636E\u9898\u610F\u8865\u5145\u4EE3\u7801</span>
            stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> ans<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><details class="custom-container details"><summary>739.\u6BCF\u65E5\u6E29\u5EA6</summary><p>\u7ED9\u5B9A\u4E00\u4E2A\u6574\u6570\u6570\u7EC4 <code>temperatures</code> \uFF0C\u8868\u793A\u6BCF\u5929\u7684\u6E29\u5EA6\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u6570\u7EC4 <code>answer</code> \uFF0C\u5176\u4E2D <code>answer[i]</code> \u662F\u6307\u5BF9\u4E8E\u7B2C <code>i</code> \u5929\uFF0C\u4E0B\u4E00\u4E2A\u66F4\u9AD8\u6E29\u5EA6\u51FA\u73B0\u5728\u51E0\u5929\u540E\u3002\u5982\u679C\u6C14\u6E29\u5728\u8FD9\u4E4B\u540E\u90FD\u4E0D\u4F1A\u5347\u9AD8\uFF0C\u8BF7\u5728\u8BE5\u4F4D\u7F6E\u7528 <code>0</code> \u6765\u4EE3\u66FF\u3002</p><p><strong>\u793A\u4F8B 1:</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165: temperatures = [73,74,75,71,69,72,76,73]
\u8F93\u51FA: [1,1,4,2,1,1,0,0]
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>\u793A\u4F8B 2:</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165: temperatures = [30,40,50,60]
\u8F93\u51FA: [1,1,1,0]
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>\u793A\u4F8B 3:</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165: temperatures = [30,60,90]
\u8F93\u51FA: [1,1,0]
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>\u63D0\u793A\uFF1A</strong></p><ul><li><code>1 &lt;= temperatures.length &lt;= 105</code></li><li><code>30 &lt;= temperatures[i] &lt;= 100</code></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">dailyTemperatures</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> temperatures<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Deque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> st <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> n <span class="token operator">=</span> temperatures<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ans <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> reg<span class="token punctuation">;</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                reg <span class="token operator">=</span> temperatures<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token comment">// \u6808\u9876\u5143\u7D20\u6E29\u5EA6\u5C0F\u4E8E\u5F53\u524D\u6E29\u5EA6\uFF0C\u66F4\u65B0\u6808\u9876\u5143\u7D20\u7684\u7B54\u6848</span>
                <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>st<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> temperatures<span class="token punctuation">[</span>st<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> reg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token class-name">Integer</span> pop <span class="token operator">=</span> st<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    ans<span class="token punctuation">[</span>pop<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token operator">-</span>pop<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                st<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> ans<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div></details><h2 id="\u4E8C\u53C9\u6811" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u53C9\u6811" aria-hidden="true">#</a> \u4E8C\u53C9\u6811</h2><h3 id="dfs-\u9012\u5F52" tabindex="-1"><a class="header-anchor" href="#dfs-\u9012\u5F52" aria-hidden="true">#</a> DFS \u9012\u5F52</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> ans <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6839\u636E\u9898\u610F\u8865\u5145\u4EE3\u7801</span>
    <span class="token function">dfs</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">dfs</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> ans<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="dfs-\u8FED\u4EE3" tabindex="-1"><a class="header-anchor" href="#dfs-\u8FED\u4EE3" aria-hidden="true">#</a> DFS \u8FED\u4EE3</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TreeNode</span><span class="token punctuation">&gt;</span></span> stack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> ans <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>stack<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">TreeNode</span> node <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6839\u636E\u9898\u610F\u8865\u5145\u4EE3\u7801</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>left <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>right <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> ans<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="bfs" tabindex="-1"><a class="header-anchor" href="#bfs" aria-hidden="true">#</a> BFS</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Queue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TreeNode</span><span class="token punctuation">&gt;</span></span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> ans <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>queue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> currentLength <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u505A\u4E00\u4E9B\u5F53\u524D\u5C42\u7684\u64CD\u4F5C</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> currentLength<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">TreeNode</span> node <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u6839\u636E\u9898\u610F\u8865\u5145\u4EE3\u7801</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>left <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>right <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> ans<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="\u8D2A\u5FC3" tabindex="-1"><a class="header-anchor" href="#\u8D2A\u5FC3" aria-hidden="true">#</a> \u8D2A\u5FC3</h2><details class="custom-container details"><summary>[2835. \u4F7F\u5B50\u5E8F\u5217\u7684\u548C\u7B49\u4E8E\u76EE\u6807\u7684\u6700\u5C11\u64CD\u4F5C\u6B21\u6570](https://leetcode.cn/problems/minimum-operations-to-form-subsequence-with-target-sum/)</summary><p>\u7ED9\u4F60\u4E00\u4E2A\u4E0B\u6807\u4ECE <strong>0</strong> \u5F00\u59CB\u7684\u6570\u7EC4 <code>nums</code> \uFF0C\u5B83\u5305\u542B <strong>\u975E\u8D1F</strong> \u6574\u6570\uFF0C\u4E14\u5168\u90E8\u4E3A <code>2</code> \u7684\u5E42\uFF0C\u540C\u65F6\u7ED9\u4F60\u4E00\u4E2A\u6574\u6570 <code>target</code> \u3002</p><p>\u4E00\u6B21\u64CD\u4F5C\u4E2D\uFF0C\u4F60\u5FC5\u987B\u5BF9\u6570\u7EC4\u505A\u4EE5\u4E0B\u4FEE\u6539\uFF1A</p><ul><li>\u9009\u62E9\u6570\u7EC4\u4E2D\u4E00\u4E2A\u5143\u7D20 <code>nums[i]</code> \uFF0C\u6EE1\u8DB3 <code>nums[i] &gt; 1</code> \u3002</li><li>\u5C06 <code>nums[i]</code> \u4ECE\u6570\u7EC4\u4E2D\u5220\u9664\u3002</li><li>\u5728 <code>nums</code> \u7684 <strong>\u672B\u5C3E</strong> \u6DFB\u52A0 <strong>\u4E24\u4E2A</strong> \u6570\uFF0C\u503C\u90FD\u4E3A <code>nums[i] / 2</code> \u3002</li></ul><p>\u4F60\u7684\u76EE\u6807\u662F\u8BA9 <code>nums</code> \u7684\u4E00\u4E2A <strong>\u5B50\u5E8F\u5217</strong> \u7684\u5143\u7D20\u548C\u7B49\u4E8E <code>target</code> \uFF0C\u8BF7\u4F60\u8FD4\u56DE\u8FBE\u6210\u8FD9\u4E00\u76EE\u6807\u7684 <strong>\u6700\u5C11\u64CD\u4F5C\u6B21\u6570</strong> \u3002\u5982\u679C\u65E0\u6CD5\u5F97\u5230\u8FD9\u6837\u7684\u5B50\u5E8F\u5217\uFF0C\u8BF7\u4F60\u8FD4\u56DE <code>-1</code> \u3002</p><p>\u6570\u7EC4\u4E2D\u4E00\u4E2A <strong>\u5B50\u5E8F\u5217</strong> \u662F\u901A\u8FC7\u5220\u9664\u539F\u6570\u7EC4\u4E2D\u4E00\u4E9B\u5143\u7D20\uFF0C\u5E76\u4E14\u4E0D\u6539\u53D8\u5269\u4F59\u5143\u7D20\u987A\u5E8F\u5F97\u5230\u7684\u5269\u4F59\u6570\u7EC4\u3002</p><p><strong>\u793A\u4F8B 1\uFF1A</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165\uFF1Anums = [1,2,8], target = 7
\u8F93\u51FA\uFF1A1
\u89E3\u91CA\uFF1A\u7B2C\u4E00\u6B21\u64CD\u4F5C\u4E2D\uFF0C\u6211\u4EEC\u9009\u62E9\u5143\u7D20 nums[2] \u3002\u6570\u7EC4\u53D8\u4E3A nums = [1,2,4,4] \u3002
\u8FD9\u65F6\u5019\uFF0Cnums \u5305\u542B\u5B50\u5E8F\u5217 [1,2,4] \uFF0C\u548C\u4E3A 7 \u3002
\u65E0\u6CD5\u901A\u8FC7\u66F4\u5C11\u7684\u64CD\u4F5C\u5F97\u5230\u548C\u4E3A 7 \u7684\u5B50\u5E8F\u5217\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>\u793A\u4F8B 2\uFF1A</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165\uFF1Anums = [1,32,1,2], target = 12
\u8F93\u51FA\uFF1A2
\u89E3\u91CA\uFF1A\u7B2C\u4E00\u6B21\u64CD\u4F5C\u4E2D\uFF0C\u6211\u4EEC\u9009\u62E9\u5143\u7D20 nums[1] \u3002\u6570\u7EC4\u53D8\u4E3A nums = [1,1,2,16,16] \u3002
\u7B2C\u4E8C\u6B21\u64CD\u4F5C\u4E2D\uFF0C\u6211\u4EEC\u9009\u62E9\u5143\u7D20 nums[3] \u3002\u6570\u7EC4\u53D8\u4E3A nums = [1,1,2,16,8,8] \u3002
\u8FD9\u65F6\u5019\uFF0Cnums \u5305\u542B\u5B50\u5E8F\u5217 [1,1,2,8] \uFF0C\u548C\u4E3A 12 \u3002
\u65E0\u6CD5\u901A\u8FC7\u66F4\u5C11\u7684\u64CD\u4F5C\u5F97\u5230\u548C\u4E3A 12 \u7684\u5B50\u5E8F\u5217\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>\u793A\u4F8B 3\uFF1A</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165\uFF1Anums = [1,32,1], target = 35
\u8F93\u51FA\uFF1A-1
\u89E3\u91CA\uFF1A\u65E0\u6CD5\u5F97\u5230\u548C\u4E3A 35 \u7684\u5B50\u5E8F\u5217\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>\u63D0\u793A\uFF1A</strong></p><ul><li><code>1 &lt;= nums.length &lt;= 1000</code></li><li><code>1 &lt;= nums[i] &lt;= 230</code></li><li><code>nums</code> \u53EA\u5305\u542B\u975E\u8D1F\u6574\u6570\uFF0C\u4E14\u5747\u4E3A 2 \u7684\u5E42\u3002</li><li><code>1 &lt;= target &lt; 231</code></li></ul><hr><p>\u7531\u4E8E\u4E00\u4E2A\u6570\u53EF\u4EE5\u4E00\u5206\u4E3A\u4E8C\uFF0C\u6240\u4EE5\u6574\u4E2A\u6570\u7EC4\u53EF\u4EE5\u5168\u90E8\u53D8\u62101\u3002\u56E0\u6B64\u5982\u679C\u6570\u7EC4\u548C\u5C0F\u4E8Etarget\uFF0C\u5219\u65E0\u89E3\u3002\u5426\u5219\u4E00\u5B9A\u6709\u89E3\u3002</p><p>\u7136\u540Etarget\u4ECE\u4F4E\u4F4D\u5230\u9AD8\u4F4D\u8FDB\u884C\u8D2A\u5FC3\u3002</p><ul><li>\u5982\u679Ci\u4F4D\u662F0\u5219\u8DF3\u8FC7\uFF1B</li><li>\u5982\u679C target \u7684\u7B2C i \u4F4D\u662F 1 <ul><li><p>\u90A3\u4E48\u5148\u770B\u770B\u6240\u6709 $\\leq{2^i} $ \u7684\u5143\u7D20\u548C\u80FD\u5426 $\\geq{target &amp; mask}$\uFF0C \u5176\u4E2D $mask=2^{i+1} -1 $\u3002 \u5982\u679C\u80FD\uFF0C\u90A3\u4E48\u5FC5\u7136\u53EF\u4EE5\u5408\u5E76\u51FA$target &amp; mask $, \u65E0\u9700\u62C6\u3002</p></li><li><p>\u5982\u679C\u4E0D\u80FD\uFF0C\u9700\u8981\u628A\u4E00\u4E2A\u66F4\u5927\u7684\u6570\uFF08\u8BBE\u4ED6\u662F$2^j$\uFF09\u4E0D\u65AD\u5730\u4E00\u5206\u4E3A\u4E8C\uFF0C\u76F4\u5230\u5206\u51FA $2^i$ \u4E3A\u6B62\u3002\u5206\u89E3\u5B8C\u4E4B\u540E$2^i, 2^{i+1}, 2^{i+2},... , 2^{j-1} $\u8FD9\u4E9B2\u7684\u5E42\u6211\u4EEC\u90FD\u6709\u4E86\uFF0C\u6240\u4EE5\u540E\u9762$i+1, i+2, .. j-1$ \u8FD9\u4E9B\u6BD4\u7279\u4F4D\u5C31\u53EF\u4EE5\u65E0\u9700\u5224\u65AD\uFF0C\u6240\u4EE5\u53EF\u4EE5\u76F4\u63A5\u4ECE\u7B2C $j$ \u4E2A\u6BD4\u7279\u4F4D\u5F00\u59CB\u5224\u65AD\u3002</p></li></ul></li></ul><hr><p>\u5B9E\u73B0</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">minOperations</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">long</span> s <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cnt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">:</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            s <span class="token operator">+=</span> i<span class="token punctuation">;</span>
            <span class="token doc-comment comment">/**
            \u4F4E\u4F4D\u8FDE\u7EED0\u7684\u4E2A\u6570
             */</span>
            cnt<span class="token punctuation">[</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">numberOfTrailingZeros</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>s <span class="token operator">&lt;</span> target<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> ans <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        s <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1L</span> <span class="token operator">&lt;&lt;</span> i<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> target <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            s <span class="token operator">+=</span> cnt<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> i<span class="token punctuation">;</span>  <span class="token comment">// 2^i</span>
            <span class="token keyword">int</span> mask <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1L</span> <span class="token operator">&lt;&lt;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 2^(i+1) - 1 =\u300B 100 -&gt; 011 </span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>s <span class="token operator">&gt;=</span> <span class="token punctuation">(</span>target <span class="token operator">&amp;</span> mask<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u5982\u679C\u5F53\u524D\u603B\u548Cs\u5DF2\u7ECF\u5927\u4E8E\u7B49\u4E8Etarget\u7684\u4F4Ei\u4F4D\uFF0C\u7EE7\u7EED\u4E0B\u4E00\u8F6E\u64CD\u4F5C</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span> 
            <span class="token punctuation">}</span>
            ans<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// \u4E00\u5B9A\u8981\u627E\u66F4\u5927\u7684\u6570\u64CD\u4F5C</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span> cnt<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                ans<span class="token operator">++</span><span class="token punctuation">;</span> <span class="token comment">// \u4ECEi\u5F00\u59CB\uFF0C\u627E\u5230\u4E0B\u4E00\u4E2A\u51FA\u73B0\u6B21\u6570\u4E0D\u4E3A0\u7684\u6570\u5B57\uFF0C\u9700\u8981\u8FDB\u884C\u64CD\u4F5C\uFF0C\u5C06\u64CD\u4F5C\u6B21\u6570ans\u52A01</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> ans<span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div></details><h2 id="\u56FE\u8BBA" tabindex="-1"><a class="header-anchor" href="#\u56FE\u8BBA" aria-hidden="true">#</a> \u56FE\u8BBA</h2><h3 id="dfs-\u9012\u5F52-1" tabindex="-1"><a class="header-anchor" href="#dfs-\u9012\u5F52-1" aria-hidden="true">#</a> DFS \u9012\u5F52</h3><p>\u4EE5\u4E0B\u56FE\u6A21\u677F\u5047\u8BBE\u8282\u70B9\u7F16\u53F7\u4ECE 0 \u5230 n - 1 \uFF0C\u5E76\u4E14\u56FE\u662F\u4EE5\u90BB\u63A5\u8868\u7684\u5F62\u5F0F\u7ED9\u51FA\u7684\u3002\u6839\u636E\u95EE\u9898\u7684\u4E0D\u540C\uFF0C\u60A8\u53EF\u80FD\u9700\u8981\u5728\u4F7F\u7528\u6A21\u677F\u4E4B\u524D\u5C06\u8F93\u5165\u8F6C\u6362\u4E3A\u7B49\u6548\u7684<strong>\u90BB\u63A5\u8868</strong>\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> seen <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> graph<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    seen<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>START_NODE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token function">dfs</span><span class="token punctuation">(</span>START_NODE<span class="token punctuation">,</span> graph<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> node<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> graph<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> ans <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment">// \u6839\u636E\u9898\u610F\u8865\u5145\u4EE3\u7801</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> neighbor<span class="token operator">:</span> graph<span class="token punctuation">[</span>node<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>seen<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>neighbor<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            seen<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>neighbor<span class="token punctuation">)</span><span class="token punctuation">;</span>
            ans <span class="token operator">+=</span> <span class="token function">dfs</span><span class="token punctuation">(</span>neighbor<span class="token punctuation">,</span> graph<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> ans<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="dfs-\u8FED\u4EE3-1" tabindex="-1"><a class="header-anchor" href="#dfs-\u8FED\u4EE3-1" aria-hidden="true">#</a> DFS \u8FED\u4EE3</h3><p>\u4EE5\u4E0B\u56FE\u6A21\u677F\u5047\u8BBE\u8282\u70B9\u7F16\u53F7\u4ECE 0 \u5230 n - 1 \uFF0C\u5E76\u4E14\u56FE\u662F\u4EE5\u90BB\u63A5\u8868\u7684\u5F62\u5F0F\u7ED9\u51FA\u7684\u3002\u6839\u636E\u95EE\u9898\u7684\u4E0D\u540C\uFF0C\u60A8\u53EF\u80FD\u9700\u8981\u5728\u4F7F\u7528\u6A21\u677F\u4E4B\u524D\u5C06\u8F93\u5165\u8F6C\u6362\u4E3A\u7B49\u6548\u7684<strong>\u90BB\u63A5\u8868</strong>\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> graph<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> stack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> seen <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>START_NODE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    seen<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>START_NODE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> ans <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>stack<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> node <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6839\u636E\u9898\u610F\u8865\u5145\u4EE3\u7801</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> neighbor<span class="token operator">:</span> graph<span class="token punctuation">[</span>node<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>seen<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>neighbor<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                seen<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>neighbor<span class="token punctuation">)</span><span class="token punctuation">;</span>
                stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>neighbor<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> ans<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="bfs-1" tabindex="-1"><a class="header-anchor" href="#bfs-1" aria-hidden="true">#</a> BFS</h3><p>\u4EE5\u4E0B\u56FE\u6A21\u677F\u5047\u8BBE\u8282\u70B9\u7F16\u53F7\u4ECE 0 \u5230 n - 1 \uFF0C\u5E76\u4E14\u56FE\u662F\u4EE5\u90BB\u63A5\u8868\u7684\u5F62\u5F0F\u7ED9\u51FA\u7684\u3002\u6839\u636E\u95EE\u9898\u7684\u4E0D\u540C\uFF0C\u60A8\u53EF\u80FD\u9700\u8981\u5728\u4F7F\u7528\u6A21\u677F\u4E4B\u524D\u5C06\u8F93\u5165\u8F6C\u6362\u4E3A\u7B49\u6548\u7684<strong>\u90BB\u63A5\u8868</strong>\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> graph<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Queue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> queue <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> seen <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>START_NODE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    seen<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>START_NODE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> ans <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>queue<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> node <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6839\u636E\u9898\u610F\u8865\u5145\u4EE3\u7801</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> neighbor<span class="token operator">:</span> graph<span class="token punctuation">[</span>node<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>seen<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>neighbor<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                seen<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>neighbor<span class="token punctuation">)</span><span class="token punctuation">;</span>
                queue<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>neighbor<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> ans<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="\u6811\u4E0A\u500D\u589E" tabindex="-1"><a class="header-anchor" href="#\u6811\u4E0A\u500D\u589E" aria-hidden="true">#</a> \u6811\u4E0A\u500D\u589E</h3><details class="custom-container details"><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div></details><h2 id="\u5806" tabindex="-1"><a class="header-anchor" href="#\u5806" aria-hidden="true">#</a> \u5806</h2><h3 id="\u524D-k-\u4E2A\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u524D-k-\u4E2A\u5143\u7D20" aria-hidden="true">#</a> \u524D k \u4E2A\u5143\u7D20</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> heap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PriorityQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token operator">-&gt;</span>a<span class="token operator">-</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token operator">:</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        heap<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>heap<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            heap<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ans <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> k<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ans<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> heap<span class="token punctuation">.</span><span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> ans<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>offer\uFF1A\u52A0\u5165\u5143\u7D20
clear\uFF1A\u5220\u9664\u6240\u6709\u5143\u7D20
isEmpty\uFF1A\u5224\u65AD\u961F\u5217\u662F\u5426\u4E3A\u7A7A
poll\uFF1A\u68C0\u7D22\u5E76\u5220\u9664\u6B64\u961F\u5217\u7684\u5934\uFF0C\u5982\u679C\u6B64\u961F\u5217\u4E3A\u7A7A\uFF0C\u5219\u8FD4\u56DE null 
peek\uFF1A\u68C0\u7D22\u4F46\u4E0D\u5220\u9664\u6B64\u961F\u5217\u7684\u5934\uFF0C\u5982\u679C\u6B64\u961F\u5217\u4E3A\u7A7A\uFF0C\u5219\u8FD4\u56DEnull
remove\uFF1A\u68C0\u7D22\u5E76\u5220\u9664\u6B64\u961F\u5217\u7684\u5934\uFF0C\u5982\u679C\u6B64\u961F\u5217\u4E3A\u7A7A\u4F1A\u51FA\u73B0\u5F02\u5E38
comparator\uFF1A\u8FD4\u56DE\u7528\u4E8E\u6392\u5E8F\u6B64\u961F\u5217\u4E2D\u5143\u7D20\u7684\u6BD4\u8F83\u5668\uFF0C\u5982\u679C\u6B64\u961F\u5217\u662F\u6839\u636E\u5176\u5143\u7D20\u7684\u81EA\u7136\u987A\u5E8F\u6392\u5E8F\u7684\uFF0C\u5219\u8FD4\u56DEnull
contains\uFF1A\u8FD4\u56DE\u961F\u5217\u4E2D\u662F\u5426\u5305\u542B\u6240\u7ED9\u5143\u7D20
size\uFF1A\u8FD4\u56DE\u6240\u542B\u7684\u5143\u7D20\u6570\u91CF

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="\u4E8C\u5206" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u5206" aria-hidden="true">#</a> \u4E8C\u5206</h2><p>\u26A0\uFE0F\u4E8C\u5206\u9700\u8981\u6709\u5E8F</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> left <span class="token operator">=</span> MINIMUM_POSSIBLE_ANSWER<span class="token punctuation">;</span>
    <span class="token keyword">int</span> right <span class="token operator">=</span> MAXIMUM_POSSIBLE_ANSWER<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> mid <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token punctuation">(</span>right <span class="token operator">-</span> left<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">check</span><span class="token punctuation">(</span>mid<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            right <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            left <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> left<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8FD9\u4E2A\u51FD\u6570\u7684\u5177\u4F53\u5B9E\u73B0\u53D6\u51B3\u4E8E\u95EE\u9898</span>
    <span class="token keyword">return</span> BOOLEAN<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="\u56DE\u6EAF" tabindex="-1"><a class="header-anchor" href="#\u56DE\u6EAF" aria-hidden="true">#</a> \u56DE\u6EAF</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">backtrack</span><span class="token punctuation">(</span><span class="token class-name">STATE</span> curr<span class="token punctuation">,</span> OTHER_ARGUMENTS<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>BASE_CASE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4FEE\u6539\u7B54\u6848</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> ans <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>ITERATE_OVER_INPUT<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4FEE\u6539\u5F53\u524D\u72B6\u6001</span>
        ans <span class="token operator">+=</span> <span class="token function">backtrack</span><span class="token punctuation">(</span>curr<span class="token punctuation">,</span> OTHER_ARGUMENTS<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>
        <span class="token comment">// \u64A4\u6D88\u5BF9\u5F53\u524D\u72B6\u6001\u7684\u4FEE\u6539</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="\u52A8\u6001\u89C4\u5212" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u89C4\u5212" aria-hidden="true">#</a> \u52A8\u6001\u89C4\u5212</h2><h3 id="\u81EA\u9876\u5411\u4E0B" tabindex="-1"><a class="header-anchor" href="#\u81EA\u9876\u5411\u4E0B" aria-hidden="true">#</a> \u81EA\u9876\u5411\u4E0B</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span>STATE<span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> memo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">dp</span><span class="token punctuation">(</span>STATE_FOR_WHOLE_INPUT<span class="token punctuation">,</span> arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">dp</span><span class="token punctuation">(</span>STATE<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>BASE_CASE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>memo<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>STATE<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> memo<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>STATE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">int</span> ans <span class="token operator">=</span> <span class="token function">RECURRENCE_RELATION</span><span class="token punctuation">(</span>STATE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    memo<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>STATE<span class="token punctuation">,</span> ans<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> ans<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="\u5B57\u5178\u6811" tabindex="-1"><a class="header-anchor" href="#\u5B57\u5178\u6811" aria-hidden="true">#</a> \u5B57\u5178\u6811</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u6CE8\u610F:\u53EA\u6709\u9700\u8981\u5728\u6BCF\u4E2A\u8282\u70B9\u4E0A\u5B58\u50A8\u6570\u636E\u65F6\u624D\u9700\u8981\u4F7F\u7528\u7C7B\u3002</span>
<span class="token comment">// \u5426\u5219\uFF0C\u60A8\u53EF\u4EE5\u53EA\u4F7F\u7528\u54C8\u5E0C\u6620\u5C04\u5B9E\u73B0\u4E00\u4E2A\u524D\u7F00\u6811\u3002</span>
<span class="token keyword">class</span> <span class="token class-name">TrieNode</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4F60\u53EF\u4EE5\u5C06\u6570\u636E\u5B58\u50A8\u5728\u8282\u70B9\u4E0A</span>
    <span class="token keyword">int</span> data<span class="token punctuation">;</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">,</span> <span class="token class-name">TrieNode</span><span class="token punctuation">&gt;</span></span> children<span class="token punctuation">;</span>
    <span class="token class-name">TrieNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>children <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">TrieNode</span> <span class="token function">buildTrie</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> words<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">TrieNode</span> root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TrieNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> word<span class="token operator">:</span> words<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">TrieNode</span> curr <span class="token operator">=</span> root<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">char</span> c<span class="token operator">:</span> word<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>curr<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                curr<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">TrieNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            curr <span class="token operator">=</span> curr<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u8FD9\u4E2A\u4F4D\u7F6E\u4E0A\u7684 curr \u5DF2\u7ECF\u6709\u4E00\u4E2A\u5B8C\u6574\u7684\u5355\u8BCD</span>
        <span class="token comment">// \u5982\u679C\u4F60\u613F\u610F\uFF0C\u4F60\u53EF\u4EE5\u5728\u8FD9\u91CC\u6267\u884C\u66F4\u591A\u7684\u64CD\u4F5C\u6765\u7ED9 curr \u6DFB\u52A0\u5C5E\u6027</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> root<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div>`,58);function h(g,w){const a=t("ExternalLinkIcon");return e(),o(l,null,[k,n("p",null,[n("a",b,[d,c(a)])]),m],64)}var f=p(i,[["render",h],["__file","\u5468\u8D5B\u6A21\u7248.html.vue"]]);export{f as default};
