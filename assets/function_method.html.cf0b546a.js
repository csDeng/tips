import{_ as e,r as o,o as c,c as l,b as n,a,w as p,F as u,e as i,d as t}from"./app.2a7ffa2e.js";const r={},k={class:"table-of-contents"},b=t("\u51FD\u6570\u4E0E\u65B9\u6CD5"),m=t("1. \u51FD\u6570"),d=t("1.1 golang\u51FD\u6570\u7279\u70B9\uFF1A"),f=t("1.2 \u51FD\u6570\u58F0\u660E\uFF1A"),g=t("1.3 \u51FD\u6570\u53C2\u6570"),y=t("1.4 \u51FD\u6570\u8FD4\u56DE\u503C"),v=t("1.5 \u533F\u540D\u51FD\u6570"),w=t("1.6 \u95ED\u5305"),h=t("Go\u7684\u95ED\u5305"),x=t("1.7 Go \u8BED\u8A00\u9012\u5F52\u51FD\u6570"),q=t("1.8 Golang\u5EF6\u8FDF\u8C03\u7528\uFF1A"),_=t("go\u8BED\u8A00 defer"),T=t("defer \u78B0\u4E0A\u95ED\u5305"),P=t("defer f.Close"),V=t("1.9 defer\u9677\u9631"),C=t("defer \u4E0E closure"),U=t("defer \u4E0E return"),G=t("defer nil \u51FD\u6570"),N=t("\u5728\u9519\u8BEF\u7684\u4F4D\u7F6E\u4F7F\u7528 defer"),S=t("\u89E3\u51B3\u65B9\u6848"),D=t("\u4E0D\u68C0\u67E5\u9519\u8BEF"),z=t("2. \u65B9\u6CD5"),E=t("2.1. \u65B9\u6CD5\u5B9A\u4E49"),I=t("3. \u666E\u901A\u51FD\u6570\u4E0E\u65B9\u6CD5\u7684\u533A\u522B"),F=t("4. \u6269\u5C55"),O=t("4.1. \u8868\u8FBE\u5F0F"),j=t("4.2 \u81EA\u5B9A\u4E49error"),B=i(`<h1 id="\u51FD\u6570\u4E0E\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u51FD\u6570\u4E0E\u65B9\u6CD5" aria-hidden="true">#</a> \u51FD\u6570\u4E0E\u65B9\u6CD5</h1><h2 id="_1-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_1-\u51FD\u6570" aria-hidden="true">#</a> 1. \u51FD\u6570</h2><h3 id="_1-1-golang\u51FD\u6570\u7279\u70B9" tabindex="-1"><a class="header-anchor" href="#_1-1-golang\u51FD\u6570\u7279\u70B9" aria-hidden="true">#</a> 1.1 golang\u51FD\u6570\u7279\u70B9\uFF1A</h3><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u2022 \u65E0\u9700\u58F0\u660E\u539F\u578B\u3002</p><p>\u2022 \u652F\u6301\u4E0D\u5B9A \u53D8\u53C2\u3002</p><p>\u2022 \u652F\u6301\u591A\u8FD4\u56DE\u503C\u3002</p><p>\u2022 \u652F\u6301\u547D\u540D\u8FD4\u56DE\u53C2\u6570\u3002</p><p>\u2022 \u652F\u6301\u533F\u540D\u51FD\u6570\u548C\u95ED\u5305\u3002</p><p>\u2022 \u51FD\u6570\u4E5F\u662F\u4E00\u79CD\u7C7B\u578B\uFF0C\u4E00\u4E2A\u51FD\u6570\u53EF\u4EE5\u8D4B\u503C\u7ED9\u53D8\u91CF\u3002</p></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>\u2022 \u4E0D\u652F\u6301 \u5D4C\u5957 (nested) \u4E00\u4E2A\u5305\u4E0D\u80FD\u6709\u4E24\u4E2A\u540D\u5B57\u4E00\u6837\u7684\u51FD\u6570\u3002</p><p>\u2022 \u4E0D\u652F\u6301 \u91CD\u8F7D (overload)</p><p>\u2022 \u4E0D\u652F\u6301 \u9ED8\u8BA4\u53C2\u6570 (default parameter)\u3002</p></div><h3 id="_1-2-\u51FD\u6570\u58F0\u660E" tabindex="-1"><a class="header-anchor" href="#_1-2-\u51FD\u6570\u58F0\u660E" aria-hidden="true">#</a> 1.2 \u51FD\u6570\u58F0\u660E\uFF1A</h3><p>\u51FD\u6570\u58F0\u660E\u5305\u542B\u4E00\u4E2A\u51FD\u6570\u540D\uFF0C\u53C2\u6570\u5217\u8868\uFF0C \u8FD4\u56DE\u503C\u5217\u8868\u548C\u51FD\u6570\u4F53\u3002\u5982\u679C\u51FD\u6570\u6CA1\u6709\u8FD4\u56DE\u503C\uFF0C\u5219\u8FD4\u56DE\u5217\u8868\u53EF\u4EE5\u7701\u7565\u3002\u51FD\u6570\u4ECE\u7B2C\u4E00\u6761\u8BED\u53E5\u5F00\u59CB\u6267\u884C\uFF0C\u76F4\u5230\u6267\u884Creturn\u8BED\u53E5\u6216\u8005\u6267\u884C\u51FD\u6570\u7684\u6700\u540E\u4E00\u6761\u8BED\u53E5\u3002</p><p>\u51FD\u6570\u53EF\u4EE5\u6CA1\u6709\u53C2\u6570\u6216\u63A5\u53D7\u591A\u4E2A\u53C2\u6570\u3002</p><p>\u6CE8\u610F\u7C7B\u578B\u5728\u53D8\u91CF\u540D\u4E4B\u540E \u3002</p><p>\u5F53\u4E24\u4E2A\u6216\u591A\u4E2A\u8FDE\u7EED\u7684\u51FD\u6570\u547D\u540D\u53C2\u6570\u662F\u540C\u4E00\u7C7B\u578B\uFF0C\u5219\u9664\u4E86\u6700\u540E\u4E00\u4E2A\u7C7B\u578B\u4E4B\u5916\uFF0C\u5176\u4ED6\u90FD\u53EF\u4EE5\u7701\u7565\u3002</p><p>\u51FD\u6570\u53EF\u4EE5\u8FD4\u56DE\u4EFB\u610F\u6570\u91CF\u7684\u8FD4\u56DE\u503C\u3002</p><p>\u4F7F\u7528\u5173\u952E\u5B57 <code>func </code>\u5B9A\u4E49\u51FD\u6570\uFF0C\u5DE6\u5927\u62EC\u53F7\u4F9D\u65E7\u4E0D\u80FD\u53E6\u8D77\u4E00\u884C\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">test</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">,</span> s <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7C7B\u578B\u76F8\u540C\u7684\u76F8\u90BB\u53C2\u6570\uFF0C\u53C2\u6570\u7C7B\u578B\u53EF\u5408\u5E76\u3002 \u591A\u8FD4\u56DE\u503C\u5FC5\u987B\u7528\u62EC\u53F7\u3002</span>
    n <span class="token operator">:=</span> x <span class="token operator">+</span> y          
    <span class="token keyword">return</span> n<span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> n<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u51FD\u6570\u662F\u7B2C\u4E00\u7C7B\u5BF9\u8C61\uFF0C\u53EF\u4F5C\u4E3A\u53C2\u6570\u4F20\u9012\u3002\u5EFA\u8BAE\u5C06\u590D\u6742\u7B7E\u540D\u5B9A\u4E49\u4E3A\u51FD\u6570\u7C7B\u578B\uFF0C\u4EE5\u4FBF\u4E8E\u9605\u8BFB\u3002</p><details class="custom-container details"><summary>\u67E5\u770B\u793A\u4F8B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">test</span><span class="token punctuation">(</span>fn <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5B9A\u4E49\u51FD\u6570\u7C7B\u578B\u3002</span>
<span class="token keyword">type</span> FormatFunc <span class="token keyword">func</span><span class="token punctuation">(</span>s <span class="token builtin">string</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">string</span> 

<span class="token keyword">func</span> <span class="token function">format</span><span class="token punctuation">(</span>fn FormatFunc<span class="token punctuation">,</span> s <span class="token builtin">string</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    s1 <span class="token operator">:=</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// \u76F4\u63A5\u5C06\u533F\u540D\u51FD\u6570\u5F53\u53C2\u6570\u3002</span>

    s2 <span class="token operator">:=</span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>s <span class="token builtin">string</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;%d, %d&quot;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>

    <span class="token function">println</span><span class="token punctuation">(</span>s1<span class="token punctuation">,</span> s2<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token number">100</span> <span class="token number">10</span>, <span class="token number">20</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></details><p>\u6709\u8FD4\u56DE\u503C\u7684\u51FD\u6570\uFF0C\u5FC5\u987B\u6709\u660E\u786E\u7684\u7EC8\u6B62\u8BED\u53E5\uFF0C\u5426\u5219\u4F1A\u5F15\u53D1\u7F16\u8BD1\u9519\u8BEF\u3002</p><p>\u4F60\u53EF\u80FD\u4F1A\u5076\u5C14\u9047\u5230\u6CA1\u6709\u51FD\u6570\u4F53\u7684\u51FD\u6570\u58F0\u660E\uFF0C\u8FD9\u8868\u793A\u8BE5\u51FD\u6570\u4E0D\u662F\u4EE5Go\u5B9E\u73B0\u7684\u3002\u8FD9\u6837\u7684\u58F0\u660E\u5B9A\u4E49\u4E86\u51FD\u6570\u6807\u8BC6\u7B26\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>package math

func Sin(x float64) float //implemented in assembly language
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_1-3-\u51FD\u6570\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#_1-3-\u51FD\u6570\u53C2\u6570" aria-hidden="true">#</a> 1.3 \u51FD\u6570\u53C2\u6570</h3><p>\u51FD\u6570\u5B9A\u4E49\u65F6\u6307\u51FA\uFF0C\u51FD\u6570\u5B9A\u4E49\u65F6\u6709\u53C2\u6570\uFF0C\u8BE5\u53D8\u91CF\u53EF\u79F0\u4E3A\u51FD\u6570\u7684\u5F62\u53C2\u3002\u5F62\u53C2\u5C31\u50CF\u5B9A\u4E49\u5728\u51FD\u6570\u4F53\u5185\u7684\u5C40\u90E8\u53D8\u91CF\u3002</p><p>\u4F46\u5F53\u8C03\u7528\u51FD\u6570\uFF0C\u4F20\u9012\u8FC7\u6765\u7684\u53D8\u91CF\u5C31\u662F\u51FD\u6570\u7684\u5B9E\u53C2\uFF0C\u51FD\u6570\u53EF\u4EE5\u901A\u8FC7\u4E24\u79CD\u65B9\u5F0F\u6765\u4F20\u9012\u53C2\u6570\uFF1A</p><p>\u503C\u4F20\u9012\uFF1A\u6307\u5728\u8C03\u7528\u51FD\u6570\u65F6\u5C06\u5B9E\u9645\u53C2\u6570\u590D\u5236\u4E00\u4EFD\u4F20\u9012\u5230\u51FD\u6570\u4E2D\uFF0C\u8FD9\u6837\u5728\u51FD\u6570\u4E2D\u5982\u679C\u5BF9\u53C2\u6570\u8FDB\u884C\u4FEE\u6539\uFF0C\u5C06\u4E0D\u4F1A\u5F71\u54CD\u5230\u5B9E\u9645\u53C2\u6570\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">swap</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
       <span class="token operator">...</span> <span class="token operator">...</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u5F15\u7528\u4F20\u9012\uFF1A\u662F\u6307\u5728\u8C03\u7528\u51FD\u6570\u65F6\u5C06\u5B9E\u9645\u53C2\u6570\u7684\u5730\u5740\u4F20\u9012\u5230\u51FD\u6570\u4E2D\uFF0C\u90A3\u4E48\u5728\u51FD\u6570\u4E2D\u5BF9\u53C2\u6570\u6240\u8FDB\u884C\u7684\u4FEE\u6539\uFF0C\u5C06\u5F71\u54CD\u5230\u5B9E\u9645\u53C2\u6570\u3002</p><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">/* \u5B9A\u4E49\u76F8\u4E92\u4EA4\u6362\u503C\u7684\u51FD\u6570 */</span>
<span class="token keyword">func</span> <span class="token function">swap</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token operator">*</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> temp <span class="token builtin">int</span>

    temp <span class="token operator">=</span> <span class="token operator">*</span>x <span class="token comment">/* \u4FDD\u5B58 x \u7684\u503C */</span>
    <span class="token operator">*</span>x <span class="token operator">=</span> <span class="token operator">*</span>y   <span class="token comment">/* \u5C06 y \u503C\u8D4B\u7ED9 x */</span>
    <span class="token operator">*</span>y <span class="token operator">=</span> temp <span class="token comment">/* \u5C06 temp \u503C\u8D4B\u7ED9 y*/</span>

<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> a<span class="token punctuation">,</span> b <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span>
    <span class="token comment">/*
        \u8C03\u7528 swap() \u51FD\u6570
        &amp;a \u6307\u5411 a \u6307\u9488\uFF0Ca \u53D8\u91CF\u7684\u5730\u5740
        &amp;b \u6307\u5411 b \u6307\u9488\uFF0Cb \u53D8\u91CF\u7684\u5730\u5740
    */</span>
    <span class="token function">swap</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>a<span class="token punctuation">,</span> <span class="token operator">&amp;</span>b<span class="token punctuation">)</span>

    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token number">2</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></details><p>\u5728\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0CGo \u8BED\u8A00\u4F7F\u7528\u7684\u662F\u503C\u4F20\u9012\uFF0C\u5373\u5728\u8C03\u7528\u8FC7\u7A0B\u4E2D\u4E0D\u4F1A\u5F71\u54CD\u5230\u5B9E\u9645\u53C2\u6570\u3002</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u6CE8\u610F1\uFF1A\u65E0\u8BBA\u662F\u503C\u4F20\u9012\uFF0C\u8FD8\u662F\u5F15\u7528\u4F20\u9012\uFF0C\u4F20\u9012\u7ED9\u51FD\u6570\u7684\u90FD\u662F\u53D8\u91CF\u7684\u526F\u672C\uFF0C\u4E0D\u8FC7\uFF0C\u503C\u4F20\u9012\u662F\u503C\u7684\u62F7\u8D1D\u3002\u5F15\u7528\u4F20\u9012\u662F\u5730\u5740\u7684\u62F7\u8D1D\uFF0C\u4E00\u822C\u6765\u8BF4\uFF0C\u5730\u5740\u62F7\u8D1D\u66F4\u4E3A\u9AD8\u6548\u3002\u800C\u503C\u62F7\u8D1D\u53D6\u51B3\u4E8E\u62F7\u8D1D\u7684\u5BF9\u8C61\u5927\u5C0F\uFF0C\u5BF9\u8C61\u8D8A\u5927\uFF0C\u5219\u6027\u80FD\u8D8A\u4F4E\u3002</p><p>\u6CE8\u610F2\uFF1Amap\u3001slice\u3001chan\u3001\u6307\u9488\u3001interface\u9ED8\u8BA4\u4EE5<strong>\u5F15\u7528</strong>\u7684\u65B9\u5F0F\u4F20\u9012\u3002</p></div><p>\u4E0D\u5B9A\u53C2\u6570\u4F20\u503C \u5C31\u662F\u51FD\u6570\u7684\u53C2\u6570\u4E0D\u662F\u56FA\u5B9A\u7684\uFF0C\u540E\u9762\u7684\u7C7B\u578B\u662F\u56FA\u5B9A\u7684\u3002\uFF08\u53EF\u53D8\u53C2\u6570\uFF09</p><p>Golang \u53EF\u53D8\u53C2\u6570\u672C\u8D28\u4E0A\u5C31\u662F <code>slice</code>\u3002\u53EA\u80FD\u6709\u4E00\u4E2A\uFF0C\u4E14\u5FC5\u987B\u662F\u6700\u540E\u4E00\u4E2A\u3002</p><p>\u5728\u53C2\u6570\u8D4B\u503C\u65F6\u53EF\u4EE5\u4E0D\u7528\u7528\u4E00\u4E2A\u4E00\u4E2A\u7684\u8D4B\u503C\uFF0C\u53EF\u4EE5\u76F4\u63A5\u4F20\u9012\u4E00\u4E2A\u6570\u7EC4\u6216\u8005\u5207\u7247\uFF0C\u7279\u522B\u6CE8\u610F\u7684\u662F\u5728\u53C2\u6570\u540E\u52A0\u4E0A\u201C<code>\u2026</code>\u201D\u5373\u53EF\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">myfunc</span><span class="token punctuation">(</span>args <span class="token operator">...</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token comment">//0\u4E2A\u6216\u591A\u4E2A\u53C2\u6570</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">add</span><span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">,</span> args\u2026<span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>    <span class="token comment">//1\u4E2A\u6216\u591A\u4E2A\u53C2\u6570</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">add</span><span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">,</span> args\u2026<span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>    <span class="token comment">//2\u4E2A\u6216\u591A\u4E2A\u53C2\u6570</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>\u6CE8\u610F\uFF1A\u5176\u4E2D<code>args</code>\u662F\u4E00\u4E2A<code>slice</code>\uFF0C\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7<code>args[index]</code>\u4F9D\u6B21\u8BBF\u95EE\u6240\u6709\u53C2\u6570,\u901A\u8FC7<code>len(arg)</code>\u6765\u5224\u65AD\u4F20\u9012\u53C2\u6570\u7684\u4E2A\u6570.</p><p>\u4EFB\u610F\u7C7B\u578B\u7684\u4E0D\u5B9A\u53C2\u6570\uFF1A \u5C31\u662F\u51FD\u6570\u7684\u53C2\u6570\u548C\u6BCF\u4E2A\u53C2\u6570\u7684\u7C7B\u578B\u90FD\u4E0D\u662F\u56FA\u5B9A\u7684\u3002</p><p>\u7528<code>interface{}</code>\u4F20\u9012\u4EFB\u610F\u7C7B\u578B\u6570\u636E\u662FGo\u8BED\u8A00\u7684\u60EF\u4F8B\u7528\u6CD5\uFF0C\u800C\u4E14<code>interface{}</code>\u662F\u7C7B\u578B\u5B89\u5168\u7684\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">myfunc</span><span class="token punctuation">(</span>args <span class="token operator">...</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><details class="custom-container details"><summary>\u4EE3\u7801\uFF1A</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">test</span><span class="token punctuation">(</span>s <span class="token builtin">string</span><span class="token punctuation">,</span> n <span class="token operator">...</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> x <span class="token builtin">int</span>
    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> n <span class="token punctuation">{</span>
        x <span class="token operator">+=</span> i
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> x<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;sum: %d&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>sum<span class="token punctuation">:</span> <span class="token number">6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u4F7F\u7528 slice \u5BF9\u8C61\u505A\u53D8\u53C2\u65F6\uFF0C\u5FC5\u987B\u5C55\u5F00\u3002<code>\uFF08slice...\uFF09</code></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">test</span><span class="token punctuation">(</span>s <span class="token builtin">string</span><span class="token punctuation">,</span> n <span class="token operator">...</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> x <span class="token builtin">int</span>
    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> n <span class="token punctuation">{</span>
        x <span class="token operator">+=</span> i
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> x<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    s <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">}</span>
    res <span class="token operator">:=</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;sum: %d&quot;</span><span class="token punctuation">,</span> s<span class="token operator">...</span><span class="token punctuation">)</span>    <span class="token comment">// slice... \u5C55\u5F00slice</span>
    <span class="token function">println</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div></details><h3 id="_1-4-\u51FD\u6570\u8FD4\u56DE\u503C" tabindex="-1"><a class="header-anchor" href="#_1-4-\u51FD\u6570\u8FD4\u56DE\u503C" aria-hidden="true">#</a> 1.4 \u51FD\u6570\u8FD4\u56DE\u503C</h3><p><code>&quot;_&quot;</code>\u6807\u8BC6\u7B26\uFF0C\u7528\u6765\u5FFD\u7565\u51FD\u6570\u7684\u67D0\u4E2A\u8FD4\u56DE\u503C</p><p>Go \u7684\u8FD4\u56DE\u503C\u53EF\u4EE5\u88AB\u547D\u540D\uFF0C\u5E76\u4E14\u5C31\u50CF\u5728\u51FD\u6570\u4F53\u5F00\u5934\u58F0\u660E\u7684\u53D8\u91CF\u90A3\u6837\u4F7F\u7528\u3002</p><p>\u8FD4\u56DE\u503C\u7684\u540D\u79F0\u5E94\u5F53\u5177\u6709\u4E00\u5B9A\u7684\u610F\u4E49\uFF0C\u53EF\u4EE5\u4F5C\u4E3A\u6587\u6863\u4F7F\u7528\u3002</p><hr><ol><li><p>\u6CA1\u6709\u53C2\u6570\u7684 return \u8BED\u53E5\u8FD4\u56DE\u5404\u4E2A\u8FD4\u56DE\u53D8\u91CF\u7684\u5F53\u524D\u503C\u3002\u8FD9\u79CD\u7528\u6CD5\u88AB\u79F0\u4F5C\u201C\u88F8\u201D\u8FD4\u56DE\u3002</p></li><li><p>\u76F4\u63A5\u8FD4\u56DE\u8BED\u53E5\u4EC5\u5E94\u5F53\u7528\u5728\u50CF\u4E0B\u9762\u8FD9\u6837\u7684\u77ED\u51FD\u6570\u4E2D\u3002\u5728\u957F\u7684\u51FD\u6570\u4E2D\u5B83\u4EEC\u4F1A\u5F71\u54CD\u4EE3\u7801\u7684\u53EF\u8BFB\u6027\u3002</p></li></ol><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">add</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>c <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    c <span class="token operator">=</span> a <span class="token operator">+</span> b
    <span class="token keyword">return</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">calc</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>sum <span class="token builtin">int</span><span class="token punctuation">,</span> avg <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sum <span class="token operator">=</span> a <span class="token operator">+</span> b
    avg <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span>

    <span class="token keyword">return</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> a<span class="token punctuation">,</span> b <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span>
    c <span class="token operator">:=</span> <span class="token function">add</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>
    sum<span class="token punctuation">,</span> avg <span class="token operator">:=</span> <span class="token function">calc</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> sum<span class="token punctuation">,</span> avg<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">3</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></details><ol start="3"><li>Golang\u8FD4\u56DE\u503C\u4E0D\u80FD\u7528\u5BB9\u5668\u5BF9\u8C61\u63A5\u6536\u591A\u8FD4\u56DE\u503C\u3002\u53EA\u80FD\u7528\u591A\u4E2A\u53D8\u91CF\uFF0C\u6216 <code>&quot;_&quot;</code> \u5FFD\u7565\u3002</li></ol><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">func</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// s := make([]int, 2)</span>
    <span class="token comment">// s = test()   // Error: multiple-value test() in single-value context</span>

    x<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">println</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></details><ol start="4"><li>\u591A\u8FD4\u56DE\u503C\u53EF\u76F4\u63A5\u4F5C\u4E3A\u5176\u4ED6\u51FD\u6570\u8C03\u7528\u5B9E\u53C2\u3002</li></ol><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">func</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">+</span> y
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">sum</span><span class="token punctuation">(</span>n <span class="token operator">...</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> x <span class="token builtin">int</span>
    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> n <span class="token punctuation">{</span>
        x <span class="token operator">+=</span> i
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> x
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token number">3</span>
<span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></details><ol start="5"><li>\u547D\u540D\u8FD4\u56DE\u53C2\u6570\u53EF\u770B\u505A\u4E0E\u5F62\u53C2\u7C7B\u4F3C\u7684\u5C40\u90E8\u53D8\u91CF\uFF0C\u6700\u540E\u7531 return \u9690\u5F0F\u8FD4\u56DE\u3002</li></ol><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">func</span> <span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>z <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    z <span class="token operator">=</span> x <span class="token operator">+</span> y
    <span class="token keyword">return</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></details><ol start="6"><li>\u547D\u540D\u8FD4\u56DE\u53C2\u6570\u53EF\u88AB\u540C\u540D\u5C40\u90E8\u53D8\u91CF\u906E\u853D\uFF0C\u6B64\u65F6\u9700\u8981\u663E\u5F0F\u8FD4\u56DE\u3002</li></ol><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>z <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">{</span> <span class="token comment">// \u4E0D\u80FD\u5728\u4E00\u4E2A\u7EA7\u522B\uFF0C\u5F15\u53D1 &quot;z redeclared in this block&quot; \u9519\u8BEF\u3002</span>
        <span class="token keyword">var</span> z <span class="token operator">=</span> x <span class="token operator">+</span> y
        <span class="token comment">// return   // Error: z is shadowed during return</span>
        <span class="token keyword">return</span> z <span class="token comment">// \u5FC5\u987B\u663E\u5F0F\u8FD4\u56DE\u3002</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></details><ol start="7"><li>\u547D\u540D\u8FD4\u56DE\u53C2\u6570\u5141\u8BB8 defer \u5EF6\u8FDF\u8C03\u7528\u901A\u8FC7\u95ED\u5305\u8BFB\u53D6\u548C\u4FEE\u6539\u3002</li></ol><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">func</span> <span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>z <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        z <span class="token operator">+=</span> <span class="token number">100</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    z <span class="token operator">=</span> x <span class="token operator">+</span> y
    <span class="token keyword">return</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token number">103</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></details><ol start="8"><li>\u663E\u5F0F return \u8FD4\u56DE\u524D\uFF0C\u4F1A\u5148\u4FEE\u6539\u547D\u540D\u8FD4\u56DE\u53C2\u6570\u3002</li></ol><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">func</span> <span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>z <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">println</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span> <span class="token comment">// \u8F93\u51FA: 203</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    z <span class="token operator">=</span> x <span class="token operator">+</span> y
    <span class="token keyword">return</span> z <span class="token operator">+</span> <span class="token number">200</span> <span class="token comment">// \u6267\u884C\u987A\u5E8F: (z = z + 200) -&gt; (call defer) -&gt; (return)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u8F93\u51FA: 203</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>203
203
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></details><h3 id="_1-5-\u533F\u540D\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_1-5-\u533F\u540D\u51FD\u6570" aria-hidden="true">#</a> 1.5 \u533F\u540D\u51FD\u6570</h3><p>\u533F\u540D\u51FD\u6570\u662F\u6307\u4E0D\u9700\u8981\u5B9A\u4E49\u51FD\u6570\u540D\u7684\u4E00\u79CD\u51FD\u6570\u5B9E\u73B0\u65B9\u5F0F\u30021958\u5E74LISP\u9996\u5148\u91C7\u7528\u533F\u540D\u51FD\u6570\u3002</p><p>\u5728Go\u91CC\u9762\uFF0C\u51FD\u6570\u53EF\u4EE5\u50CF\u666E\u901A\u53D8\u91CF\u4E00\u6837\u88AB\u4F20\u9012\u6216\u4F7F\u7528\uFF0CGo\u8BED\u8A00\u652F\u6301\u968F\u65F6\u5728\u4EE3\u7801\u91CC\u5B9A\u4E49\u533F\u540D\u51FD\u6570\u3002</p><p>\u533F\u540D\u51FD\u6570\u7531\u4E00\u4E2A\u4E0D\u5E26\u51FD\u6570\u540D\u7684\u51FD\u6570\u58F0\u660E\u548C\u51FD\u6570\u4F53\u7EC4\u6210\u3002\u533F\u540D\u51FD\u6570\u7684\u4F18\u8D8A\u6027\u5728\u4E8E\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528\u51FD\u6570\u5185\u7684\u53D8\u91CF\uFF0C\u4E0D\u5FC5\u7533\u660E\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;math&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    getSqrt <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>a <span class="token builtin">float64</span><span class="token punctuation">)</span> <span class="token builtin">float64</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> math<span class="token punctuation">.</span><span class="token function">Sqrt</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">getSqrt</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u4E0A\u9762\u5148\u5B9A\u4E49\u4E86\u4E00\u4E2A\u540D\u4E3AgetSqrt \u7684\u53D8\u91CF\uFF0C\u521D\u59CB\u5316\u8BE5\u53D8\u91CF\u65F6\u548C\u4E4B\u524D\u7684\u53D8\u91CF\u521D\u59CB\u5316\u6709\u4E9B\u4E0D\u540C\uFF0C\u4F7F\u7528\u4E86func\uFF0Cfunc\u662F\u5B9A\u4E49\u51FD\u6570\u7684\uFF0C\u53EF\u662F\u8FD9\u4E2A\u51FD\u6570\u548C\u4E0A\u9762\u8BF4\u7684\u51FD\u6570\u6700\u5927\u4E0D\u540C\u5C31\u662F\u6CA1\u6709\u51FD\u6570\u540D\uFF0C\u4E5F\u5C31\u662F\u533F\u540D\u51FD\u6570\u3002\u8FD9\u91CC\u5C06\u4E00\u4E2A\u51FD\u6570\u5F53\u505A\u4E00\u4E2A\u53D8\u91CF\u4E00\u6837\u7684\u64CD\u4F5C\u3002</p><p>Golang\u533F\u540D\u51FD\u6570\u53EF\u8D4B\u503C\u7ED9\u53D8\u91CF\uFF0C\u505A\u4E3A\u7ED3\u6784\u5B57\u6BB5\uFF0C\u6216\u8005\u5728 channel \u91CC\u4F20\u9001\u3002</p><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// --- function variable ---</span>
    fn <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, World!&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
    <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment">// --- function collection ---</span>
    fns <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>x <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">func</span><span class="token punctuation">(</span>x <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token keyword">func</span><span class="token punctuation">(</span>x <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token function">println</span><span class="token punctuation">(</span>fns<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment">// --- function as field ---</span>
    d <span class="token operator">:=</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>
        fn <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span>
    <span class="token punctuation">}</span><span class="token punctuation">{</span>
        fn<span class="token punctuation">:</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token string">&quot;Hello, World!&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token function">println</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token comment">// --- channel of function ---</span>
    fc <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
    fc <span class="token operator">&lt;-</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token string">&quot;Hello, World!&quot;</span> <span class="token punctuation">}</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">&lt;-</span>fc<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    Hello, World!
    101
    Hello, World!
    Hello, World!
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></details><h3 id="_1-6-\u95ED\u5305" tabindex="-1"><a class="header-anchor" href="#_1-6-\u95ED\u5305" aria-hidden="true">#</a> 1.6 \u95ED\u5305</h3><p>\u95ED\u5305\u7684\u5E94\u8BE5\u90FD\u542C\u8FC7\uFF0C\u4F46\u5230\u5E95\u4EC0\u4E48\u662F\u95ED\u5305\u5462\uFF1F</p><p>\u95ED\u5305\u662F\u7531\u51FD\u6570\u53CA\u5176\u76F8\u5173\u5F15\u7528\u73AF\u5883\u7EC4\u5408\u800C\u6210\u7684\u5B9E\u4F53(\u5373\uFF1A\u95ED\u5305=\u51FD\u6570+\u5F15\u7528\u73AF\u5883)\u3002</p><details class="custom-container details"><summary>\u53C8\u81ED\u53C8\u957F\u4E0D\u60F3\u770B</summary><p>\u201C\u5B98\u65B9\u201D\u7684\u89E3\u91CA\u662F\uFF1A\u6240\u8C13\u201C\u95ED\u5305\u201D\uFF0C\u6307\u7684\u662F\u4E00\u4E2A\u62E5\u6709\u8BB8\u591A\u53D8\u91CF\u548C\u7ED1\u5B9A\u4E86\u8FD9\u4E9B\u53D8\u91CF\u7684\u73AF\u5883\u7684\u8868\u8FBE\u5F0F\uFF08\u901A\u5E38\u662F\u4E00\u4E2A\u51FD\u6570\uFF09\uFF0C\u56E0\u800C\u8FD9\u4E9B\u53D8\u91CF\u4E5F\u662F\u8BE5\u8868\u8FBE\u5F0F\u7684\u4E00\u90E8\u5206\u3002</p><p>\u7EF4\u57FA\u767E\u79D1\u8BB2\uFF0C\u95ED\u5305\uFF08Closure\uFF09\uFF0C\u662F\u5F15\u7528\u4E86\u81EA\u7531\u53D8\u91CF\u7684\u51FD\u6570\u3002\u8FD9\u4E2A\u88AB\u5F15\u7528\u7684\u81EA\u7531\u53D8\u91CF\u5C06\u548C\u8FD9\u4E2A\u51FD\u6570\u4E00\u540C\u5B58\u5728\uFF0C\u5373\u4F7F\u5DF2\u7ECF\u79BB\u5F00\u4E86\u521B\u9020\u5B83\u7684\u73AF\u5883\u4E5F\u4E0D\u4F8B\u5916\u3002\u6240\u4EE5\uFF0C\u6709\u53E6\u4E00\u79CD\u8BF4\u6CD5\u8BA4\u4E3A\u95ED\u5305\u662F\u7531\u51FD\u6570\u548C\u4E0E\u5176\u76F8\u5173\u7684\u5F15\u7528\u73AF\u5883\u7EC4\u5408\u800C\u6210\u7684\u5B9E\u4F53\u3002\u95ED\u5305\u5728\u8FD0\u884C\u65F6\u53EF\u4EE5\u6709\u591A\u4E2A\u5B9E\u4F8B\uFF0C\u4E0D\u540C\u7684\u5F15\u7528\u73AF\u5883\u548C\u76F8\u540C\u7684\u51FD\u6570\u7EC4\u5408\u53EF\u4EE5\u4EA7\u751F\u4E0D\u540C\u7684\u5B9E\u4F8B\u3002</p><p>\u770B\u7740\u4E0A\u9762\u7684\u63CF\u8FF0\uFF0C\u4F1A\u53D1\u73B0\u95ED\u5305\u548C\u533F\u540D\u51FD\u6570\u4F3C\u4E4E\u6709\u4E9B\u50CF\u3002\u53EF\u662F\u53EF\u80FD\u8FD8\u662F\u6709\u4E9B\u4E91\u91CC\u96FE\u91CC\u7684\u3002\u56E0\u4E3A\u8DF3\u8FC7\u95ED\u5305\u7684\u521B\u5EFA\u8FC7\u7A0B\u76F4\u63A5\u7406\u89E3\u95ED\u5305\u7684\u5B9A\u4E49\u662F\u975E\u5E38\u56F0\u96BE\u7684\u3002\u76EE\u524D\u5728<code>JavaScript\u3001Go\u3001PHP\u3001Scala\u3001Scheme\u3001Common Lisp\u3001Smalltalk\u3001Groovy\u3001Ruby\u3001 Python\u3001Lua\u3001objective c\u3001Swift </code>\u4EE5\u53CA<code>Java8</code>\u4EE5\u4E0A\u7B49\u8BED\u8A00\u4E2D\u90FD\u80FD\u627E\u5230\u5BF9\u95ED\u5305\u4E0D\u540C\u7A0B\u5EA6\u7684\u652F\u6301\u3002\u901A\u8FC7\u652F\u6301\u95ED\u5305\u7684\u8BED\u6CD5\u53EF\u4EE5\u53D1\u73B0\u4E00\u4E2A\u7279\u70B9\uFF0C\u4ED6\u4EEC\u90FD\u6709\u5783\u573E\u56DE\u6536(<code>GC</code>)\u673A\u5236\u3002 javascript\u5E94\u8BE5\u662F\u666E\u53CA\u5EA6\u6BD4\u8F83\u9AD8\u7684\u7F16\u7A0B\u8BED\u8A00\u4E86\uFF0C\u901A\u8FC7\u8FD9\u4E2A\u6765\u4E3E\u4F8B\u5E94\u8BE5\u597D\u7406\u89E3\u5199\u3002\u770B\u4E0B\u9762\u7684\u4EE3\u7801\uFF0C\u53EA\u8981\u5173\u6CE8script\u91CC\u65B9\u6CD5\u7684\u5B9A\u4E49\u548C\u8C03\u7528\u5C31\u53EF\u4EE5\u4E86\u3002</p></details><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801\uFF08\u5B66\u8FC7js\u76F4\u63A5\u8DF3\u5427\uFF09</summary><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zh<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span> 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://ajax.googleapis.com/ajax/libs/jquery/1.2.6/jquery.min.js<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text/javascript<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">function</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">++</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;h1&gt;&quot;</span><span class="token operator">+</span>i<span class="token operator">+</span><span class="token string">&quot;&lt;/h1&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> c<span class="token operator">=</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//a(); //\u4E0D\u4F1A\u6709\u4FE1\u606F\u8F93\u51FA</span>
    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;h1&gt;=============&lt;/h1&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> c2<span class="token operator">=</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">c2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">c2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div><p>\u8FD9\u6BB5\u4EE3\u7801\u6709\u4E24\u4E2A\u7279\u70B9\uFF1A</p><p>\u51FD\u6570b\u5D4C\u5957\u5728\u51FD\u6570a\u5185\u90E8 \u51FD\u6570a\u8FD4\u56DE\u51FD\u6570b \u8FD9\u6837\u5728\u6267\u884C\u5B8Cvar c=a()\u540E\uFF0C\u53D8\u91CFc\u5B9E\u9645\u4E0A\u662F\u6307\u5411\u4E86\u51FD\u6570b()\uFF0C\u518D\u6267\u884C\u51FD\u6570c()\u540E\u5C31\u4F1A\u663E\u793Ai\u7684\u503C\uFF0C\u7B2C\u4E00\u6B21\u4E3A1\uFF0C\u7B2C\u4E8C\u6B21\u4E3A2\uFF0C\u7B2C\u4E09\u6B21\u4E3A3\uFF0C\u4EE5\u6B64\u7C7B\u63A8\u3002 \u5176\u5B9E\uFF0C\u8FD9\u6BB5\u4EE3\u7801\u5C31\u521B\u5EFA\u4E86\u4E00\u4E2A\u95ED\u5305\u3002\u56E0\u4E3A\u51FD\u6570a()\u5916\u7684\u53D8\u91CFc\u5F15\u7528\u4E86\u51FD\u6570a()\u5185\u7684\u51FD\u6570b()\uFF0C\u5C31\u662F\u8BF4\uFF1A</p><p>\u5F53\u51FD\u6570a()\u7684\u5185\u90E8\u51FD\u6570b()\u88AB\u51FD\u6570a()\u5916\u7684\u4E00\u4E2A\u53D8\u91CF\u5F15\u7528\u7684\u65F6\u5019\uFF0C\u5C31\u521B\u5EFA\u4E86\u4E00\u4E2A\u95ED\u5305\u3002 \u5728\u4E0A\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0C\u7531\u4E8E\u95ED\u5305\u7684\u5B58\u5728\u4F7F\u5F97\u51FD\u6570a()\u8FD4\u56DE\u540E\uFF0Ca\u4E2D\u7684i\u59CB\u7EC8\u5B58\u5728\uFF0C\u8FD9\u6837\u6BCF\u6B21\u6267\u884Cc()\uFF0Ci\u90FD\u662F\u81EA\u52A01\u540E\u7684\u503C\u3002 \u4ECE\u4E0A\u9762\u53EF\u4EE5\u770B\u51FA\u95ED\u5305\u7684\u4F5C\u7528\u5C31\u662F\u5728a()\u6267\u884C\u5B8C\u5E76\u8FD4\u56DE\u540E\uFF0C\u95ED\u5305\u4F7F\u5F97Javascript\u7684\u5783\u573E\u56DE\u6536\u673A\u5236GC\u4E0D\u4F1A\u6536\u56DEa()\u6240\u5360\u7528\u7684\u8D44\u6E90\uFF0C\u56E0\u4E3Aa()\u7684\u5185\u90E8\u51FD\u6570b()\u7684\u6267\u884C\u9700\u8981\u4F9D\u8D56a()\u4E2D\u7684\u53D8\u91CFi\u3002</p><p>\u5728\u7ED9\u5B9A\u51FD\u6570\u88AB\u591A\u6B21\u8C03\u7528\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u8FD9\u4E9B\u79C1\u6709\u53D8\u91CF\u80FD\u591F\u4FDD\u6301\u5176\u6301\u4E45\u6027\u3002\u53D8\u91CF\u7684\u4F5C\u7528\u57DF\u4EC5\u9650\u4E8E\u5305\u542B\u5B83\u4EEC\u7684\u51FD\u6570\uFF0C\u56E0\u6B64\u65E0\u6CD5\u4ECE\u5176\u5B83\u7A0B\u5E8F\u4EE3\u7801\u90E8\u5206\u8FDB\u884C\u8BBF\u95EE\u3002\u4E0D\u8FC7\uFF0C\u53D8\u91CF\u7684\u751F\u5B58\u671F\u662F\u53EF\u4EE5\u5F88\u957F\uFF0C\u5728\u4E00\u6B21\u51FD\u6570\u8C03\u7528\u671F\u95F4\u6240\u521B\u5EFA\u6240\u751F\u6210\u7684\u503C\u5728\u4E0B\u6B21\u51FD\u6570\u8C03\u7528\u65F6\u4ECD\u7136\u5B58\u5728\u3002\u6B63\u56E0\u4E3A\u8FD9\u4E00\u7279\u70B9\uFF0C\u95ED\u5305\u53EF\u4EE5\u7528\u6765\u5B8C\u6210\u4FE1\u606F\u9690\u85CF\uFF0C\u5E76\u8FDB\u800C\u5E94\u7528\u4E8E\u9700\u8981\u72B6\u6001\u8868\u8FBE\u7684\u67D0\u4E9B\u7F16\u7A0B\u8303\u578B\u4E2D\u3002 \u4E0B\u9762\u6765\u60F3\u8C61\u53E6\u4E00\u79CD\u60C5\u51B5\uFF0C\u5982\u679Ca()\u8FD4\u56DE\u7684\u4E0D\u662F\u51FD\u6570b()\uFF0C\u60C5\u51B5\u5C31\u5B8C\u5168\u4E0D\u540C\u4E86\u3002\u56E0\u4E3Aa()\u6267\u884C\u5B8C\u540E\uFF0Cb()\u6CA1\u6709\u88AB\u8FD4\u56DE\u7ED9a()\u7684\u5916\u754C\uFF0C\u53EA\u662F\u88ABa()\u6240\u5F15\u7528\uFF0C\u800C\u6B64\u65F6a()\u4E5F\u53EA\u4F1A\u88ABb()\u5F15 \u7528\uFF0C\u56E0\u6B64\u51FD\u6570a()\u548Cb()\u4E92\u76F8\u5F15\u7528\u4F46\u53C8\u4E0D\u88AB\u5916\u754C\u6253\u6270\uFF08\u88AB\u5916\u754C\u5F15\u7528\uFF09\uFF0C\u51FD\u6570a\u548Cb\u5C31\u4F1A\u88ABGC\u56DE\u6536\u3002\u6240\u4EE5\u76F4\u63A5\u8C03\u7528a();\u662F\u9875\u9762\u5E76\u6CA1\u6709\u4FE1\u606F\u8F93\u51FA\u3002</p><p>\u4E0B\u9762\u6765\u8BF4\u95ED\u5305\u7684\u53E6\u4E00\u8981\u7D20\u5F15\u7528\u73AF\u5883\u3002c()\u8DDFc2()\u5F15\u7528\u7684\u662F\u4E0D\u540C\u7684\u73AF\u5883\uFF0C\u5728\u8C03\u7528i++\u65F6\u4FEE\u6539\u7684\u4E0D\u662F\u540C\u4E00\u4E2Ai\uFF0C\u56E0\u6B64\u4E24\u6B21\u7684\u8F93\u51FA\u90FD\u662F1\u3002\u51FD\u6570a()\u6BCF\u8FDB\u5165\u4E00\u6B21\uFF0C\u5C31\u5F62\u6210\u4E86\u4E00\u4E2A\u65B0\u7684\u73AF\u5883\uFF0C\u5BF9\u5E94\u7684\u95ED\u5305\u4E2D\uFF0C\u51FD\u6570\u90FD\u662F\u540C\u4E00\u4E2A\u51FD\u6570\uFF0C\u73AF\u5883\u5374\u662F\u5F15\u7528\u4E0D\u540C\u7684\u73AF\u5883\u3002\u8FD9\u548Cc()\u548Cc()\u7684\u8C03\u7528\u987A\u5E8F\u90FD\u662F\u65E0\u5173\u7684\u3002</p></details><h4 id="go\u7684\u95ED\u5305" tabindex="-1"><a class="header-anchor" href="#go\u7684\u95ED\u5305" aria-hidden="true">#</a> Go\u7684\u95ED\u5305</h4><p>Go\u8BED\u8A00\u662F\u652F\u6301\u95ED\u5305\u7684\uFF0C\u8FD9\u91CC\u53EA\u662F\u7B80\u5355\u5730\u8BB2\u4E00\u4E0B\u5728Go\u8BED\u8A00\u4E2D\u95ED\u5305\u662F\u5982\u4F55\u5B9E\u73B0\u7684\u3002 \u4E0B\u9762\u6211\u6765\u5C06\u4E4B\u524D\u7684JavaScript\u7684\u95ED\u5305\u4F8B\u5B50\u7528Go\u6765\u5B9E\u73B0\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    i <span class="token operator">:=</span> <span class="token number">0</span>
    b <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
        i<span class="token operator">++</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
        <span class="token keyword">return</span> i
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> b
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    c <span class="token operator">:=</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u4E0D\u4F1A\u8F93\u51FAi</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    1
    2
    3
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u53EF\u4EE5\u53D1\u73B0\uFF0C\u8F93\u51FA\u548C\u4E4B\u524D\u7684JavaScript\u7684\u4EE3\u7801\u662F\u4E00\u81F4\u7684\u3002\u5177\u4F53\u7684\u539F\u56E0\u548C\u4E0A\u9762\u7684\u4E5F\u662F\u4E00\u6837\u7684\uFF0C\u8FD9\u8BF4\u660EGo\u8BED\u8A00\u662F\u652F\u6301\u95ED\u5305\u7684\u3002</p><p>\u95ED\u5305\u590D\u5236\u7684\u662F\u539F\u5BF9\u8C61\u6307\u9488\uFF0C\u8FD9\u5C31\u5F88\u5BB9\u6613\u89E3\u91CA\u5EF6\u8FDF\u5F15\u7528\u73B0\u8C61\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x <span class="token operator">:=</span> <span class="token number">100</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;x (%p) = %d\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>x<span class="token punctuation">,</span> x<span class="token punctuation">)</span>

    <span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;x (%p) = %d\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>x<span class="token punctuation">,</span> x<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    f <span class="token operator">:=</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u8F93\u51FA:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    x (0xc42007c008) = 100
    x (0xc42007c008) = 100
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u5728\u6C47\u7F16\u5C42 \uFF0Ctest \u5B9E\u9645\u8FD4\u56DE\u7684\u662F FuncVal \u5BF9\u8C61\uFF0C\u5176\u4E2D\u5305\u542B\u4E86\u533F\u540D\u51FD\u6570\u5730\u5740\u3001\u95ED\u5305\u5BF9\u8C61\u6307\u9488\u3002\u5F53\u8C03 \u533F\u540D\u51FD\u6570\u65F6\uFF0C\u53EA\u9700\u4EE5\u67D0\u4E2A\u5BC4\u5B58\u5668\u4F20\u9012\u8BE5\u5BF9\u8C61\u5373\u53EF\u3002</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    FuncVal { func_address, closure_var_pointer ... }
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u5916\u90E8\u5F15\u7528\u51FD\u6570\u53C2\u6570\u5C40\u90E8\u53D8\u91CF</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token comment">// \u5916\u90E8\u5F15\u7528\u51FD\u6570\u53C2\u6570\u5C40\u90E8\u53D8\u91CF</span>
<span class="token keyword">func</span> <span class="token function">add</span><span class="token punctuation">(</span>base <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>i <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
        base <span class="token operator">+=</span> i
        <span class="token keyword">return</span> base
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    tmp1 <span class="token operator">:=</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">tmp1</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">tmp1</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">// \u6B64\u65F6tmp1\u548Ctmp2\u4E0D\u662F\u4E00\u4E2A\u5B9E\u4F53\u4E86</span>
    tmp2 <span class="token operator">:=</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">tmp2</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">tmp2</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u8FD4\u56DE2\u4E2A\u95ED\u5305</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token comment">// \u8FD4\u56DE2\u4E2A\u51FD\u6570\u7C7B\u578B\u7684\u8FD4\u56DE\u503C</span>
<span class="token keyword">func</span> <span class="token function">test01</span><span class="token punctuation">(</span>base <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5B9A\u4E492\u4E2A\u51FD\u6570\uFF0C\u5E76\u8FD4\u56DE</span>
    <span class="token comment">// \u76F8\u52A0</span>
    add <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>i <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
        base <span class="token operator">+=</span> i
        <span class="token keyword">return</span> base
    <span class="token punctuation">}</span>
    <span class="token comment">// \u76F8\u51CF</span>
    sub <span class="token operator">:=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>i <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
        base <span class="token operator">-=</span> i
        <span class="token keyword">return</span> base
    <span class="token punctuation">}</span>
    <span class="token comment">// \u8FD4\u56DE</span>
    <span class="token keyword">return</span> add<span class="token punctuation">,</span> sub
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    f1<span class="token punctuation">,</span> f2 <span class="token operator">:=</span> <span class="token function">test01</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token comment">// base\u4E00\u76F4\u662F\u6CA1\u6709\u6D88</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">f1</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">f2</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">// \u6B64\u65F6base\u662F9</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token function">f1</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">f2</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h3 id="_1-7-go-\u8BED\u8A00\u9012\u5F52\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_1-7-go-\u8BED\u8A00\u9012\u5F52\u51FD\u6570" aria-hidden="true">#</a> 1.7 Go \u8BED\u8A00\u9012\u5F52\u51FD\u6570</h3><p>\u9012\u5F52\uFF0C\u5C31\u662F\u5728\u8FD0\u884C\u7684\u8FC7\u7A0B\u4E2D\u8C03\u7528\u81EA\u5DF1\u3002 \u4E00\u4E2A\u51FD\u6570\u8C03\u7528\u81EA\u5DF1\uFF0C\u5C31\u53EB\u505A\u9012\u5F52\u51FD\u6570\u3002</p><p>\u6784\u6210\u9012\u5F52\u9700\u5177\u5907\u7684\u6761\u4EF6\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token number">1</span>.\u5B50\u95EE\u9898\u987B\u4E0E\u539F\u59CB\u95EE\u9898\u4E3A\u540C\u6837\u7684\u4E8B\uFF0C\u4E14\u66F4\u4E3A\u7B80\u5355\u3002
<span class="token number">2</span>.\u4E0D\u80FD\u65E0\u9650\u5236\u5730\u8C03\u7528\u672C\u8EAB\uFF0C\u987B\u6709\u4E2A\u51FA\u53E3\uFF0C\u5316\u7B80\u4E3A\u975E\u9012\u5F52\u72B6\u51B5\u5904\u7406\u3002
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>\u6570\u5B57\u9636\u4E58</li></ul><p>\u4E00\u4E2A\u6B63\u6574\u6570\u7684\u9636\u4E58\uFF08factorial\uFF09\u662F\u6240\u6709\u5C0F\u4E8E\u53CA\u7B49\u4E8E\u8BE5\u6570\u7684\u6B63\u6574\u6570\u7684\u79EF\uFF0C\u5E76\u4E140\u7684\u9636\u4E58\u4E3A1\u3002\u81EA\u7136\u6570n\u7684\u9636\u4E58\u5199\u4F5Cn!\u30021808\u5E74\uFF0C\u57FA\u65AF\u987F\xB7\u5361\u66FC\u5F15\u8FDB\u8FD9\u4E2A\u8868\u793A\u6CD5\u3002</p><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">factorial</span><span class="token punctuation">(</span>i <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> i <span class="token operator">&lt;=</span> <span class="token number">1</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">1</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> i <span class="token operator">*</span> <span class="token function">factorial</span><span class="token punctuation">(</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> i <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token number">7</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Factorial of %d is %d\\n&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token function">factorial</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    Factorial of 7 is 5040
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></details><ul><li>\u6590\u6CE2\u90A3\u5951\u6570\u5217(Fibonacci)</li></ul><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><p>\u8FD9\u4E2A\u6570\u5217\u4ECE\u7B2C3\u9879\u5F00\u59CB\uFF0C\u6BCF\u4E00\u9879\u90FD\u7B49\u4E8E\u524D\u4E24\u9879\u4E4B\u548C\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">fibonaci</span><span class="token punctuation">(</span>i <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token number">1</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">fibonaci</span><span class="token punctuation">(</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">fibonaci</span><span class="token punctuation">(</span>i<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> i <span class="token builtin">int</span>
    <span class="token keyword">for</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d\\n&quot;</span><span class="token punctuation">,</span> <span class="token function">fibonaci</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    0
    1
    1
    2
    3
    5
    8
    13
    21
    34
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></details><h3 id="_1-8-golang\u5EF6\u8FDF\u8C03\u7528" tabindex="-1"><a class="header-anchor" href="#_1-8-golang\u5EF6\u8FDF\u8C03\u7528" aria-hidden="true">#</a> 1.8 Golang\u5EF6\u8FDF\u8C03\u7528\uFF1A</h3><div class="custom-container tip"><p class="custom-container-title">defer\u7684\u7279\u6027</p><ol><li>\u5173\u952E\u5B57 defer \u7528\u4E8E\u6CE8\u518C\u5EF6\u8FDF\u8C03\u7528\u3002</li><li>\u8FD9\u4E9B\u8C03\u7528\u76F4\u5230 return \u524D\u624D\u88AB\u6267\u3002\u56E0\u6B64\uFF0C\u53EF\u4EE5\u7528\u6765\u505A\u8D44\u6E90\u6E05\u7406\u3002</li><li>\u591A\u4E2Adefer\u8BED\u53E5\uFF0C\u6309\u5148\u8FDB\u540E\u51FA\u7684\u65B9\u5F0F\u6267\u884C\u3002</li><li>defer\u8BED\u53E5\u4E2D\u7684\u53D8\u91CF\uFF0C\u5728defer\u58F0\u660E\u65F6\u5C31\u51B3\u5B9A\u4E86\u3002</li></ol></div><div class="custom-container warning"><p class="custom-container-title">defer\u7528\u9014\uFF1A</p><ol><li>\u5173\u95ED\u6587\u4EF6\u53E5\u67C4</li><li>\u9501\u8D44\u6E90\u91CA\u653E</li><li>\u6570\u636E\u5E93\u8FDE\u63A5\u91CA\u653E</li></ol></div><h4 id="go\u8BED\u8A00-defer" tabindex="-1"><a class="header-anchor" href="#go\u8BED\u8A00-defer" aria-hidden="true">#</a> go\u8BED\u8A00 defer</h4><p>go \u8BED\u8A00\u7684defer\u529F\u80FD\u5F3A\u5927\uFF0C\u5BF9\u4E8E\u8D44\u6E90\u7BA1\u7406\u975E\u5E38\u65B9\u4FBF\uFF0C\u4F46\u662F\u5982\u679C\u6CA1\u7528\u597D\uFF0C\u4E5F\u4F1A\u6709\u9677\u9631\u3002</p><p>defer \u662F\u5148\u8FDB\u540E\u51FA</p><p>\u8FD9\u4E2A\u5F88\u81EA\u7136,\u540E\u9762\u7684\u8BED\u53E5\u4F1A\u4F9D\u8D56\u524D\u9762\u7684\u8D44\u6E90\uFF0C\u56E0\u6B64\u5982\u679C\u5148\u524D\u9762\u7684\u8D44\u6E90\u5148\u91CA\u653E\u4E86\uFF0C\u540E\u9762\u7684\u8BED\u53E5\u5C31\u6CA1\u6CD5\u6267\u884C\u4E86\u3002</p><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> whatever <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> whatever <span class="token punctuation">{</span>
        <span class="token keyword">defer</span> fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token number">4</span>
<span class="token number">3</span>
<span class="token number">2</span>
<span class="token number">1</span>
<span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></details><h4 id="defer-\u78B0\u4E0A\u95ED\u5305" tabindex="-1"><a class="header-anchor" href="#defer-\u78B0\u4E0A\u95ED\u5305" aria-hidden="true">#</a> defer \u78B0\u4E0A\u95ED\u5305</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> whatever <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token keyword">range</span> whatever <span class="token punctuation">{</span>
        <span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><details class="custom-container details"><summary>\u8F93\u51FA\u7ED3\u679C\uFF1A</summary><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token number">4</span>
<span class="token number">4</span>
<span class="token number">4</span>
<span class="token number">4</span>
<span class="token number">4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></details><p>\u5176\u5B9Ego\u8BF4\u7684\u5F88\u6E05\u695A,\u6211\u4EEC\u4E00\u8D77\u6765\u770B\u770Bgo spec\u5982\u4F55\u8BF4\u7684</p><p><code>Each time a &quot;defer&quot; statement executes, the function value and parameters to the call are evaluated as usualand saved anew but the actual function is not invoked.</code></p><p>\u4E5F\u5C31\u662F\u8BF4\u51FD\u6570\u6B63\u5E38\u6267\u884C,\u7531\u4E8E\u95ED\u5305\u7528\u5230\u7684\u53D8\u91CF i \u5728\u6267\u884C\u7684\u65F6\u5019\u5DF2\u7ECF\u53D8\u62104,\u6240\u4EE5\u8F93\u51FA\u5168\u90FD\u662F4.</p><h4 id="defer-f-close" tabindex="-1"><a class="header-anchor" href="#defer-f-close" aria-hidden="true">#</a> defer f.Close</h4><p>\u8FD9\u4E2A\u5927\u5BB6\u7528\u7684\u90FD\u5F88\u9891\u7E41,\u4F46\u662Fgo\u8BED\u8A00\u7F16\u7A0B\u4E3E\u4E86\u4E00\u4E2A\u53EF\u80FD\u4E00\u4E0D\u5C0F\u5FC3\u4F1A\u72AF\u9519\u7684\u4F8B\u5B50.</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">type</span> Test <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    name <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>t <span class="token operator">*</span>Test<span class="token punctuation">)</span> <span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">&quot; closed&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ts <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>Test<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> t <span class="token operator">:=</span> <span class="token keyword">range</span> ts <span class="token punctuation">{</span>
        <span class="token keyword">defer</span> t<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><details class="custom-container details"><summary>\u8F93\u51FA\u7ED3\u679C\uFF1A</summary><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>c  closed
c  closed
c  closed
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u8FD9\u4E2A\u8F93\u51FA\u5E76\u4E0D\u4F1A\u50CF\u6211\u4EEC\u9884\u8BA1\u7684\u8F93\u51FAc b a,\u800C\u662F\u8F93\u51FAc c c</p><p>\u53EF\u662F\u6309\u7167\u524D\u9762\u7684go spec\u4E2D\u7684\u8BF4\u660E,\u5E94\u8BE5\u8F93\u51FAc b a\u624D\u5BF9\u554A.</p></details><p>\u90A3\u6211\u4EEC\u6362\u4E00\u79CD\u65B9\u5F0F\u6765\u8C03\u7528\u4E00\u4E0B.</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">type</span> Test <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    name <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>t <span class="token operator">*</span>Test<span class="token punctuation">)</span> <span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">&quot; closed&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">Close</span><span class="token punctuation">(</span>t Test<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    t<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ts <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>Test<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> t <span class="token operator">:=</span> <span class="token keyword">range</span> ts <span class="token punctuation">{</span>
        <span class="token keyword">defer</span> <span class="token function">Close</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><details class="custom-container details"><summary>\u8F93\u51FA\u7ED3\u679C\uFF1A</summary><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    c  closed
    b  closed
    a  closed
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u8FD9\u4E2A\u65F6\u5019\u8F93\u51FA\u7684\u5C31\u662Fc b a</p></details><p>\u5F53\u7136,\u5982\u679C\u4F60\u4E0D\u60F3\u591A\u5199\u4E00\u4E2A\u51FD\u6570,\u4E5F\u5F88\u7B80\u5355,\u53EF\u4EE5\u50CF\u4E0B\u9762\u8FD9\u6837,\u540C\u6837\u4F1A\u8F93\u51FAc b a</p><details class="custom-container details"><summary>\u770B\u4F3C\u591A\u6B64\u4E00\u4E3E\u7684\u58F0\u660E</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">type</span> Test <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    name <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>t <span class="token operator">*</span>Test<span class="token punctuation">)</span> <span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">&quot; closed&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ts <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>Test<span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> t <span class="token operator">:=</span> <span class="token keyword">range</span> ts <span class="token punctuation">{</span>
        t2 <span class="token operator">:=</span> t
        <span class="token keyword">defer</span> t2<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    c  closed
    b  closed
    a  closed
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></details><p>\u901A\u8FC7\u4EE5\u4E0A\u4F8B\u5B50\uFF0C\u7ED3\u5408</p><p><code>Each time a &quot;defer&quot; statement executes, the function value and parameters to the call are evaluated as usualand saved anew but the actual function is not invoked.</code></p><p>\u8FD9\u53E5\u8BDD\u3002\u53EF\u4EE5\u5F97\u51FA\u4E0B\u9762\u7684\u7ED3\u8BBA\uFF1A</p><p>defer\u540E\u9762\u7684\u8BED\u53E5\u5728\u6267\u884C\u7684\u65F6\u5019\uFF0C\u51FD\u6570\u8C03\u7528\u7684\u53C2\u6570\u4F1A\u88AB\u4FDD\u5B58\u8D77\u6765\uFF0C\u4F46\u662F\u4E0D\u6267\u884C\u3002\u4E5F\u5C31\u662F\u590D\u5236\u4E86\u4E00\u4EFD\u3002\u4F46\u662F\u5E76\u6CA1\u6709\u8BF4struct\u8FD9\u91CC\u7684this\u6307\u9488\u5982\u4F55\u5904\u7406\uFF0C\u901A\u8FC7\u8FD9\u4E2A\u4F8B\u5B50\u53EF\u4EE5\u770B\u51FAgo\u8BED\u8A00\u5E76\u6CA1\u6709\u628A\u8FD9\u4E2A\u660E\u786E\u5199\u51FA\u6765\u7684this\u6307\u9488\u5F53\u4F5C\u53C2\u6570\u6765\u770B\u5F85\u3002</p><p>\u591A\u4E2A defer \u6CE8\u518C\uFF0C\u6309 FILO \u6B21\u5E8F\u6267\u884C ( \u5148\u8FDB\u540E\u51FA )\u3002\u54EA\u6015\u51FD\u6570\u6216\u67D0\u4E2A\u5EF6\u8FDF\u8C03\u7528\u53D1\u751F\u9519\u8BEF\uFF0C\u8FD9\u4E9B\u8C03\u7528\u4F9D\u65E7\u4F1A\u88AB\u6267\u884C\u3002</p><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">func</span> <span class="token function">test</span><span class="token punctuation">(</span>x <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">defer</span> <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">defer</span> <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">println</span><span class="token punctuation">(</span><span class="token number">100</span> <span class="token operator">/</span> x<span class="token punctuation">)</span> <span class="token comment">// div0 \u5F02\u5E38\u672A\u88AB\u6355\u83B7\uFF0C\u9010\u6B65\u5F80\u5916\u4F20\u9012\uFF0C\u6700\u7EC8\u7EC8\u6B62\u8FDB\u7A0B\u3002</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">defer</span> <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">test</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>c
b
a
panic: runtime error: integer divide by zero
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></details><ul><li>\u5EF6\u8FDF\u8C03\u7528\u53C2\u6570\u5728\u6CE8\u518C\u65F6\u6C42\u503C\u6216\u590D\u5236\uFF0C\u53EF\u7528\u6307\u9488\u6216\u95ED\u5305 &quot;\u5EF6\u8FDF&quot; \u8BFB\u53D6\u3002</li></ul><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">func</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x<span class="token punctuation">,</span> y <span class="token operator">:=</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span>

    <span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span>i <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;defer:&quot;</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token comment">// y \u95ED\u5305\u5F15\u7528</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token comment">// x \u88AB\u590D\u5236</span>

    x <span class="token operator">+=</span> <span class="token number">10</span>
    y <span class="token operator">+=</span> <span class="token number">100</span>
    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;x =&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> <span class="token string">&quot;y =&quot;</span><span class="token punctuation">,</span> y<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    x = 20 y = 120
    defer: 10 120
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></details><ul><li>\u6EE5\u7528 defer \u53EF\u80FD\u4F1A\u5BFC\u81F4\u6027\u80FD\u95EE\u9898\uFF0C\u5C24\u5176\u662F\u5728\u4E00\u4E2A &quot;\u5927\u5FAA\u73AF&quot; \u91CC\u3002</li></ul><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;sync&quot;</span>
    <span class="token string">&quot;time&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">var</span> lock sync<span class="token punctuation">.</span>Mutex

<span class="token keyword">func</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    lock<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    lock<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">testdefer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    lock<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">defer</span> lock<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        t1 <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

        <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10000</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
            <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        elapsed <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Since</span><span class="token punctuation">(</span>t1<span class="token punctuation">)</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;test elapsed: &quot;</span><span class="token punctuation">,</span> elapsed<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        t1 <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

        <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10000</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span>
            <span class="token function">testdefer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        elapsed <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Since</span><span class="token punctuation">(</span>t1<span class="token punctuation">)</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;testdefer elapsed: &quot;</span><span class="token punctuation">,</span> elapsed<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    test elapsed:  223.162\xB5s
    testdefer elapsed:  781.304\xB5s
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></details><h3 id="_1-9-defer\u9677\u9631" tabindex="-1"><a class="header-anchor" href="#_1-9-defer\u9677\u9631" aria-hidden="true">#</a> 1.9 defer\u9677\u9631</h3><h4 id="defer-\u4E0E-closure" tabindex="-1"><a class="header-anchor" href="#defer-\u4E0E-closure" aria-hidden="true">#</a> defer \u4E0E closure</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;errors&quot;</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">foo</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>i <span class="token builtin">int</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">defer</span> fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;first defer err %v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
    <span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span>err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;second defer err %v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;third defer err %v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> b <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
        err <span class="token operator">=</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">&quot;divided by zero!&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>

    i <span class="token operator">=</span> a <span class="token operator">/</span> b
    <span class="token keyword">return</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">foo</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><details class="custom-container details"><summary>\u8F93\u51FA\u7ED3\u679C\uFF1A</summary><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    third defer err divided by zero!
    second defer err &lt;nil&gt;
    first defer err &lt;nil&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u89E3\u91CA\uFF1A\u5982\u679C defer \u540E\u9762\u8DDF\u7684\u4E0D\u662F\u4E00\u4E2A closure \u6700\u540E\u6267\u884C\u7684\u65F6\u5019\u6211\u4EEC\u5F97\u5230\u7684\u5E76\u4E0D\u662F\u6700\u65B0\u7684\u503C\u3002</p></details><h4 id="defer-\u4E0E-return" tabindex="-1"><a class="header-anchor" href="#defer-\u4E0E-return" aria-hidden="true">#</a> defer \u4E0E return</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">func</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>i <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    i <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">return</span> <span class="token number">2</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><details class="custom-container details"><summary>\u8F93\u51FA\u7ED3\u679C\uFF1A</summary><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    2
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u89E3\u91CA\uFF1A\u5728\u6709\u5177\u540D\u8FD4\u56DE\u503C\u7684\u51FD\u6570\u4E2D\uFF08\u8FD9\u91CC\u5177\u540D\u8FD4\u56DE\u503C\u4E3A i\uFF09\uFF0C\u6267\u884C return 2 \u7684\u65F6\u5019\u5B9E\u9645\u4E0A\u5DF2\u7ECF\u5C06 i \u7684\u503C\u91CD\u65B0\u8D4B\u503C\u4E3A 2\u3002\u6240\u4EE5defer closure \u8F93\u51FA\u7ED3\u679C\u4E3A 2 \u800C\u4E0D\u662F 1\u3002</p></details><h4 id="defer-nil-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#defer-nil-\u51FD\u6570" aria-hidden="true">#</a> defer nil \u51FD\u6570</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> run <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token boolean">nil</span>
    <span class="token keyword">defer</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;runs&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> err <span class="token operator">:=</span> <span class="token function">recover</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><details class="custom-container details"><summary>\u8F93\u51FA\u7ED3\u679C\uFF1A</summary><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>runs
runtime error: invalid memory address or nil pointer dereference
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u89E3\u91CA\uFF1A\u540D\u4E3A test \u7684\u51FD\u6570\u4E00\u76F4\u8FD0\u884C\u81F3\u7ED3\u675F\uFF0C\u7136\u540E defer \u51FD\u6570\u4F1A\u88AB\u6267\u884C\u4E14\u4F1A\u56E0\u4E3A\u503C\u4E3A nil \u800C\u4EA7\u751F panic \u5F02\u5E38\u3002\u7136\u800C\u503C\u5F97\u6CE8\u610F\u7684\u662F\uFF0Crun() \u7684\u58F0\u660E\u662F\u6CA1\u6709\u95EE\u9898\uFF0C\u56E0\u4E3A\u5728test\u51FD\u6570\u8FD0\u884C\u5B8C\u6210\u540E\u5B83\u624D\u4F1A\u88AB\u8C03\u7528\u3002</p></details><h4 id="\u5728\u9519\u8BEF\u7684\u4F4D\u7F6E\u4F7F\u7528-defer" tabindex="-1"><a class="header-anchor" href="#\u5728\u9519\u8BEF\u7684\u4F4D\u7F6E\u4F7F\u7528-defer" aria-hidden="true">#</a> \u5728\u9519\u8BEF\u7684\u4F4D\u7F6E\u4F7F\u7528 defer</h4><p>\u5F53 http.Get \u5931\u8D25\u65F6\u4F1A\u629B\u51FA\u5F02\u5E38\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;net/http&quot;</span>

<span class="token keyword">func</span> <span class="token function">do</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">,</span> err <span class="token operator">:=</span> http<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;http://www.google.com&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">defer</span> res<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> err
    <span class="token punctuation">}</span>

    <span class="token comment">// ..code...</span>

    <span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">do</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><details class="custom-container details"><summary>\u8F93\u51FA\u7ED3\u679C\uFF1A</summary><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    panic: runtime error: invalid memory address or nil pointer dereference
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u56E0\u4E3A\u5728\u8FD9\u91CC\u6211\u4EEC\u5E76\u6CA1\u6709\u68C0\u67E5\u6211\u4EEC\u7684\u8BF7\u6C42\u662F\u5426\u6210\u529F\u6267\u884C\uFF0C\u5F53\u5B83\u5931\u8D25\u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u8BBF\u95EE\u4E86 Body \u4E2D\u7684\u7A7A\u53D8\u91CF res \uFF0C\u56E0\u6B64\u4F1A\u629B\u51FA\u5F02\u5E38</p><h4 id="\u89E3\u51B3\u65B9\u6848" tabindex="-1"><a class="header-anchor" href="#\u89E3\u51B3\u65B9\u6848" aria-hidden="true">#</a> \u89E3\u51B3\u65B9\u6848</h4><p>\u603B\u662F\u5728\u4E00\u6B21\u6210\u529F\u7684\u8D44\u6E90\u5206\u914D\u4E0B\u9762\u4F7F\u7528 defer \uFF0C\u5BF9\u4E8E\u8FD9\u79CD\u60C5\u51B5\u6765\u8BF4\u610F\u5473\u7740\uFF1A\u5F53\u4E14\u4EC5\u5F53 http.Get \u6210\u529F\u6267\u884C\u65F6\u624D\u4F7F\u7528 defer</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;net/http&quot;</span>

<span class="token keyword">func</span> <span class="token function">do</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">,</span> err <span class="token operator">:=</span> http<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;http://xxxxxxxxxx&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> res <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">defer</span> res<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> err
    <span class="token punctuation">}</span>

    <span class="token comment">// ..code...</span>

    <span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">do</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>\u5728\u4E0A\u8FF0\u7684\u4EE3\u7801\u4E2D\uFF0C\u5F53\u6709\u9519\u8BEF\u7684\u65F6\u5019\uFF0Cerr \u4F1A\u88AB\u8FD4\u56DE\uFF0C\u5426\u5219\u5F53\u6574\u4E2A\u51FD\u6570\u8FD4\u56DE\u7684\u65F6\u5019\uFF0C\u4F1A\u5173\u95ED res.Body \u3002</p><p>\u89E3\u91CA\uFF1A\u5728\u8FD9\u91CC\uFF0C\u4F60\u540C\u6837\u9700\u8981\u68C0\u67E5 res \u7684\u503C\u662F\u5426\u4E3A nil \uFF0C\u8FD9\u662F http.Get \u4E2D\u7684\u4E00\u4E2A\u8B66\u544A\u3002\u901A\u5E38\u60C5\u51B5\u4E0B\uFF0C\u51FA\u9519\u7684\u65F6\u5019\uFF0C\u8FD4\u56DE\u7684\u5185\u5BB9\u5E94\u4E3A\u7A7A\u5E76\u4E14\u9519\u8BEF\u4F1A\u88AB\u8FD4\u56DE\uFF0C\u53EF\u5F53\u4F60\u83B7\u5F97\u7684\u662F\u4E00\u4E2A\u91CD\u5B9A\u5411 error \u65F6\uFF0C res \u7684\u503C\u5E76\u4E0D\u4F1A\u4E3A nil \uFF0C\u4F46\u5176\u53C8\u4F1A\u5C06\u9519\u8BEF\u8FD4\u56DE\u3002\u4E0A\u9762\u7684\u4EE3\u7801\u4FDD\u8BC1\u4E86\u65E0\u8BBA\u5982\u4F55 Body \u90FD\u4F1A\u88AB\u5173\u95ED\uFF0C\u5982\u679C\u4F60\u6CA1\u6709\u6253\u7B97\u4F7F\u7528\u5176\u4E2D\u7684\u6570\u636E\uFF0C\u90A3\u4E48\u4F60\u8FD8\u9700\u8981\u4E22\u5F03\u5DF2\u7ECF\u63A5\u6536\u7684\u6570\u636E\u3002</p></details><h4 id="\u4E0D\u68C0\u67E5\u9519\u8BEF" tabindex="-1"><a class="header-anchor" href="#\u4E0D\u68C0\u67E5\u9519\u8BEF" aria-hidden="true">#</a> \u4E0D\u68C0\u67E5\u9519\u8BEF</h4><details class="custom-container details"><summary>\u67E5\u770B\u8BE6\u60C5</summary><p>\u5728\u8FD9\u91CC\uFF0Cf.Close() \u53EF\u80FD\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u9519\u8BEF\uFF0C\u53EF\u8FD9\u4E2A\u9519\u8BEF\u4F1A\u88AB\u6211\u4EEC\u5FFD\u7565\u6389</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;os&quot;</span>

<span class="token keyword">func</span> <span class="token function">do</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
    f<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">&quot;book.txt&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> err
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> f <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">defer</span> f<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// ..code...</span>

    <span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">do</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>\u6539\u8FDB\u4E00\u4E0B</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;os&quot;</span>

<span class="token keyword">func</span> <span class="token function">do</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
    f<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">&quot;book.txt&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> err
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> f <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> err <span class="token operator">:=</span> f<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
                <span class="token comment">// log etc</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// ..code...</span>

    <span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">do</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>\u518D\u6539\u8FDB\u4E00\u4E0B</p><p>\u901A\u8FC7\u547D\u540D\u7684\u8FD4\u56DE\u53D8\u91CF\u6765\u8FD4\u56DE defer \u5185\u7684\u9519\u8BEF\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;os&quot;</span>

<span class="token keyword">func</span> <span class="token function">do</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    f<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">&quot;book.txt&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> err
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> f <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> ferr <span class="token operator">:=</span> f<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> ferr <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
                err <span class="token operator">=</span> ferr
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// ..code...</span>

    <span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">do</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>\u91CA\u653E\u76F8\u540C\u7684\u8D44\u6E90</p><p>\u5982\u679C\u4F60\u5C1D\u8BD5\u4F7F\u7528\u76F8\u540C\u7684\u53D8\u91CF\u91CA\u653E\u4E0D\u540C\u7684\u8D44\u6E90\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u64CD\u4F5C\u53EF\u80FD\u65E0\u6CD5\u6B63\u5E38\u6267\u884C\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;os&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">do</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
    f<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">&quot;book.txt&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> err
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> f <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> err <span class="token operator">:=</span> f<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
                fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;defer close book.txt err %v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// ..code...</span>

    f<span class="token punctuation">,</span> err <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">&quot;another-book.txt&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> err
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> f <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> err <span class="token operator">:=</span> f<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
                fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;defer close another-book.txt err %v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">do</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A defer close book.txt err close ./another-book.txt: file already closed</p><p>\u5F53\u5EF6\u8FDF\u51FD\u6570\u6267\u884C\u65F6\uFF0C\u53EA\u6709\u6700\u540E\u4E00\u4E2A\u53D8\u91CF\u4F1A\u88AB\u7528\u5230\uFF0C\u56E0\u6B64\uFF0Cf \u53D8\u91CF \u4F1A\u6210\u4E3A\u6700\u540E\u90A3\u4E2A\u8D44\u6E90 (another-book.txt)\u3002\u800C\u4E14\u4E24\u4E2A defer \u90FD\u4F1A\u5C06\u8FD9\u4E2A\u8D44\u6E90\u4F5C\u4E3A\u6700\u540E\u7684\u8D44\u6E90\u6765\u5173\u95ED</p><p>\u89E3\u51B3\u65B9\u6848\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;io&quot;</span>
    <span class="token string">&quot;os&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">do</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
    f<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">&quot;book.txt&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> err
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> f <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span>f io<span class="token punctuation">.</span>Closer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> err <span class="token operator">:=</span> f<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
                fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;defer close book.txt err %v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// ..code...</span>

    f<span class="token punctuation">,</span> err <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">&quot;another-book.txt&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> err
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> f <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span>f io<span class="token punctuation">.</span>Closer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> err <span class="token operator">:=</span> f<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
                fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;defer close another-book.txt err %v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">do</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div></details><h2 id="_2-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_2-\u65B9\u6CD5" aria-hidden="true">#</a> 2. \u65B9\u6CD5</h2><p>\u4E00\u4E2A\u65B9\u6CD5\u5C31\u662F\u4E00\u4E2A\u5305\u542B\u4E86\u63A5\u53D7\u8005\u7684\u51FD\u6570\uFF0C\u63A5\u53D7\u8005\u53EF\u4EE5\u662F\u547D\u540D\u7C7B\u578B\u6216\u8005\u7ED3\u6784\u4F53\u7C7B\u578B\u7684\u4E00\u4E2A\u503C\u6216\u8005\u662F\u4E00\u4E2A\u6307\u9488\u3002</p><h3 id="_2-1-\u65B9\u6CD5\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#_2-1-\u65B9\u6CD5\u5B9A\u4E49" aria-hidden="true">#</a> 2.1. \u65B9\u6CD5\u5B9A\u4E49</h3><p>Golang \u65B9\u6CD5\u603B\u662F\u7ED1\u5B9A\u5BF9\u8C61\u5B9E\u4F8B\uFF0C\u5E76\u9690\u5F0F\u5C06\u5B9E\u4F8B\u4F5C\u4E3A\u7B2C\u4E00\u5B9E\u53C2 (<code>receiver</code>)\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>recevier <span class="token keyword">type</span><span class="token punctuation">)</span> <span class="token function">methodName</span><span class="token punctuation">(</span>\u53C2\u6570\u5217\u8868<span class="token punctuation">)</span><span class="token punctuation">(</span>\u8FD4\u56DE\u503C\u5217\u8868<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// \u53C2\u6570\u548C\u8FD4\u56DE\u503C\u53EF\u4EE5\u7701\u7565</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u2022 \u53EA\u80FD\u4E3A\u5F53\u524D\u5305\u5185\u547D\u540D\u7C7B\u578B\u5B9A\u4E49\u65B9\u6CD5\u3002</p><p>\u2022 \u53C2\u6570 <code>receiver</code> \u53EF\u4EFB\u610F\u547D\u540D\u3002\u5982\u65B9\u6CD5\u4E2D\u672A\u66FE\u4F7F\u7528 \uFF0C\u53EF\u7701\u7565\u53C2\u6570\u540D\u3002</p><p>\u2022 \u53C2\u6570 <code>receiver</code> \u7C7B\u578B\u53EF\u4EE5\u662F<code>T</code>\u6216<code> *T</code>\u3002\u57FA\u7C7B\u578B<code>T</code>\u4E0D\u80FD\u662F\u63A5\u53E3\u6216\u6307\u9488\u3002</p><p>\u2022 \u4E0D\u652F\u6301\u65B9\u6CD5\u91CD\u8F7D\uFF0C<code>receiver</code> \u53EA\u662F\u53C2\u6570\u7B7E\u540D\u7684\u7EC4\u6210\u90E8\u5206\u3002</p><p>\u2022 \u53EF\u7528\u5B9E\u4F8B <code>value</code> \u6216 <code>pointer</code> \u8C03\u7528\u5168\u90E8\u65B9\u6CD5\uFF0C\u7F16\u8BD1\u5668\u81EA\u52A8\u8F6C\u6362\u3002</p></div><p>\u6240\u6709\u7ED9\u5B9A\u7C7B\u578B\u7684\u65B9\u6CD5\u5C5E\u4E8E\u8BE5\u7C7B\u578B\u7684\u65B9\u6CD5\u96C6\u3002</p><details class="custom-container details"><summary>\u65B9\u6CD5\u7684\u57FA\u7840\u67B6\u6784</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">type</span> Test <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// \u65E0\u53C2\u6570\u3001\u65E0\u8FD4\u56DE\u503C</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>t Test<span class="token punctuation">)</span> <span class="token function">method0</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5355\u53C2\u6570\u3001\u65E0\u8FD4\u56DE\u503C</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>t Test<span class="token punctuation">)</span> <span class="token function">method1</span><span class="token punctuation">(</span>i <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u591A\u53C2\u6570\u3001\u65E0\u8FD4\u56DE\u503C</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>t Test<span class="token punctuation">)</span> <span class="token function">method2</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u65E0\u53C2\u6570\u3001\u5355\u8FD4\u56DE\u503C</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>t Test<span class="token punctuation">)</span> <span class="token function">method3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>i <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u591A\u53C2\u6570\u3001\u591A\u8FD4\u56DE\u503C</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>t Test<span class="token punctuation">)</span> <span class="token function">method4</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>z <span class="token builtin">int</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u65E0\u53C2\u6570\u3001\u65E0\u8FD4\u56DE\u503C</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>t <span class="token operator">*</span>Test<span class="token punctuation">)</span> <span class="token function">method5</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u5355\u53C2\u6570\u3001\u65E0\u8FD4\u56DE\u503C</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>t <span class="token operator">*</span>Test<span class="token punctuation">)</span> <span class="token function">method6</span><span class="token punctuation">(</span>i <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u591A\u53C2\u6570\u3001\u65E0\u8FD4\u56DE\u503C</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>t <span class="token operator">*</span>Test<span class="token punctuation">)</span> <span class="token function">method7</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u65E0\u53C2\u6570\u3001\u5355\u8FD4\u56DE\u503C</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>t <span class="token operator">*</span>Test<span class="token punctuation">)</span> <span class="token function">method8</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>i <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u591A\u53C2\u6570\u3001\u591A\u8FD4\u56DE\u503C</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>t <span class="token operator">*</span>Test<span class="token punctuation">)</span> <span class="token function">method9</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>z <span class="token builtin">int</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br></div></div></details><p>\u4E0B\u9762\u5B9A\u4E49\u4E00\u4E2A\u7ED3\u6784\u4F53\u7C7B\u578B\u548C\u8BE5\u7C7B\u578B\u7684\u4E00\u4E2A\u65B9\u6CD5\uFF1A</p><details class="custom-container details"><summary>\u67E5\u770B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">//\u7ED3\u6784\u4F53</span>
<span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    Name  <span class="token builtin">string</span>
    Email <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u65B9\u6CD5</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>u User<span class="token punctuation">)</span> <span class="token function">Notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%v : %v \\n&quot;</span><span class="token punctuation">,</span> u<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> u<span class="token punctuation">.</span>Email<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u503C\u7C7B\u578B\u8C03\u7528\u65B9\u6CD5</span>
    u1 <span class="token operator">:=</span> User<span class="token punctuation">{</span><span class="token string">&quot;golang&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;golang@golang.com&quot;</span><span class="token punctuation">}</span>
    u1<span class="token punctuation">.</span><span class="token function">Notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u6307\u9488\u7C7B\u578B\u8C03\u7528\u65B9\u6CD5</span>
    u2 <span class="token operator">:=</span> User<span class="token punctuation">{</span><span class="token string">&quot;go&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;go@go.com&quot;</span><span class="token punctuation">}</span>
    u3 <span class="token operator">:=</span> <span class="token operator">&amp;</span>u2
    u3<span class="token punctuation">.</span><span class="token function">Notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    golang : golang@golang.com 
    go : go@go.com
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u89E3\u91CA\uFF1A \u9996\u5148\u6211\u4EEC\u5B9A\u4E49\u4E86\u4E00\u4E2A\u53EB\u505A User \u7684\u7ED3\u6784\u4F53\u7C7B\u578B\uFF0C\u7136\u540E\u5B9A\u4E49\u4E86\u4E00\u4E2A\u8BE5\u7C7B\u578B\u7684\u65B9\u6CD5\u53EB\u505A Notify\uFF0C\u8BE5\u65B9\u6CD5\u7684\u63A5\u53D7\u8005\u662F\u4E00\u4E2A User \u7C7B\u578B\u7684\u503C\u3002\u8981\u8C03\u7528 Notify \u65B9\u6CD5\u6211\u4EEC\u9700\u8981\u4E00\u4E2A User \u7C7B\u578B\u7684\u503C\u6216\u8005\u6307\u9488\u3002</p><p>\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\u5F53\u6211\u4EEC\u4F7F\u7528\u6307\u9488\u65F6\uFF0CGo \u8C03\u6574\u548C\u89E3\u5F15\u7528\u6307\u9488\u4F7F\u5F97\u8C03\u7528\u53EF\u4EE5\u88AB\u6267\u884C\u3002\u6CE8\u610F\uFF0C\u5F53\u63A5\u53D7\u8005\u4E0D\u662F\u4E00\u4E2A\u6307\u9488\u65F6\uFF0C\u8BE5\u65B9\u6CD5\u64CD\u4F5C\u5BF9\u5E94\u63A5\u53D7\u8005\u7684\u503C\u7684\u526F\u672C(\u610F\u601D\u5C31\u662F\u5373\u4F7F\u4F60\u4F7F\u7528\u4E86\u6307\u9488\u8C03\u7528\u51FD\u6570\uFF0C\u4F46\u662F\u51FD\u6570\u7684\u63A5\u53D7\u8005\u662F\u503C\u7C7B\u578B\uFF0C\u6240\u4EE5\u51FD\u6570\u5185\u90E8\u64CD\u4F5C\u8FD8\u662F\u5BF9\u526F\u672C\u7684\u64CD\u4F5C\uFF0C\u800C\u4E0D\u662F\u6307\u9488\u64CD\u4F5C\u3002</p><p>\u6211\u4EEC\u4FEE\u6539 Notify \u65B9\u6CD5\uFF0C\u8BA9\u5B83\u7684\u63A5\u53D7\u8005\u4F7F\u7528\u6307\u9488\u7C7B\u578B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">//\u7ED3\u6784\u4F53</span>
<span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    Name  <span class="token builtin">string</span>
    Email <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u65B9\u6CD5</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>u <span class="token operator">*</span>User<span class="token punctuation">)</span> <span class="token function">Notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%v : %v \\n&quot;</span><span class="token punctuation">,</span> u<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> u<span class="token punctuation">.</span>Email<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u503C\u7C7B\u578B\u8C03\u7528\u65B9\u6CD5</span>
    u1 <span class="token operator">:=</span> User<span class="token punctuation">{</span><span class="token string">&quot;golang&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;golang@golang.com&quot;</span><span class="token punctuation">}</span>
    u1<span class="token punctuation">.</span><span class="token function">Notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment">// \u6307\u9488\u7C7B\u578B\u8C03\u7528\u65B9\u6CD5</span>
    u2 <span class="token operator">:=</span> User<span class="token punctuation">{</span><span class="token string">&quot;go&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;go@go.com&quot;</span><span class="token punctuation">}</span>
    u3 <span class="token operator">:=</span> <span class="token operator">&amp;</span>u2
    u3<span class="token punctuation">.</span><span class="token function">Notify</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    golang : golang@golang.com 
    go : go@go.com
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u6CE8\u610F\uFF1A\u5F53\u63A5\u53D7\u8005\u662F\u6307\u9488\u65F6\uFF0C\u5373\u4F7F\u7528\u503C\u7C7B\u578B\u8C03\u7528\u90A3\u4E48\u51FD\u6570\u5185\u90E8\u4E5F\u662F\u5BF9\u6307\u9488\u7684\u64CD\u4F5C\u3002</p><p>\u65B9\u6CD5\u4E0D\u8FC7\u662F\u4E00\u79CD\u7279\u6B8A\u7684\u51FD\u6570\uFF0C\u53EA\u9700\u5C06\u5176\u8FD8\u539F\uFF0C\u5C31\u77E5\u9053 receiver T \u548C <code>*T</code> \u7684\u5DEE\u522B\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">type</span> Data <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    x <span class="token builtin">int</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>self Data<span class="token punctuation">)</span> <span class="token function">ValueTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// func ValueTest(self Data);</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Value: %p\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>self<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>self <span class="token operator">*</span>Data<span class="token punctuation">)</span> <span class="token function">PointerTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// func PointerTest(self *Data);</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Pointer: %p\\n&quot;</span><span class="token punctuation">,</span> self<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    d <span class="token operator">:=</span> Data<span class="token punctuation">{</span><span class="token punctuation">}</span>
    p <span class="token operator">:=</span> <span class="token operator">&amp;</span>d
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Data: %p\\n&quot;</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span>

    d<span class="token punctuation">.</span><span class="token function">ValueTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">// ValueTest(d)</span>
    d<span class="token punctuation">.</span><span class="token function">PointerTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// PointerTest(&amp;d)</span>

    p<span class="token punctuation">.</span><span class="token function">ValueTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment">// ValueTest(*p)</span>
    p<span class="token punctuation">.</span><span class="token function">PointerTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// PointerTest(p)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><p>\u8F93\u51FA:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    Data: 0xc42007c008
    Value: 0xc42007c018
    Pointer: 0xc42007c008
    Value: 0xc42007c020
    Pointer: 0xc42007c008
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></details><h2 id="_3-\u666E\u901A\u51FD\u6570\u4E0E\u65B9\u6CD5\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#_3-\u666E\u901A\u51FD\u6570\u4E0E\u65B9\u6CD5\u7684\u533A\u522B" aria-hidden="true">#</a> 3. \u666E\u901A\u51FD\u6570\u4E0E\u65B9\u6CD5\u7684\u533A\u522B</h2><p>1.\u5BF9\u4E8E\u666E\u901A\u51FD\u6570\uFF0C\u63A5\u6536\u8005\u4E3A\u503C\u7C7B\u578B\u65F6\uFF0C\u4E0D\u80FD\u5C06\u6307\u9488\u7C7B\u578B\u7684\u6570\u636E\u76F4\u63A5\u4F20\u9012\uFF0C\u53CD\u4E4B\u4EA6\u7136\u3002</p><p>2.\u5BF9\u4E8E\u65B9\u6CD5\uFF08\u5982struct\u7684\u65B9\u6CD5\uFF09\uFF0C\u63A5\u6536\u8005\u4E3A\u503C\u7C7B\u578B\u65F6\uFF0C\u53EF\u4EE5\u76F4\u63A5\u7528\u6307\u9488\u7C7B\u578B\u7684\u53D8\u91CF\u8C03\u7528\u65B9\u6CD5\uFF0C\u53CD\u8FC7\u6765\u540C\u6837\u4E5F\u53EF\u4EE5\u3002</p><details class="custom-container details"><summary>\u67E5\u770B\u793A\u4F8B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token comment">//\u666E\u901A\u51FD\u6570\u4E0E\u65B9\u6CD5\u7684\u533A\u522B\uFF08\u5728\u63A5\u6536\u8005\u5206\u522B\u4E3A\u503C\u7C7B\u578B\u548C\u6307\u9488\u7C7B\u578B\u7684\u65F6\u5019\uFF09</span>

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">//1.\u666E\u901A\u51FD\u6570</span>
<span class="token comment">//\u63A5\u6536\u503C\u7C7B\u578B\u53C2\u6570\u7684\u51FD\u6570</span>
<span class="token keyword">func</span> <span class="token function">valueIntTest</span><span class="token punctuation">(</span>a <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a <span class="token operator">+</span> <span class="token number">10</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u63A5\u6536\u6307\u9488\u7C7B\u578B\u53C2\u6570\u7684\u51FD\u6570</span>
<span class="token keyword">func</span> <span class="token function">pointerIntTest</span><span class="token punctuation">(</span>a <span class="token operator">*</span><span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">int</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">*</span>a <span class="token operator">+</span> <span class="token number">10</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">structTestValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    a <span class="token operator">:=</span> <span class="token number">2</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;valueIntTest:&quot;</span><span class="token punctuation">,</span> <span class="token function">valueIntTest</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">//\u51FD\u6570\u7684\u53C2\u6570\u4E3A\u503C\u7C7B\u578B\uFF0C\u5219\u4E0D\u80FD\u76F4\u63A5\u5C06\u6307\u9488\u4F5C\u4E3A\u53C2\u6570\u4F20\u9012</span>
    <span class="token comment">//fmt.Println(&quot;valueIntTest:&quot;, valueIntTest(&amp;a))</span>
    <span class="token comment">//compile error: cannot use &amp;a (type *int) as type int in function argument</span>

    b <span class="token operator">:=</span> <span class="token number">5</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;pointerIntTest:&quot;</span><span class="token punctuation">,</span> <span class="token function">pointerIntTest</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">//\u540C\u6837\uFF0C\u5F53\u51FD\u6570\u7684\u53C2\u6570\u4E3A\u6307\u9488\u7C7B\u578B\u65F6\uFF0C\u4E5F\u4E0D\u80FD\u76F4\u63A5\u5C06\u503C\u7C7B\u578B\u4F5C\u4E3A\u53C2\u6570\u4F20\u9012</span>
    <span class="token comment">//fmt.Println(&quot;pointerIntTest:&quot;, pointerIntTest(b))</span>
    <span class="token comment">//compile error:cannot use b (type int) as type *int in function argument</span>
<span class="token punctuation">}</span>

<span class="token comment">//2.\u65B9\u6CD5</span>
<span class="token keyword">type</span> PersonD <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    id   <span class="token builtin">int</span>
    name <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u63A5\u6536\u8005\u4E3A\u503C\u7C7B\u578B</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>p PersonD<span class="token punctuation">)</span> <span class="token function">valueShowName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>name<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u63A5\u6536\u8005\u4E3A\u6307\u9488\u7C7B\u578B</span>
<span class="token keyword">func</span> <span class="token punctuation">(</span>p <span class="token operator">*</span>PersonD<span class="token punctuation">)</span> <span class="token function">pointShowName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>name<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">structTestFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u503C\u7C7B\u578B\u8C03\u7528\u65B9\u6CD5</span>
    personValue <span class="token operator">:=</span> PersonD<span class="token punctuation">{</span><span class="token number">101</span><span class="token punctuation">,</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">}</span>
    personValue<span class="token punctuation">.</span><span class="token function">valueShowName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    personValue<span class="token punctuation">.</span><span class="token function">pointShowName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment">//\u6307\u9488\u7C7B\u578B\u8C03\u7528\u65B9\u6CD5</span>
    personPointer <span class="token operator">:=</span> <span class="token operator">&amp;</span>PersonD<span class="token punctuation">{</span><span class="token number">102</span><span class="token punctuation">,</span> <span class="token string">&quot;hello golang&quot;</span><span class="token punctuation">}</span>
    personPointer<span class="token punctuation">.</span><span class="token function">valueShowName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    personPointer<span class="token punctuation">.</span><span class="token function">pointShowName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment">//\u4E0E\u666E\u901A\u51FD\u6570\u4E0D\u540C\uFF0C\u63A5\u6536\u8005\u4E3A\u6307\u9488\u7C7B\u578B\u548C\u503C\u7C7B\u578B\u7684\u65B9\u6CD5\uFF0C\u6307\u9488\u7C7B\u578B\u548C\u503C\u7C7B\u578B\u7684\u53D8\u91CF\u5747\u53EF\u76F8\u4E92\u8C03\u7528</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">structTestValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token function">structTestFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>valueIntTest: <span class="token number">12</span>
pointerIntTest: <span class="token number">15</span>
hello world
hello world
hello golang
hello golang
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></details><h2 id="_4-\u6269\u5C55" tabindex="-1"><a class="header-anchor" href="#_4-\u6269\u5C55" aria-hidden="true">#</a> 4. \u6269\u5C55</h2><h3 id="_4-1-\u8868\u8FBE\u5F0F" tabindex="-1"><a class="header-anchor" href="#_4-1-\u8868\u8FBE\u5F0F" aria-hidden="true">#</a> 4.1. \u8868\u8FBE\u5F0F</h3><p>Golang \u8868\u8FBE\u5F0F \uFF1A\u6839\u636E\u8C03\u7528\u8005\u4E0D\u540C\uFF0C\u65B9\u6CD5\u5206\u4E3A\u4E24\u79CD\u8868\u73B0\u5F62\u5F0F:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>    instance<span class="token punctuation">.</span><span class="token function">method</span><span class="token punctuation">(</span>args<span class="token operator">...</span><span class="token punctuation">)</span> <span class="token operator">--</span><span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">type</span><span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token keyword">func</span><span class="token punctuation">(</span>instance<span class="token punctuation">,</span> args<span class="token operator">...</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>\u524D\u8005\u79F0\u4E3A method value\uFF0C\u540E\u8005 method expression\u3002</p><ol><li>\u4E24\u8005\u90FD\u53EF\u50CF\u666E\u901A\u51FD\u6570\u90A3\u6837\u8D4B\u503C\u548C\u4F20\u53C2\uFF0C\u533A\u522B\u5728\u4E8E method value \u7ED1\u5B9A\u5B9E\u4F8B\uFF0C\u800C method expression \u5219\u987B\u663E\u5F0F\u4F20\u53C2\u3002</li></ol><details class="custom-container details"><summary>\u67E5\u770B\u793A\u4F8B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    id   <span class="token builtin">int</span>
    name <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>self <span class="token operator">*</span>User<span class="token punctuation">)</span> <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%p, %v\\n&quot;</span><span class="token punctuation">,</span> self<span class="token punctuation">,</span> self<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    u <span class="token operator">:=</span> User<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;Tom&quot;</span><span class="token punctuation">}</span>
    u<span class="token punctuation">.</span><span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    mValue <span class="token operator">:=</span> u<span class="token punctuation">.</span>Test
    <span class="token function">mValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u9690\u5F0F\u4F20\u9012 receiver</span>

    mExpression <span class="token operator">:=</span> <span class="token punctuation">(</span><span class="token operator">*</span>User<span class="token punctuation">)</span><span class="token punctuation">.</span>Test
    <span class="token function">mExpression</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>u<span class="token punctuation">)</span> <span class="token comment">// \u663E\u5F0F\u4F20\u9012 receiver</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>    0xc42000a060, <span class="token operator">&amp;</span><span class="token punctuation">{</span><span class="token number">1</span> Tom<span class="token punctuation">}</span>
    0xc42000a060, <span class="token operator">&amp;</span><span class="token punctuation">{</span><span class="token number">1</span> Tom<span class="token punctuation">}</span>
    0xc42000a060, <span class="token operator">&amp;</span><span class="token punctuation">{</span><span class="token number">1</span> Tom<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></details><ol start="2"><li>\u9700\u8981\u6CE8\u610F\uFF0Cmethod value \u4F1A\u590D\u5236 receiver\u3002</li></ol><details class="custom-container details"><summary>\u67E5\u770B\u793A\u4F8B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    id   <span class="token builtin">int</span>
    name <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>self User<span class="token punctuation">)</span> <span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    u <span class="token operator">:=</span> User<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;Tom&quot;</span><span class="token punctuation">}</span>
    mValue <span class="token operator">:=</span> u<span class="token punctuation">.</span>Test <span class="token comment">// \u7ACB\u5373\u590D\u5236 receiver\uFF0C\u56E0\u4E3A\u4E0D\u662F\u6307\u9488\u7C7B\u578B\uFF0C\u4E0D\u53D7\u540E\u7EED\u4FEE\u6539\u5F71\u54CD\u3002</span>

    u<span class="token punctuation">.</span>id<span class="token punctuation">,</span> u<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;Jack&quot;</span>
    u<span class="token punctuation">.</span><span class="token function">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token function">mValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>    {2 Jack}
    {1 Tom}
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></details><ol start="3"><li>\u5728\u6C47\u7F16\u5C42\u9762\uFF0Cmethod value \u548C\u95ED\u5305\u7684\u5B9E\u73B0\u65B9\u5F0F\u76F8\u540C\uFF0C\u5B9E\u9645\u8FD4\u56DE FuncVal \u7C7B\u578B\u5BF9\u8C61\u3002</li></ol><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>FuncVal <span class="token punctuation">{</span> method_address<span class="token punctuation">,</span> receiver_copy <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="4"><li>\u53EF\u4F9D\u636E\u65B9\u6CD5\u96C6\u8F6C\u6362 method expression\uFF0C\u6CE8\u610F receiver \u7C7B\u578B\u7684\u5DEE\u5F02\u3002</li></ol><details class="custom-container details"><summary>\u67E5\u770B\u793A\u4F8B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token keyword">type</span> User <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    id   <span class="token builtin">int</span>
    name <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>self <span class="token operator">*</span>User<span class="token punctuation">)</span> <span class="token function">TestPointer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;TestPointer: %p, %v\\n&quot;</span><span class="token punctuation">,</span> self<span class="token punctuation">,</span> self<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>self User<span class="token punctuation">)</span> <span class="token function">TestValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;TestValue: %p, %v\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>self<span class="token punctuation">,</span> self<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    u <span class="token operator">:=</span> User<span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;Tom&quot;</span><span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;User: %p, %v\\n&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>u<span class="token punctuation">,</span> u<span class="token punctuation">)</span>

    mv <span class="token operator">:=</span> User<span class="token punctuation">.</span>TestValue
    <span class="token function">mv</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span>

    mp <span class="token operator">:=</span> <span class="token punctuation">(</span><span class="token operator">*</span>User<span class="token punctuation">)</span><span class="token punctuation">.</span>TestPointer
    <span class="token function">mp</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>u<span class="token punctuation">)</span>

    mp2 <span class="token operator">:=</span> <span class="token punctuation">(</span><span class="token operator">*</span>User<span class="token punctuation">)</span><span class="token punctuation">.</span>TestValue <span class="token comment">// *User \u65B9\u6CD5\u96C6\u5305\u542B TestValue\u3002\u7B7E\u540D\u53D8\u4E3A func TestValue(self *User)\u3002\u5B9E\u9645\u4F9D\u7136\u662F receiver value copy\u3002</span>
    <span class="token function">mp2</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>u<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><p>\u8F93\u51FA:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>User: 0xc42000a060, <span class="token punctuation">{</span><span class="token number">1</span> Tom<span class="token punctuation">}</span>
TestValue: 0xc42000a0a0, <span class="token punctuation">{</span><span class="token number">1</span> Tom<span class="token punctuation">}</span>
TestPointer: 0xc42000a060, <span class="token operator">&amp;</span><span class="token punctuation">{</span><span class="token number">1</span> Tom<span class="token punctuation">}</span>
TestValue: 0xc42000a100, <span class="token punctuation">{</span><span class="token number">1</span> Tom<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u5C06\u65B9\u6CD5 &quot;\u8FD8\u539F&quot; \u6210\u51FD\u6570\uFF0C\u5C31\u5BB9\u6613\u7406\u89E3\u4E0B\u9762\u7684\u4EE3\u7801\u4E86\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">type</span> Data <span class="token keyword">struct</span><span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>Data<span class="token punctuation">)</span> <span class="token function">TestValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span><span class="token operator">*</span>Data<span class="token punctuation">)</span> <span class="token function">TestPointer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> p <span class="token operator">*</span>Data <span class="token operator">=</span> <span class="token boolean">nil</span>
    p<span class="token punctuation">.</span><span class="token function">TestPointer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token punctuation">(</span><span class="token operator">*</span>Data<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">TestPointer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// method value</span>
    <span class="token punctuation">(</span><span class="token operator">*</span>Data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">TestPointer</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">)</span>   <span class="token comment">// method expression</span>

    <span class="token comment">// p.TestValue()            // invalid memory address or nil pointer dereference</span>

    <span class="token comment">// (Data)(nil).TestValue()  // cannot convert nil to type Data</span>
    <span class="token comment">// Data.TestValue(nil)      // cannot use nil as type Data in function argument</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div></details><h3 id="_4-2-\u81EA\u5B9A\u4E49error" tabindex="-1"><a class="header-anchor" href="#_4-2-\u81EA\u5B9A\u4E49error" aria-hidden="true">#</a> 4.2 \u81EA\u5B9A\u4E49error</h3><p>\u629B\u5F02\u5E38\u548C\u5904\u7406\u5F02\u5E38</p><ul><li>\u7CFB\u7EDF\u629B</li></ul><details class="custom-container details"><summary>\u67E5\u770B\u793A\u4F8B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span>

<span class="token comment">// \u7CFB\u7EDF\u629B</span>
<span class="token keyword">func</span> <span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   a <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token builtin">int</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">}</span>
   a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">123</span>
   fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
   <span class="token comment">//a[10] = 11</span>
   index <span class="token operator">:=</span> <span class="token number">10</span>
   a<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">10</span>
   fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">getCircleArea</span><span class="token punctuation">(</span>radius <span class="token builtin">float32</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>area <span class="token builtin">float32</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">if</span> radius <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u81EA\u5DF1\u629B</span>
      <span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">&quot;\u534A\u5F84\u4E0D\u80FD\u4E3A\u8D1F&quot;</span><span class="token punctuation">)</span>
   <span class="token punctuation">}</span>
   <span class="token keyword">return</span> <span class="token number">3.14</span> <span class="token operator">*</span> radius <span class="token operator">*</span> radius
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">test02</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token function">getCircleArea</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">//</span>
<span class="token keyword">func</span> <span class="token function">test03</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// \u5EF6\u65F6\u6267\u884C\u533F\u540D\u51FD\u6570</span>
   <span class="token comment">// \u5EF6\u65F6\u5230\u4F55\u65F6\uFF1F\uFF081\uFF09\u7A0B\u5E8F\u6B63\u5E38\u7ED3\u675F   \uFF082\uFF09\u53D1\u751F\u5F02\u5E38\u65F6</span>
   <span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// recover() \u590D\u6D3B \u6062\u590D</span>
      <span class="token comment">// \u4F1A\u8FD4\u56DE\u7A0B\u5E8F\u4E3A\u4EC0\u4E48\u6302\u4E86</span>
      <span class="token keyword">if</span> err <span class="token operator">:=</span> <span class="token function">recover</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
         fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
   <span class="token function">getCircleArea</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span>
   fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;\u8FD9\u91CC\u6709\u6CA1\u6709\u6267\u884C&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">test04</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span>
   <span class="token function">test03</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
   fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;test04&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token function">test04</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div><p>\u8F93\u51FA</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>\u534A\u5F84\u4E0D\u80FD\u4E3A\u8D1F
test04
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></details><ul><li>\u8FD4\u56DE\u5F02\u5E38</li></ul><details class="custom-container details"><summary>\u67E5\u770B\u793A\u4F8B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;errors&quot;</span>
	<span class="token string">&quot;fmt&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">getCircleArea</span><span class="token punctuation">(</span>radius <span class="token builtin">float32</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>area <span class="token builtin">float32</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> radius <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u6784\u5EFA\u4E2A\u5F02\u5E38\u5BF9\u8C61</span>
		err <span class="token operator">=</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">&quot;\u534A\u5F84\u4E0D\u80FD\u4E3A\u8D1F&quot;</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
	area <span class="token operator">=</span> <span class="token number">3.14</span> <span class="token operator">*</span> radius <span class="token operator">*</span> radius
	<span class="token keyword">return</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	area<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">getCircleArea</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;error=&gt;&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>area<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>\u8F93\u51FA</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">error</span><span class="token operator">=</span><span class="token operator">&gt;</span> \u534A\u5F84\u4E0D\u80FD\u4E3A\u8D1F
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></details><ul><li>\u81EA\u5B9A\u4E49error\uFF1A</li></ul><details class="custom-container details"><summary>\u67E5\u770B\u793A\u4F8B\u4EE3\u7801</summary><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;os&quot;</span>
    <span class="token string">&quot;time&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> PathError <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    path       <span class="token builtin">string</span>
    op         <span class="token builtin">string</span>
    createTime <span class="token builtin">string</span>
    message    <span class="token builtin">string</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token punctuation">(</span>p <span class="token operator">*</span>PathError<span class="token punctuation">)</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;path=%s \\nop=%s \\ncreateTime=%s \\nmessage=%s&quot;</span><span class="token punctuation">,</span> p<span class="token punctuation">.</span>path<span class="token punctuation">,</span>
        p<span class="token punctuation">.</span>op<span class="token punctuation">,</span> p<span class="token punctuation">.</span>createTime<span class="token punctuation">,</span> p<span class="token punctuation">.</span>message<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">Open</span><span class="token punctuation">(</span>filename <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>

    file<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token operator">&amp;</span>PathError<span class="token punctuation">{</span>
            path<span class="token punctuation">:</span>       filename<span class="token punctuation">,</span>
            op<span class="token punctuation">:</span>         <span class="token string">&quot;read&quot;</span><span class="token punctuation">,</span>
            message<span class="token punctuation">:</span>    err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            createTime<span class="token punctuation">:</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;%v&quot;</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">defer</span> file<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    err <span class="token operator">:=</span> <span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">&quot;/Users/5lmh/Desktop/go/src/test.txt&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">switch</span> v <span class="token operator">:=</span> err<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token keyword">type</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token operator">*</span>PathError<span class="token punctuation">:</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;get path error,&quot;</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span>
    <span class="token keyword">default</span><span class="token punctuation">:</span>

    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br></div></div><p>\u8F93\u51FA\u7ED3\u679C\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>get path error, <span class="token assign-left variable">path</span><span class="token operator">=</span>/Users/pprof/Desktop/go/src/test.txt 
<span class="token assign-left variable">op</span><span class="token operator">=</span>read 
<span class="token assign-left variable">createTime</span><span class="token operator">=</span><span class="token number">2018</span>-04-05 <span class="token number">11</span>:25:17.331915 +0800 CST <span class="token assign-left variable">m</span><span class="token operator">=</span>+0.000441790 
<span class="token assign-left variable">message</span><span class="token operator">=</span>open /Users/pprof/Desktop/go/src/test.txt: no such <span class="token function">file</span> or directory
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></details>`,179);function L(H,J){const s=o("RouterLink");return c(),l(u,null,[n("nav",k,[n("ul",null,[n("li",null,[a(s,{to:"#\u51FD\u6570\u4E0E\u65B9\u6CD5"},{default:p(()=>[b]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#_1-\u51FD\u6570"},{default:p(()=>[m]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#_1-1-golang\u51FD\u6570\u7279\u70B9"},{default:p(()=>[d]),_:1})]),n("li",null,[a(s,{to:"#_1-2-\u51FD\u6570\u58F0\u660E"},{default:p(()=>[f]),_:1})]),n("li",null,[a(s,{to:"#_1-3-\u51FD\u6570\u53C2\u6570"},{default:p(()=>[g]),_:1})]),n("li",null,[a(s,{to:"#_1-4-\u51FD\u6570\u8FD4\u56DE\u503C"},{default:p(()=>[y]),_:1})]),n("li",null,[a(s,{to:"#_1-5-\u533F\u540D\u51FD\u6570"},{default:p(()=>[v]),_:1})]),n("li",null,[a(s,{to:"#_1-6-\u95ED\u5305"},{default:p(()=>[w]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#go\u7684\u95ED\u5305"},{default:p(()=>[h]),_:1})])])]),n("li",null,[a(s,{to:"#_1-7-go-\u8BED\u8A00\u9012\u5F52\u51FD\u6570"},{default:p(()=>[x]),_:1})]),n("li",null,[a(s,{to:"#_1-8-golang\u5EF6\u8FDF\u8C03\u7528"},{default:p(()=>[q]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#go\u8BED\u8A00-defer"},{default:p(()=>[_]),_:1})]),n("li",null,[a(s,{to:"#defer-\u78B0\u4E0A\u95ED\u5305"},{default:p(()=>[T]),_:1})]),n("li",null,[a(s,{to:"#defer-f-close"},{default:p(()=>[P]),_:1})])])]),n("li",null,[a(s,{to:"#_1-9-defer\u9677\u9631"},{default:p(()=>[V]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#defer-\u4E0E-closure"},{default:p(()=>[C]),_:1})]),n("li",null,[a(s,{to:"#defer-\u4E0E-return"},{default:p(()=>[U]),_:1})]),n("li",null,[a(s,{to:"#defer-nil-\u51FD\u6570"},{default:p(()=>[G]),_:1})]),n("li",null,[a(s,{to:"#\u5728\u9519\u8BEF\u7684\u4F4D\u7F6E\u4F7F\u7528-defer"},{default:p(()=>[N]),_:1})]),n("li",null,[a(s,{to:"#\u89E3\u51B3\u65B9\u6848"},{default:p(()=>[S]),_:1})]),n("li",null,[a(s,{to:"#\u4E0D\u68C0\u67E5\u9519\u8BEF"},{default:p(()=>[D]),_:1})])])])])]),n("li",null,[a(s,{to:"#_2-\u65B9\u6CD5"},{default:p(()=>[z]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#_2-1-\u65B9\u6CD5\u5B9A\u4E49"},{default:p(()=>[E]),_:1})])])]),n("li",null,[a(s,{to:"#_3-\u666E\u901A\u51FD\u6570\u4E0E\u65B9\u6CD5\u7684\u533A\u522B"},{default:p(()=>[I]),_:1})]),n("li",null,[a(s,{to:"#_4-\u6269\u5C55"},{default:p(()=>[F]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#_4-1-\u8868\u8FBE\u5F0F"},{default:p(()=>[O]),_:1})]),n("li",null,[a(s,{to:"#_4-2-\u81EA\u5B9A\u4E49error"},{default:p(()=>[j]),_:1})])])])])])])]),B],64)}var A=e(r,[["render",L],["__file","function_method.html.vue"]]);export{A as default};
